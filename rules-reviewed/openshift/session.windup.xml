<?xml version="1.0"?>
<ruleset id="session"
    xmlns="http://windup.jboss.org/schema/jboss-ruleset"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            This is a simple ruleset for detecting usage of data storage in HTTP session objects when migrating an application to a cloud environment.
        </description>
        <dependencies>
          <addon id="org.jboss.windup.rules,windup-rules-javaee,3.0.0.Final"/>
          <addon id="org.jboss.windup.rules,windup-rules-java,3.0.0.Final"/>
        </dependencies>
        <sourceTechnology id="java"/>
        <sourceTechnology id="java-ee"/>
        <targetTechnology id="cloud-readiness"/>
        <targetTechnology id="openshift"/>
        <tag>clustering</tag>
    </metadata>
    <rules>
        <rule id="session-00000">
            <when>
                <and>
                    <file filename="web.xml"/>
                    <not>
                        <filecontent filename="web.xml" pattern="distributable" />
                    </not>
                </and>
            </when>
            <perform>
                <hint title="HTTP Session replication" effort="5" category-id="openshift-mandatory">
                    <message>
                    <![CDATA[
                       The `web.xml` deployment descriptor for a Web application archive contains the `<distributable>` subelement.  
                       To configure EAP clustering in OpenShift, please follow the instruction in the following links:
                     ]]>
                    </message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html/development_guide/clustering_in_web_applications" title="JBoss EAP Clustering in Web Applications"/>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_middleware_for_openshift/3/html-single/red_hat_jboss_enterprise_application_platform_for_openshift/#clustering" title="JBoss EAP Clustering for OpenShift"/>
                    <tag>clustering</tag>
                </hint>
            </perform>
        </rule>

        <rule id="session-00001">
            <when>
                <javaclass references="javax.servlet.http.HttpSession.setAttribute({*})">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="HTTP Session usage" effort="3" category-id="openshift-optional">
                    <message>
                    <![CDATA[
                    Detect storage of custom data in Http session by `javax.http.HttpSession.setAttribute(...)`.  
                    Consider that a cloud-enabled application must be stateless.  
                    If required, session data must be distributed across all instances using a suitable caching framework.  
                    Anyway, it is also possible to handle session stickiness in OpenShift  
                    ]]>
                    </message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_middleware_for_openshift/3/html/red_hat_jboss_data_grid_for_openshift/" title="Red Hat JBoss Data Grid for OpenShift"/>
                    <link href="https://docs.openshift.com/container-platform/3.4/architecture/core_concepts/routes.html#haproxy-template-router" title="OpenShift: HAProxy Template Router - Sticky Session"/>
                    <tag>clustering</tag>
                </hint>
            </perform>
        </rule>

        <rule id="session-00002">
            <when>
                <javaclass references="javax.servlet.http.HttpSession.putValue({*})">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="HTTP Session usage" effort="3" category-id="openshift-optional">
                    <message>
                    <![CDATA[
                    Detect storage of custom data in Http session by `javax.http.HttpSession.putValue(...)`.  
                    Consider that a cloud-enabled application must be stateless.  
                    If required, session data must be distributed across all instances using a suitable caching framework.  
                    In addition, the `putValue()` method is deprecated.  
                    Anyway, it is also possible to handle session stickiness in OpenShift  
                    ]]>
                    </message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_middleware_for_openshift/3/html/red_hat_jboss_data_grid_for_openshift/" title="Red Hat JBoss Data Grid for OpenShift"/>
                    <link href="https://docs.openshift.com/container-platform/3.4/architecture/core_concepts/routes.html#haproxy-template-router" title="OpenShift: HAProxy Template Router - Sticky Session"/>
                    <tag>clustering</tag>
                </hint>
            </perform>
        </rule>
    </rules>
</ruleset>
