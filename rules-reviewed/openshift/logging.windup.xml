<?xml version="1.0"?>
<ruleset id="logging"
    xmlns="http://windup.jboss.org/schema/jboss-ruleset"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            This is a ruleset for logging-related topics when migrating and application to cloud environments.
        </description>
        <dependencies>
          <addon id="org.jboss.windup.rules,windup-rules-javaee,3.0.0.Final"/>
          <addon id="org.jboss.windup.rules,windup-rules-java,3.0.0.Final"/>
        </dependencies>
        <sourceTechnology id="java"/>
        <sourceTechnology id="java-ee"/>
        <targetTechnology id="cloud-readiness"/>
        <tag>logging</tag>
    </metadata>
    <rules>
        <rule id="logging-0000">
            <when>
              <or>
                <filecontent filename="log4j.{extension}" pattern="{appenderpattern}"/>
                <javaclass references="org.apache.{*}log4j.{*}FileAppender{*}">
                    <location>IMPORT</location>
                </javaclass>
                <javaclass references="java.util.logging.FileHandler{*}">
                    <location>IMPORT</location>
                </javaclass>
                <javaclass references="ch.qos.logback.core.FileAppender">
                    <location>IMPORT</location>
                </javaclass>
                <javaclass references="org.pmw.tinylog.writers.FileWriter">
                    <location>IMPORT</location>
                </javaclass>
              </or>
            </when>
            <perform>
                <iteration>
                    <when>
                        <not>
                            <has-hint />
                        </not>
                    </when>
                    <perform>
                        <hint title="Logging to file system" effort="1" category-id="cloud-mandatory">
                            <message>
                            Logging to individual files should be avoided in a cloud environment, as locally written log files may be lost on instance termination or restart.

                            Review the file-based logging and considered the following options:

                            * usage of a centralized log management system
                            * log to standard output (console) and let the cloud platform handle the output
                            * usage of shared storage for log files
                            </message>
                            <link href="https://12factor.net/logs" title="Twelve-factor app - Logs"/>
                            <link href="https://access.redhat.com/documentation/en/openshift-container-platform/3.4/paged/installation-and-configuration/chapter-28-aggregating-container-logs" title="Aggregating container logs"/>
                            <tag>logging</tag>
                        </hint>
                        <technology-tag level="INFORMATIONAL">Logging to file system</technology-tag>
                    </perform>
                </iteration>
            </perform>
            <where param="appenderpattern">
              <matches pattern="((Daily)?Rolling)?FileAppender"/>
            </where>
            <where param="extension">
              <matches pattern="(xml|properties)"/>
            </where>
        </rule>
        <rule id="logging-0001">
          <when>
              <javaclass references="java.util.logging.SocketHandler{*}"/>
          </when>
            <perform>
                <iteration>
                    <hint title="Logging to Socket Handler" effort="3" category-id="cloud-mandatory">
                        <message>
                        Socket communication is not suitable in a cloud environment which does not provide fixed communication target hosts.

                        Review the socket-based logging and considered the following options:

                        * usage of a centralized log management system
                        * log to standard output (console) and let the cloud platform handle the output
                        * usage of shared storage for log files
                        </message>
                        <link href="https://12factor.net/logs" title="Twelve-factor app - Logs"/>
                        <link href="https://access.redhat.com/documentation/en/openshift-container-platform/3.4/paged/installation-and-configuration/chapter-28-aggregating-container-logs" title="OpenShift - Aggregating container logs"/>
                        <tag>logging</tag>
                    </hint>
                </iteration>
                <technology-tag level="INFORMATIONAL">Logging to Socket Handler</technology-tag>
            </perform>
        </rule>
    </rules>
</ruleset>
