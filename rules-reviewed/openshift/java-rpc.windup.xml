<?xml version="1.0"?>
<ruleset id="java-rpc" xmlns="http://windup.jboss.org/schema/jboss-ruleset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            This is a ruleset for Java Remote Procedure Call specific rules for migrating to a cloud environment.
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-javaee,2.7.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-java,2.7.0.Final" />
        </dependencies>
        <sourceTechnology id="java" />
        <sourceTechnology id="rpc" />
        <targetTechnology id="cloud-readiness" />
        <tag>rpc</tag>
    </metadata>
    <rules>
        <rule id="java-rpc-00000">
            <when>
                <or>
                    <javaclass references="javax.xml.rpc{*}" as="default">
                        <location>CONSTRUCTOR_CALL</location>
                        <location>IMPORT</location>
                        <location>INHERITANCE</location>
                        <location>TYPE</location>
                        <location>VARIABLE_DECLARATION</location>
                    </javaclass>
                    <javaclass references="org.apache.xmlrpc{*}" as="default">
                        <location>CONSTRUCTOR_CALL</location>
                        <location>IMPORT</location>
                        <location>INHERITANCE</location>
                        <location>TYPE</location>
                        <location>VARIABLE_DECLARATION</location>
                    </javaclass>
                    <javaclass references="redstone.xmlrpc{*}" as="default">
                        <location>CONSTRUCTOR_CALL</location>
                        <location>IMPORT</location>
                        <location>INHERITANCE</location>
                        <location>TYPE</location>
                        <location>VARIABLE_DECLARATION</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <iteration>
                    <hint title="Java Remote Procedure Call (RPC)" effort="5" category-id="cloud-optional">
                        <message>
                            JAX-RPC [JSR 101, the Java APIs for XML-Based RPC], which defines client APIs for accessing SOAP web services via RPC as well as techniques for implementing web service endpoints.   
                            JAX-RPC suffers from a number of limitations, notably that neither web service annotations nor injection are supported for JAX-RPC service endpoints and handlers.  
                            The API was effectively superseded by JAX-WS with the release of Java EE 5.
                            
                            The use of JAX-RPC denotes a tightly coupling that is better avoided in a cloud environment.  
                            Possible alternatives are:
                            
                            * using messages to leverage the possibilities from JMS
                            * changing the integration whit a REST architecture
                            
                            With load balancing, both the solutions can assure scalability and high availability.
                        </message>
                        <tag>rpc</tag>
                    </hint>
                </iteration>
            </perform>
        </rule>
    </rules>
</ruleset>
