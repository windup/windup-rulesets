<?xml version="1.0"?>
<ruleset xmlns="http://windup.jboss.org/schema/jboss-ruleset" id="hibernate" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">

   <metadata>
      <description>
            This ruleset provides analysis of deprecated Hibernate java constructs and their migration to newer one.
        </description>
      <dependencies>
         <addon id="org.jboss.windup.rules,windup-rules-javaee,2.3.0.Final" />
         <addon id="org.jboss.windup.rules,windup-rules-java,2.3.0.Final" />
      </dependencies>
      <sourceTechnology id="hibernate" versionRange="[,3.9)" />
      <targetTechnology id="hibernate" versionRange="[4,)" />
      <targetTechnology id="eap" versionRange="[6,)" />
      <tag>reviewed-2015-09-30</tag>
   </metadata>

   <rules>
      <rule id="hibernate-01000">
         <when>
            <javaclass references="org.hibernate.annotations.Type" matchesSource="{*}text{*}" />
         </when>
         <perform>
            <hint title="Hibernate 4 deprecates @Type(type=text)" effort="1" severity="optional">
               <message>
                         In versions of Hibernate prior to 3.5, text type was mapped to JDBC CLOB. A new Hibernate type, materialized_clob, was added in Hibernate 4 to map Java String properties to JDBC CLOB. Therefore, Hibernate 4 text LOB type definitions should be defined using `@Lob`, instead.
               </message>
               <link
                  href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html/Migration_Guide/Migrate_Your_Hibernate_33x_Application_to_Hibernate_4x.html"
                  title="Hibernate 4 java @Type migration." />
               <tag>hibernate</tag>
            </hint>
         </perform>
      </rule>
      <rule id="hibernate-02000">
         <when>
            <javaclass references="org.hibernate.criterion.Projections.{method}{*}">
               <location>METHOD_CALL</location>
            </javaclass>
         </when>
         <perform>
            <hint title="Hibernate 4 projection return types" effort="1" severity="optional">
               <message>
                         The return types of the numeric aggregate criteria projections has changed to Long in hibernate 4. This change may introduce conflicts in the code.
               </message>
               <link
                  href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html/Migration_Guide/Migrate_Your_Hibernate_33x_Application_to_Hibernate_4x.html"
                  title="Hibernate 4 projections return type change." />
               <tag>hibernate</tag>
            </hint>
         </perform>
         <where param="method">
            <matches pattern="(count|rowCount|sum)" />
         </where>
      </rule>
      <rule id="hibernate-03000">
         <when>
            <javaclass references="org.hibernate.cfg.AnnotationConfiguration{*}">
               <location>CONSTRUCTOR_CALL</location>
            </javaclass>
         </when>
         <perform>
            <hint title="Hibernate 4 naming strategy" effort="1" severity="optional">
               <message>
                         The default naming strategy in Hibernate 4 was changed from DefaultNamingStrategy to EJB3NamingStrategy. This can result in naming mismatches. If you rely on the naming strategy, call Configuration#setNamingStrategy.
                     </message>
               <link
                  href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6/html/Migration_Guide/Migrate_Your_Hibernate_3.5.x_Application_to_Hibernate_4.x.html"
                  title="Hibernate 4 naming strategy change documentation." />
               <tag>hibernate</tag>
            </hint>
         </perform>
      </rule>
      <rule id="hibernate-04000">
         <when>
            <javaclass references="org.hibernate.classic.{*}" />
         </when>
         <perform>
            <hint title="Hibernate 4 removes classes in org.hibernate.classic" effort="1" severity="optional">
               <message>The deprecated classes in org.hibernate.classic package was removed in Hibernate 4.</message>
               <link href="https://developer.jboss.org/wiki/HibernateCoreMigrationGuide40" title="Migration to Hibernate 4.0" />
               <tag>hibernate</tag>
            </hint>
         </perform>
      </rule>
      <rule id="hibernate-05000">
         <when>
            <javaclass references="org.hibernate.dialect.resolver.DialectResolver" />
         </when>
         <perform>
            <hint title="Hibernate 4 DialectResolver replacement" effort="1" severity="optional">
               <message>Replace org.hibernate.dialect.resolver.DialectResolver with org.hibernate.service.jdbc.dialect.spi.DialectResolver.</message>
               <tag>hibernate</tag>
            </hint>
         </perform>
      </rule>
      <rule id="hibernate-06000">
         <when>
            <or>
               <javaclass references="org.hibernate.jdbc.BatcherFactory" />
               <javaclass references="org.hibernate.jdbc.BatchingBatcherFactory" />
               <javaclass references="org.hibernate.jdbc.NonBatchingBatcherFactory" />
            </or>
         </when>
         <perform>
            <hint title="Hibernate 4 BatcherFactory replacement" effort="1" severity="optional">
               <message>Replace org.hibernate.jdbc.BatcherFactory by org.hibernate.engine.jdbc.batch.spi.BatchBuilder.
                  Their default implementations are in org.hibernate.engine.jdbc.batch.internal.
                  You can override the default BatchBuilder by defining the  "hibernate.jdbc.batch.builder" property as the name of a BatchBuilder implementation
                   or by providing a BatchBuilder in a custom ServiceRegistry.
                  </message>
               <tag>hibernate</tag>
            </hint>
         </perform>
      </rule>
      <rule id="hibernate-07000">
         <when>
            <or>
               <javaclass references="org.hibernate.jdbc.Batcher" />
               <javaclass references="org.hibernate.jdbc.AbstractBatcher" />
               <javaclass references="org.hibernate.jdbc.BatchingBatcher" />
               <javaclass references="org.hibernate.jdbc.NonBatchingBatcher" />
            </or>
         </when>
         <perform>
            <hint title="Hibernate 4 JDBC Batcher replacement" effort="1" severity="optional">
               <message>Replace org.hibernate.jdbc.Batcher by org.hibernate.engine.jdbc.batch.spi.Batch.
                  Their default implementations are in org.hibernate.engine.jdbc.batch.internal.
                  </message>
               <tag>hibernate</tag>
            </hint>
         </perform>
      </rule>
      <rule id="hibernate-08000">
         <when>
            <javaclass references="org.hibernate.engine.SessionImplementor" />
         </when>
         <perform>
            <hint title="Hibernate 4 SessionImplementor replacement" effort="1" severity="optional">
               <message>Replace org.hibernate.engine.SessionImplementor with org.hibernate.engine.spi.SessionImplementor
               </message>
               <tag>hibernate</tag>
            </hint>
         </perform>
      </rule>
      <rule id="hibernate-09000">
         <when>
            <javaclass references="org.hibernate.connection.{classname}" />
         </when>
         <perform>
            <hint title="Hibernate 4 package org.hibernate.connection renamed" effort="1" severity="optional">
               <message>The classes in org.hibernate.connection package was moved to org.hibernate.service.jdbc.connections.internal in Hibernate 4</message>
               <tag>hibernate</tag>
            </hint>
         </perform>
         <where param="classname">
            <matches pattern="[^.]+" />
         </where>
      </rule>
      <rule id="hibernate-10000">
         <when>
            <javaclass references="org.hibernate.collection.PersistentBag" />
         </when>
         <perform>
            <hint title="Hibernate 4 org.hibernate.collection.PersistentBag replacement" effort="1" severity="optional">
               <message>The class org.hibernate.collection.PersistentBag was moved to org.hibernate.collection.internal.PersistentBag in Hibernate 4</message>
               <tag>hibernate</tag>
            </hint>
         </perform>
      </rule>
      <rule id="hibernate-10100">
         <when>
            <javaclass references="net.sf.hibernate.{classname}" />
         </when>
         <perform>
            <classification title="Hibernate 2.x reference" severity="optional" />
            <hint effort="1" severity="optional" title="Hibernate type reference net.sf.hibernate.{classname}">
               <message>
                  This is an old Hibernate package name from version 2.x and needs to be migrated to a compatible API to Hibernate 4.x/5.x,
                  where package name is org.hibernate.
               </message>
               <link title="Hibernate Migration Guides" href="https://developer.jboss.org/wiki/Hibernate3MigrationGuides" />
               <tag>hibernate</tag>
            </hint>
         </perform>
         <where param="classname">
            <matches pattern="[^.]+" />
         </where>
      </rule>
   </rules>
</ruleset>
