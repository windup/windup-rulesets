<?xml version="1.0"?>
<ruleset xmlns="http://windup.jboss.org/schema/jboss-ruleset" id="xml-moved-components"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            Rules for changes in XML file (e.g. pom.xml) to run on Apache Camel 3
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-java,3.0.0.Final"/>
        </dependencies>
        <sourceTechnology id="camel" versionRange="[2,3)"/>
        <targetTechnology id="camel" versionRange="[3,)"/>
    </metadata>
    <rules>
<!-- Rules moved to xml-moved-components.windup.groovy
        <rule id="xml-moved-components-00000">
        <rule id="xml-moved-components-00001">
        <rule id="xml-moved-components-00002">
        <rule id="xml-moved-components-00003">
        <rule id="xml-moved-components-00004">
        <rule id="xml-moved-components-00005">
-->
        <rule id="xml-moved-components-00006">
            <when>
                <!--               <filecontent pattern="'xslt:'" filename="{*}.java"/>-->
                <filecontent pattern=".addAttachment{*}" filename="{*}.java"/>
                <xmlfile as="dependencies-block" in="pom.xml"
                        matches="/m:project/m:dependencies[count(m:dependency/m:artifactId[text()='camel-attachments'])=0]">
                    <namespace prefix="m" uri="http://maven.apache.org/POM/4.0.0"/>
                </xmlfile>
            </when>
            <perform>
                <iteration over="dependencies-block">
                    <hint title="`camel-attachments` component has been moved" effort="1" category-id="mandatory">
                        <message>`camel-attachments` required for using rest DSL. Component has been moved from `camel-core` to separate artifact
                            org.apache.camel:camel-rest that has to be
                            added as a dependency to your project pom.xml file
                        </message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html"
                                title="Camel 3 - Migration Guide"/>
                    </hint>
                </iteration>
            </perform>
        </rule>

        <rule id="xml-moved-components-00007">
            <when>

                <xmlfile as="dependencies-block" in="pom.xml"
                        matches="/m:project/m:dependencies[count(m:dependency/m:artifactId[text()='camel-dataformat'])=0]">
                    <namespace prefix="m" uri="http://maven.apache.org/POM/4.0.0"/>
                </xmlfile>
                <javaclass references="org.apache.camel.builder.RouteBuilder" as="routeBuilders">
                    <location>INHERITANCE</location>
                </javaclass>
                <or>
                    <filecontent pattern=".marshal({*})" from="routeBuilders"/>
                    <filecontent pattern="unmarshal({*})" from="routeBuilders"/>
                </or>
            </when>
            <perform>
                <iteration over="dependencies-block">
                    <hint title="`camel-dataformat` component has been moved" effort="1" category-id="mandatory">
                        <message>`camel-dataformat` dependency required. Component has been moved from `camel-core` to separate artifact
                            org.apache.camel:camel-dataformat that has to be
                            added as a dependency to your project pom.xml file
                        </message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html"
                                title="Camel 3 - Migration Guide"/>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="xml-moved-components-00008">
            <when>
                <xmlfile as="dependencies-block" in="pom.xml"
                        matches="/m:project/m:dependencies[count(m:dependency/m:artifactId[text()='camel-dataformat'])=0]">
                    <namespace prefix="m" uri="http://maven.apache.org/POM/4.0.0"/>
                </xmlfile>

                <or>
                    <xmlfile matches="//*[(count(b:marshal)+count(b:unmarshal)+count(b:dataformats)) >0]">
                        <namespace prefix="b" uri="http://camel.apache.org/schema/blueprint"/>
                    </xmlfile>
                    <xmlfile matches="//*[(count(c:marshal)+count(c:unmarshal)+ count(c:dataformats)) > 0]">
                        <namespace prefix="c" uri="http://camel.apache.org/schema/spring"/>
                    </xmlfile>
                </or>
            </when>
            <perform>
                <iteration over="dependencies-block">
                    <hint title="`camel-dataformat` component has been moved" effort="1" category-id="mandatory">
                        <message>`camel-dataformat` dependency required. Component has been moved from `camel-core` to separate artifact
                            `org.apache.camel:camel-dataformat` that has to be added as a dependency to your project pom.xml file
                        </message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html"
                                title="Camel 3 - Migration Guide"/>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="xml-moved-components-00009">
            <when>
                <xmlfile as="dependencies-block" in="pom.xml"
                        matches="/m:project/m:dependencies[count(m:dependency/m:artifactId[text()='camel-zip-deflater'])=0]">
                    <namespace prefix="m" uri="http://maven.apache.org/POM/4.0.0"/>
                </xmlfile>
                <javaclass references="org.apache.camel.builder.RouteBuilder" as="routeBuilders">
                    <location>INHERITANCE</location>
                </javaclass>
                <or>
                    <filecontent pattern=".zip({*})" from="routeBuilders"/>
                    <filecontent pattern=".gzip({*})" from="routeBuilders"/>
                </or>
            </when>
            <perform>
                <iteration over="dependencies-block">
                    <hint title="`camel-zip-deflater` component has been moved" effort="1" category-id="mandatory">
                        <message>`camel-zip-deflater` dependency required. Component has been moved from `camel-core` to separate artifact
                            `org.apache.camel:camel-zip-deflater` that has to be added as a dependency to your project pom.xml file
                        </message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_zip_and_gzip_dataformat"
                                title="Camel 3 - Migration Guide"/>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="xml-moved-components-00010">
            <when>
                <xmlfile as="dependencies-block" in="pom.xml"
                        matches="/m:project/m:dependencies[count(m:dependency/m:artifactId[text()='camel-dataformat'])=0]">
                    <namespace prefix="m" uri="http://maven.apache.org/POM/4.0.0"/>
                </xmlfile>

                <or>
                    <xmlfile matches="//*[(count(b:zip)+count(b:gzip)) >0]">
                        <namespace prefix="b" uri="http://camel.apache.org/schema/blueprint"/>
                    </xmlfile>
                    <xmlfile matches="//*[(count(c:gzip)+count(c:zip)) > 0]">
                        <namespace prefix="c" uri="http://camel.apache.org/schema/spring"/>
                    </xmlfile>
                </or>
            </when>
            <perform>
                <iteration over="dependencies-block">
                    <hint title="`camel-zip-deflater` component has been moved" effort="1" category-id="mandatory">
                        <message>`camel-zip-deflater` dependency required. Component has been moved from `camel-core` to separate artifact
                            `org.apache.camel:camel-zip-deflater` that has to be
                            added as a dependency to your project pom.xml file
                        </message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_zip_and_gzip_dataformat"
                                title="Camel 3 - Migration Guide"/>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="xml-moved-components-00011">
            <when>
                <xmlfile as="dependencies-block" in="pom.xml"
                        matches="/m:project/m:dependencies[count(m:dependency/m:artifactId[text()='camel-xpath'])=0]">
                    <namespace prefix="m" uri="http://maven.apache.org/POM/4.0.0"/>
                </xmlfile>
                <javaclass references="org.apache.camel.builder.RouteBuilder" as="routeBuilders">
                    <location>INHERITANCE</location>
                </javaclass>
                <or>
                    <filecontent pattern=".xpath({*})" from="routeBuilders"/>
                    <xmlfile matches="//*[count(b:xpath) >0]">
                        <namespace prefix="b" uri="http://camel.apache.org/schema/blueprint"/>
                    </xmlfile>
                    <xmlfile matches="//*[count(c:xpath) > 0]">
                        <namespace prefix="c" uri="http://camel.apache.org/schema/spring"/>
                    </xmlfile>
                </or>
            </when>
            <perform>
                <iteration over="dependencies-block">
                    <hint title="`camel-xpath` component has been moved" effort="1" category-id="mandatory">
                        <message>`camel-xpath` dependency required. Component has been moved from `camel-core` to separate artifact
                            `org.apache.camel:camel-xpath` that has to be added as a dependency to your project pom.xml file
                        </message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_modularization_of_camel_core"
                                title="Camel 3 - Migration Guide"/>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="xml-moved-components-00012">
            <when>
                <xmlfile as="dependencies-block" in="pom.xml"
                        matches="/m:project/m:dependencies[count(m:dependency/m:artifactId[text()='camel-support'])=0]">
                    <namespace prefix="m" uri="http://maven.apache.org/POM/4.0.0"/>
                </xmlfile>
                <javaclass references="org.apache.camel.util.component.{*}">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <iteration over="dependencies-block">
                    <hint title="`camel-support` dependency not found" effort="1" category-id="mandatory">
                        <message>`All the classes from `org.apache.camel.util.component` have been moved to `org.apache.camel.support.component.
                            org.apache.camel:camel-support that has to be added as a dependency to your project pom.xml file
                        </message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_modularization_of_camel_core"
                                title="Camel 3 - Migration Guide"/>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="xml-moved-components-00013">
            <when>
                <javaclass references="org.apache.camel.impl.{moved}" as="javaClass">
                    <location>IMPORT</location>
                </javaclass>
                <not>
                    <xmlfile as="dependencies" in="pom.xml"
                            matches="/m:project/m:dependencies/m:dependency/m:artifactId[text()='camel-base']">
                        <namespace prefix="m" uri="http://maven.apache.org/POM/4.0.0"/>
                    </xmlfile>
                </not>
            </when>
            <perform>
                <iteration over="javaClass">
                    <hint title="`camel-base` dependency required for `{moved}` class" effort="1" category-id="mandatory">
                        <message>The class `org.apache.camel.impl.{moved}` has been moved to `org.apache.camel.impl.engine` package in `camel-base`
                            dependency.
                            `org.apache.camel:camel-base` has to be added as a dependency to your project pom.xml file
                        </message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                                title="Camel 3 - Migration Guide: General information"/>
                    </hint>
                </iteration>
            </perform>
            <where param="moved">
                <matches
                        pattern="(CamelPostProcessorHelper|DefaultAsyncProcessorAwaitManager|DefaultCamelBeanPostProcessor|DefaultCamelContextNameStrategy|DefaultClaimCheckRepository|DefaultClassResolver|DefaultComponentResolver|DefaultConsumerTemplate|DefaultDataFormatResolver|DefaultEndpointRegistry|DefaultEndpointUtilizationStatistics|DefaultFactoryFinder|DefaultFactoryFinderResolver|DefaultHeadersMapFactory|DefaultInflightRepository|DefaultInjector|DefaultLanguageResolver|DefaultManagementNameStrategy|DefaultMessageHistoryFactory|DefaultNodeIdFactory|DefaultPackageScanClassResolver|DefaultProcessorFactory|DefaultProducerTemplate|DefaultRoute|DefaultRouteContext|DefaultRouteController|DefaultRouteError|DefaultRouteStartupOrder|DefaultRuntimeEndpointRegistry|DefaultShutdownStrategy|DefaultStreamCachingStrategy|DefaultTransformerRegistry|DefaultUnitOfWork|DefaultUnitOfWorkFactory|DefaultUuidGenerator|DefaultValidatorRegistry|DeferProducer|DeferServiceStartupListener|DurationRoutePolicy|DurationRoutePolicyFactory|EndpointKey|EventDrivenConsumerRoute|EventNotifierCallback|ExplicitCamelContextNameStrategy|FileStateRepository|HashMapHeadersMapFactory|HeadersMapFactoryResolver|InterceptSendToEndpointProcessor|InterceptSendToMockEndpointStrategy|JavaUuidGenerator|LimitedPollingConsumerPollStrategy|MDCUnitOfWork|MemoryStateRepository|SubscribeMethodProcessor|SupervisingRouteController|SupervisingRouteController.FilterResult|SupervisingRouteControllerFilters|SupervisingRouteControllerFilters.BlackList|TypedProcessorFactory|WebSpherePackageScanClassResolver)"/>
            </where>
        </rule>
    </rules>
</ruleset>

