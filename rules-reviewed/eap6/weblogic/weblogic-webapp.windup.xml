<?xml version="1.0"?>
<ruleset id="weblogic-webapp" xmlns="http://windup.jboss.org/schema/jboss-ruleset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">

    <metadata>
        <description>
            This ruleset provides analysis of WebLogic proprietary code related to web-apps that may require individual
            attention when
            migrating to JBoss EAP 6+.
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-javaee,2.3.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-java,2.3.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-xml,2.3.0.Final" />
        </dependencies>
        <sourceTechnology id="weblogic" />
        <targetTechnology id="eap" versionRange="[6,)" />
        <tag>reviewed-2015-06-05</tag>
        <tag>web-app</tag>
    </metadata>

    <rules>
        <rule id="weblogic-webapp-01000">
            <when>
                <xmlfile in="weblogic.xml" matches="//wl:virtual-directory-mapping">
                    <namespace prefix="wl" uri="http://xmlns.oracle.com/weblogic/weblogic-web-app" />
                </xmlfile>
            </when>
            <perform>
                <hint title="WebLogic Virtual directory mapping" effort="1" severity="mandatory">
                    <message>Virtual directories supported in WebLogic are not supported in JBoss EAP.</message>
                    <link href="https://access.redhat.com/articles/1332613" title="Detailed description of how to migrate virtual directories." />
                    <tag>file-system</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-webapp-02000">
            <when>
                <javaclass references="weblogic.servlet.annotation.WLServlet">
                    <location>ANNOTATION</location>
                </javaclass>
            </when>
            <perform>
                <hint title="WebLogic proprietary servlet annotations" effort="1" severity="mandatory">
                    <message>
                      <![CDATA[
                      Replace the proprietary WebLogic `@WLServlet` annotation with the Java EE 6 standard `@WebServlet` annotation.

                      See the [javax.servlet.annotation JavaDoc](http://docs.oracle.com/javaee/6/api/javax/servlet/annotation/package-summary.html) for more information.
                      ]]>
                    </message>
                    <link href="https://access.redhat.com/articles/1249423" title="WebLogic proprietary servlet annotations" />
                    <tag>servlet</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-webapp-03000">
            <when>
                <javaclass references="weblogic.servlet.annotation.WLInitParam">
                    <location>ANNOTATION</location>
                </javaclass>
            </when>
            <perform>
                <hint title="WebLogic proprietary servlet annotations" effort="1" severity="mandatory">
                    <message>
                      <![CDATA[
                      Replace the proprietary WebLogic `@WLInitParam` annotation with the Java EE 6 standard `@WebInitParam` annotation.

                      See the [javax.servlet.annotation JavaDoc](http://docs.oracle.com/javaee/6/api/javax/servlet/annotation/package-summary.html) for more information.
                      ]]>
                    </message>
                    <link href="https://access.redhat.com/articles/1249423" title="WebLogic proprietary servlet annotations" />
                    <tag>servlet</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-webapp-04000">
            <when>
                <javaclass references="weblogic.servlet.annotation.WLFilter">
                    <location>ANNOTATION</location>
                </javaclass>
            </when>
            <perform>
                <hint title="WebLogic proprietary servlet annotations" effort="3" severity="mandatory">
                    <message>
                      <![CDATA[
                      Replace the proprietary WebLogic `@WLFilter` annotation with the Java EE 6 standard `@WebFilter` annotation.

                      See the [javax.servlet.annotation JavaDoc](http://docs.oracle.com/javaee/6/api/javax/servlet/annotation/package-summary.html) for more information.
                      ]]>
                    </message>
                    <link href="https://access.redhat.com/articles/1249423" title="WebLogic proprietary servlet annotations" />
                    <tag>servlet</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-webapp-05000">
            <when>
                <javaclass references="weblogic.application.ApplicationLifecycleEvent">
                    <location>IMPLEMENTS_TYPE</location>
                    <location>INHERITANCE</location>
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="WebLogic ApplicationLifecycleEvent" effort="3" severity="mandatory">
                    <message>
                      <![CDATA[
                      WebLogic `ApplicationLifecycleEvent` must be replaced with standard Java EE `ServletContextEvent`. Otherwise, a custom solution using CDI's `ApplicationScoped` beans or EJB's `@Startup` beans is required in order to propagate a custom event object because `ServletContextEvent` types are not extendible in the standard Java EE programming model.

                      Use a `javax.servlet.ServletContextListener` with `@javax.annotation.servlet.WebListener`, or an EJB 3.1 `@javax.ejb.Startup` `@javax.ejb.Singleton` service bean.
                      ]]>
                    </message>
                    <link href="https://access.redhat.com/articles/1326703" title="Migrate WebLogic ApplicationLifecycleEvent to standard EJB with JBoss EAP" />
                    <link href="http://docs.oracle.com/javaee/6/api/javax/servlet/ServletContextEvent.html" title="Java EE ServletContextEvent JavaDoc" />
                    <link href="http://docs.oracle.com/cd/E13222_01/wls/docs90/programming/lifecycle.html" title="WebLogic custom ApplicationLifecycleEvent Documentation" />
                    <tag>lifecycle</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-webapp-06000">
            <when>
                <javaclass references="weblogic.application.ApplicationLifecycleListener">
                    <location>IMPLEMENTS_TYPE</location>
                    <location>INHERITANCE</location>
                </javaclass>
            </when>
            <perform>
                <hint title="WebLogic ApplicationLifecycleListener" effort="3" severity="mandatory">
                    <message>
                      <![CDATA[
                      WebLogic `ApplicationLifecycleListener` must be replaced with standard Java EE `ServletContextListener` types. Otherwise, a solution using CDI's `ApplicationScoped` beans or EJB's `@Startup` beans is required.

                      Use a `javax.servlet.ServletContextListener` with `@javax.annotation.servlet.WebListener`, or an EJB 3.1 `@javax.ejb.Startup` `@javax.ejb.Singleton` service bean.
                      ]]>
                    </message>
                    <link href="https://access.redhat.com/articles/1326703" title="Migrate Oracle WebLogic Server ApplicationLifecycleListener Code to Red Hat JBoss EAP 6" />
                    <link href="http://docs.oracle.com/javaee/6/api/javax/servlet/ServletContextEvent.html" title="Java EE ServletContextEvent JavaDoc" />
                    <link href="http://docs.oracle.com/cd/E13222_01/wls/docs90/programming/lifecycle.html" title="WebLogic custom ApplicationLifecycleEvent Documentation" />
                    <tag>lifecycle</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>

        <rule id="weblogic-webapp-07000">
            <when>
                <javaclass references="weblogic.security.Security" />
            </when>
            <perform>
                <hint title="WebLogic proprietary security reference to weblogic.security.Security" effort="1" severity="mandatory">
                    <message>Migrate to JBoss EAP 6: org.jboss.security.SecurityContextAssociation</message>
                    <link href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/API_Documentation/files/javadoc/org/jboss/security/SecurityContextAssociation.html" title="Security Context - JBoss EAP 6" />
                    <link href="https://access.redhat.com/solutions/55114" title="Security context retrieval in POJOs" />
                    <tag>security</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>

        <rule id="weblogic-webapp-08000">
            <when>
                <javaclass references="weblogic.security.{*}" />
            </when>
            <perform>
              <iteration>
                <when>
                    <not>
                        <has-hint />
                    </not>
                </when>
                <hint title="WebLogic proprietary security API" effort="3" severity="mandatory">
                    <message>The usage if the WebLogic proprietary security API should be replaced by standard Java EE mechanisms or the ones provided by JBoss EAP.</message>
                    <link href="http://docs.oracle.com/cd/E12839_01/apirefs.1111/e13941/weblogic/security/Security.html" title="WebLogic security API documentation" />
                    <link href="https://access.redhat.com/documentation/en/jboss-enterprise-application-platform/?version=6.4" title="EAP security documentation" />
                    <tag>security</tag>
                    <tag>weblogic</tag>
                </hint>
              </iteration>
            </perform>
        </rule>

        <rule id="weblogic-webapp-09000">
            <when>
                <javaclass references="weblogic.servlet.security.ServletAuthentication"/>
            </when>
            <perform>
                <hint effort="1" severity="mandatory" title="WebLogic proprietary ServletAuthentication annotation">
                    <message>
                      <![CDATA[
                      Oracle WebLogic Server provides a proprietary `ServletAuthentication` class to perform programmatic login.

                      In Red Hat JBoss EAP 6, you can use the standard Java EE 6 servlet security 3.0 `HttpServletRequest.login()` method or you can define a `&lt;security-constraint&gt;` element in the web.xml file. You must also replace code that uses the Oracle WebLogic Server proprietary `ServletAuthentication` class.
                      ]]>
                    </message>
                    <link href="https://access.redhat.com/articles/1329213" title="Migrate Oracle WebLogic programmatic login to JBoss EAP 6" />
                    <tag>security</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
    </rules>
</ruleset>
