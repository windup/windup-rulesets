<?xml version="1.0"?>
<ruleset xmlns="http://windup.jboss.org/schema/jboss-ruleset" id="hibernate50-51"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            This ruleset provides analysis of applications that use Hibernate 5.0 and may require
            individual attention when migrating to Hibernate 5.1.
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-javaee,3.0.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-java,3.0.0.Final" />
        </dependencies>
        <sourceTechnology id="hibernate" versionRange="(,5.0]" />
        <sourceTechnology id="eap" versionRange="(,7.0]" />
        <targetTechnology id="hibernate" versionRange="[5.1,)" />
        <targetTechnology id="eap" versionRange="[7.1,)" />
    </metadata>
    <rules>
        <rule id="hibernate50-51-00000">
            <when>
                <javaclass references="javax.persistence.Embeddable">
                    <location>ANNOTATION</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Hibernate 5.1  - @Embeddable changes interpretation" effort="1" category-id="optional">
                    <message>
                        Previous releases of Hibernate interpreted all null column values for an `@Embeddable` to mean the `@Embeddable` itself should be null.

                        In this release, applications can dictate that Hibernate should instead use an empty `@Embeddable` instance by specifying the `hibernate.create_empty_composites.enabled` opt-in setting.
                    </message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1.beta/html-single/migration_guide/application_migration_changes#hibernate_5_1_features" title="Hibernate ORM 5.1 Features"/>
                    <tag>Hibernate</tag>
                </hint>
            </perform>
        </rule>
        <rule id="hibernate50-51-00100">
            <when>
                <or>
                    <javaclass references="org.hibernate.tool.hbm2ddl.{hbm2ddl_classes}" >
                        <location>IMPORT</location>
                    </javaclass>
                    <javaclass references="org.hibernate.tool.schema.spi.SchemaManagementTool" >
                        <location>IMPORT</location>
                    </javaclass>
                    <javaclass references="org.hibernate.tool.schema.internal.HibernateSchemaManagementTool" >
                        <location>IMPORT</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <hint title="Hibernate 5.1  - Changes to schema management tooling" effort="1" category-id="mandatory">
                    <message>
                        The changes mainly focused on:

                        *  Unifying handling of hbm2ddl.auto and Hibernateâ€™s JPA schema-generation support.
                        *  Removing JDBC concerns from the SPI to facilitate true replacement (for OGM)

                        These changes are a migration concern since the application is directly using some of the changed classes.
                    </message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1.beta/html-single/migration_guide/application_migration_changes#schema_management_tooling_changes" title="Schema Management Tooling Changes"/>
                    <tag>Hibernate</tag>
                </hint>
            </perform>
            <where param="hbm2ddl_classes">
                <matches pattern="(SchemaExport|SchemaUpdate|SchemaValidator)" />
            </where>
        </rule>
    </rules>
</ruleset>
