<?xml version="1.0"?>
<ruletest xmlns="http://windup.jboss.org/schema/jboss-ruleset"
          id="hibernate51-53-test" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <testDataPath>data/data-hibernate51-53/</testDataPath>
    <!--<testDataPath>data/hibernate-core-5.1.6.Final-sources/</testDataPath>-->
    <rulePath>../hibernate51-53.windup.xml</rulePath>
    <rulePath>../hibernate51-53.windup.groovy</rulePath>
    <ruleset>
        <rules>
            <!--https://issues.jboss.org/browse/WINDUPRULE-376-->
            <rule id="hibernate51-53-00000-test">
                <when>
                    <not>
                        <iterable-filter size="29">
                            <hint-exists message="`org.hibernate.engine.spi.SessionImplementor` parameter has to be changed to `org.hibernate.engine.spi.SharedSessionContractImplementor`*" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="SessionImplementor hint not found." />
                </perform>
            </rule>
            <!--https://issues.jboss.org/browse/WINDUPRULE-377 and WINDUPRULE-378 -->
            <rule id="hibernate51-53-00100-test">
                <when>
                    <not>
                        <iterable-filter size="2">
                            <hint-exists message="change reference to hibernate-java8 to hibernate-core" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="No reference to hibernate-java8 found in pom.xml (where hibernate-core not also referenced)" />
                </perform>
            </rule>
            <!--https://issues.jboss.org/browse/WINDUPRULE-379-->
            <rule id="hibernate51-53-00300-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="If the `SessionFactory` is built via Hibernateâ€™s native bootstrapping and `org.hibernate.HibernateException`*" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="References to org.hibernate.HibernateException or subclasses not found" />
                </perform>
            </rule>
            <!--https://issues.jboss.org/browse/WINDUPRULE-380-->
            <rule id="hibernate51-53-00400-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="`org.hibernate.engine.spi.SessionFactoryImplementor.getCache\(\).getDefaultQueryResultsCache\(\)` should be used instead of `SessionFactoryImplementor.getQueryCache\(\)` method*" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint removed method getQueryCache() not found" />
                </perform>
            </rule>
            <rule id="hibernate51-53-00401-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="`org.hibernate.engine.spi.SessionFactoryImplementor.getCache\(\).getDefaultQueryResultsCache\(String regionName\)` should be used instead of `SessionFactoryImplementor.getQueryCache\(String regionName\)` method" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint removed method getQueryCache(String regionName) not found" />
                </perform>
            </rule>
            <rule id="hibernate51-53-00402-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="`org.hibernate.engine.spi.SessionFactoryImplementor.getCache\(\).getTimestampsCache\(\)` should be used instead of `SessionFactoryImplementor.getUpdateTimestampsCache\(\)` method" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint removed method getUpdateTimestampsCache() not found" />
                </perform>
            </rule>
            <rule id="hibernate51-53-00403-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="`org.hibernate.engine.spi.SessionFactoryImplementor.getCache\(\).getRegion\(String regionName\)` should be used instead of `SessionFactoryImplementor.getSecondLevelCacheRegion\(String regionName\)` method" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint removed method getSecondLevelCacheRegion(String regionName) not found" />
                </perform>
            </rule>
            <rule id="hibernate51-53-00404-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="Depending on the type of region, the appropriate method should be used instead.*" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint removed method getSecondLevelCacheRegionAccessStrategy(String regionName) not found" />
                </perform>
            </rule>
            <rule id="hibernate51-53-00405-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="`org.hibernate.engine.spi.SessionFactoryImplementor.getCache\(\).getRegion\(String regionName\)` should be used instead of `SessionFactoryImplementor.getNaturalIdCacheRegion\(String regionName\)` method" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint removed method getNaturalIdCacheRegion(String regionName) not found" />
                </perform>
            </rule>
            <rule id="hibernate51-53-00406-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="`org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel\(\).entityPersister\( entityName \).getNaturalIdCacheAccessStrategy\(\)` should be used instead of `SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy\(String regionName\)` method" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint removed method getNaturalIdCacheRegionAccessStrategy(String regionName) not found" />
                </perform>
            </rule>
            <rule id="hibernate51-53-00407-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="`org.hibernate.engine.spi.SessionFactoryImplementor.getCache\(\).getCacheRegionNames\(\)` should be used to obtain all cache region names.*" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint removed method getAllSecondLevelCacheRegions() not found" />
                </perform>
            </rule>
            <!--https://issues.jboss.org/browse/WINDUPRULE-381 -->
            <rule id="hibernate51-53-00500-test">
                <when>
                    <not>
                        <iterable-filter size="10">
                            <hint-exists message="Review usage of classes in `org.hibernate.cache.spi.RegionFactory`" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="RegionFactory references not flagged as required" />
                </perform>
            </rule>
            <!--https://issues.jboss.org/browse/WINDUPRULE-382-->
            <rule id="hibernate51-53-00600-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="One potential upgrade concern is any custom `org.hibernate.cache.spi.QueryCacheFactory` implementations*" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Removed interface QueryCacheFactory not found" />
                </perform>
            </rule>
            <!--https://issues.jboss.org/browse/WINDUPRULE-383-->
            <rule id="hibernate51-53-00700-test">
                <when>
                    <not>
                        <iterable-filter size="2">
                            <hint-exists message="A change to be aware of is accessing cache entries via `SecondLevelCacheStatistics.getEntries\(\)` and `NaturalIdCacheStatistics.getEntries\(\)`*" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint deprecated methods SecondLevelCacheStatistics.getEntries and NaturalIdCacheStatistics.getEntries not found" />
                </perform>
            </rule>
            <rule id="hibernate51-53-00701-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="A change to be aware of is accessing cache entries via `NaturalIdCacheStatistics.getEntries\(\)`*" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint deprecated method NaturalIdCacheStatistics.getEntries not found" />
                </perform>
            </rule>
            <rule id="hibernate51-53-00702-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="A change to be aware of is accessing cache entries via `SecondLevelCacheStatistics.getEntries\(\)`\." />
                            <!--<hint-exists message="A change to be aware of is accessing cache entries via `SecondLevelCacheStatistics.getEntries\(\)`.*[\n]*.*This method  has been deprecated" />-->
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint deprecated method SecondLevelCacheStatistics.getEntries not found" />
                </perform>
            </rule>
            <!--https://issues.jboss.org/browse/WINDUPRULE-384-->
            <rule id="hibernate51-53-00800-test">
                <when>
                    <not>
                        <iterable-filter size="11">
                            <hint-exists message="The SPIs in the `org.hibernate*" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Hint package org.hibernate.(persister|tuple) changed not found" />
                </perform>
            </rule>
            <!--https://issues.jboss.org/browse/WINDUPRULE-386-->
            <rule id="hibernate51-53-01000-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="Define `hibernate.default_schema` or `hibernate.default_catalog`"/>
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="No default_schema or default_catalog found"/>
                </perform>
            </rule>
            <rule id="hibernate51-53-01001-test">
                <when>
                    <not>
                        <iterable-filter size="2">
                            <hint-exists message="If the application uses Hibernate, please define `hibernate.default_schema` or `hibernate.default_catalog`"/>
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="No default_schema or default_catalog found"/>
                </perform>
            </rule>
            <!--https://issues.jboss.org/browse/WINDUPRULE-387-->
            <rule id="hibernate51-53-01100-test">
                <when>
                    <not>
                        <iterable-filter size="1">
                            <hint-exists message="Applications using the `@TableGenerator` should set" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="TableGenerator class not found" />
                </perform>
            </rule>
            <!--https://issues.jboss.org/browse/WINDUPRULE-388-->
            <rule id="hibernate51-53-01200-test">
                <when>
                    <not>
                        <iterable-filter size="2">
                            <hint-exists message="Any references to `org.hibernate.*.getType().*" />
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="Deprecated method org.hibernate.className.getType() not found" />
                </perform>
            </rule>
        </rules>
    </ruleset>
</ruletest>
