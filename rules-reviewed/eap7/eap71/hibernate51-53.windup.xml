<?xml version="1.0"?>
<ruleset xmlns="http://windup.jboss.org/schema/jboss-ruleset" id="hibernate51-53"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            This ruleset provides analysis of applications that use Hibernate 5.1 and may require
            individual attention when migrating to Hibernate 5.3.
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-javaee,3.0.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-java,3.0.0.Final" />
        </dependencies>
        <sourceTechnology id="hibernate" versionRange="(,5.1]" />
        <targetTechnology id="hibernate" versionRange="[5.3,)" />
        <targetTechnology id="eap" versionRange="[7,8)" />
    </metadata>
    <rules>
        <!--https://issues.jboss.org/browse/WINDUPRULE-376
        <rule id="hibernate51-53-00000">
            <when>
            </when>
            <perform>
            </perform>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-377
        <rule id="hibernate51-53-00100">
            <when>
            </when>
            <perform>
            </perform>
            <where param="">
                <matches pattern="" />
            </where>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-378
        <rule id="hibernate51-53-00200">
            <when>
            </when>
            <perform>
            </perform>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-379
        <rule id="hibernate51-53-00300">
            <when>
            </when>
            <perform>
            </perform>
            <where param="">
                <matches pattern="" />
            </where>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-380-->
        <rule id="hibernate51-53-00400">
            <when>
                <javaclass references="org.hibernate.engine.spi.SessionFactoryImplementor.getQueryCache()">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Hibernate 5.3 - SessionFactoryImplementor.getQueryCache() method removed" category-id="mandatory" effort="1">
                    <message>`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getDefaultQueryResultsCache()` should be used instead of `SessionFactoryImplementor.getQueryCache()` method.</message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3" title="Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate ORM 5.3" />
                    <tag>hibernate</tag>
                    <quickfix name="SessionFactoryImplementor.getQueryCache" type="REPLACE">
                        <replacement>getCache().getDefaultQueryResultsCache()</replacement>
                        <search>getQueryCache()</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="hibernate51-53-00401">
            <when>
                <javaclass references="org.hibernate.engine.spi.SessionFactoryImplementor.getQueryCache({*}String{*})">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Hibernate 5.3 - SessionFactoryImplementor.getQueryCache(String regionName) method removed" category-id="mandatory" effort="1">
                    <message>`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getDefaultQueryResultsCache(String regionName)` should be used instead of `SessionFactoryImplementor.getQueryCache(String regionName)` method.</message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3" title="Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate ORM 5.3" />
                    <tag>hibernate</tag>
                    <quickfix name="SessionFactoryImplementor.getQueryCache" type="REPLACE">
                        <replacement>getCache().getQueryResultsCache(</replacement>
                        <search>getQueryCache(</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="hibernate51-53-00402">
            <when>
                <javaclass references="org.hibernate.engine.spi.SessionFactoryImplementor.getUpdateTimestampsCache()">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Hibernate 5.3 - SessionFactoryImplementor.getUpdateTimestampsCache() method removed" category-id="mandatory" effort="1">
                    <message>`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getTimestampsCache()` should be used instead of `SessionFactoryImplementor.getUpdateTimestampsCache()` method.</message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3" title="Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate ORM 5.3" />
                    <tag>hibernate</tag>
                    <quickfix name="SessionFactoryImplementor.getUpdateTimestampsCache" type="REPLACE">
                        <replacement>getCache().getTimestampsCache()</replacement>
                        <search>getUpdateTimestampsCache()</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="hibernate51-53-00403">
            <when>
                <javaclass references="org.hibernate.engine.spi.SessionFactoryImplementor.getSecondLevelCacheRegion({*}String{*})">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Hibernate 5.3 - SessionFactoryImplementor.getSecondLevelCacheRegion(String regionName) method removed" category-id="mandatory" effort="1">
                    <message>`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getRegion(String regionName)` should be used instead of `SessionFactoryImplementor.getSecondLevelCacheRegion(String regionName)` method.</message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3" title="Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate ORM 5.3" />
                    <tag>hibernate</tag>
                    <quickfix name="SessionFactoryImplementor.getSecondLevelCacheRegion" type="REPLACE">
                        <replacement>getCache().getRegion(</replacement>
                        <search>getSecondLevelCacheRegion(</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="hibernate51-53-00404">
            <when>
                <javaclass references="org.hibernate.engine.spi.SessionFactoryImplementor.getSecondLevelCacheRegionAccessStrategy({*}String{*})">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Hibernate 5.3 - SessionFactoryImplementor.getSecondLevelCacheRegionAccessStrategy(String regionName) method removed" category-id="mandatory" effort="1">
                    <message>
                        Depending on the type of region, the appropriate method should be used instead: 
                        
                        * For an entity cache region, `org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().entityPersister( entityName ).getCacheAccessStrategy()` should be used instead
                        * For a collection region, `org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().collectionPersister( role ).getCacheAccessStrategy()` should be used instead
                        * For a natural ID region, `org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().entityPersister( entityName ).getNaturalIdCacheAccessStrategy()` should be used instead
                    </message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3" title="Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate ORM 5.3" />
                    <tag>hibernate</tag>
                </hint>
            </perform>
        </rule>
        <rule id="hibernate51-53-00405">
            <when>
                <javaclass references="org.hibernate.engine.spi.SessionFactoryImplementor.getNaturalIdCacheRegion({*}String{*})">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Hibernate 5.3 - SessionFactoryImplementor.getNaturalIdCacheRegion(String regionName) method removed" category-id="mandatory" effort="1">
                    <message>`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getRegion(String regionName)` should be used instead of `SessionFactoryImplementor.getNaturalIdCacheRegion(String regionName)` method.</message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3" title="Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate ORM 5.3" />
                    <tag>hibernate</tag>
                    <quickfix name="SessionFactoryImplementor.getNaturalIdCacheRegion" type="REPLACE">
                        <replacement>getCache().getRegion(</replacement>
                        <search>getNaturalIdCacheRegion(</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="hibernate51-53-00406">
            <when>
                <javaclass references="org.hibernate.engine.spi.SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy({*}String{*})">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Hibernate 5.3 - SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy(String regionName) method removed" category-id="mandatory" effort="1">
                    <message>`org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().entityPersister( entityName ).getNaturalIdCacheAccessStrategy()` should be used instead of `SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy(String regionName)` method.</message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3" title="Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate ORM 5.3" />
                    <tag>hibernate</tag>
                    <quickfix name="SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy" type="REPLACE">
                        <replacement>getMetamodel().entityPersister( entityName ).getNaturalIdCacheAccessStrategy(</replacement>
                        <search>getNaturalIdCacheRegionAccessStrategy(</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="hibernate51-53-00407">
            <when>
                <javaclass references="org.hibernate.engine.spi.SessionFactoryImplementor.getAllSecondLevelCacheRegions()">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Hibernate 5.3 - SessionFactoryImplementor.getAllSecondLevelCacheRegions() method removed" category-id="mandatory" effort="1">
                    <message>
                        `org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getCacheRegionNames()` should be used to obtain all cache region names, then `org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getRegion(String regionName)` should be used to look up each region.
                    </message>
                    <link href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3" title="Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate ORM 5.3" />
                    <tag>hibernate</tag>
                </hint>
            </perform>
        </rule>
        <!--https://issues.jboss.org/browse/WINDUPRULE-381
        <rule id="hibernate51-53-00500">
            <when>
            </when>
            <perform>
            </perform>
            <where param="">
                <matches pattern="" />
            </where>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-382
        <rule id="hibernate51-53-00600">
            <when>
            </when>
            <perform>
            </perform>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-383
        <rule id="hibernate51-53-00700">
            <when>
            </when>
            <perform>
            </perform>
            <where param="">
                <matches pattern="" />
            </where>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-384
        <rule id="hibernate51-53-00800">
            <when>
            </when>
            <perform>
            </perform>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-385
        <rule id="hibernate51-53-00900">
            <when>
            </when>
            <perform>
            </perform>
            <where param="">
                <matches pattern="" />
            </where>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-386
        <rule id="hibernate51-53-01000">
            <when>
            </when>
            <perform>
            </perform>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-387
        <rule id="hibernate51-53-01100">
            <when>
            </when>
            <perform>
            </perform>
            <where param="">
                <matches pattern="" />
            </where>
        </rule>
        -->
        <!--https://issues.jboss.org/browse/WINDUPRULE-388-->
        <rule id="hibernate51-53-01200">
            <when>
                <javaclass references="org.hibernate.{className}.getType({*})">
                </javaclass>
            </when>
            <perform>
                <hint title="Hibernate 5.3 - QueryParameter.getType() renamed" effort="1" category-id="mandatory">
                    <message>Any references to `org.hibernate.{className}.getType()` must be replaced with `org.hibernate.{className}.getHibernateType()`.</message>
                    <link title="Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate ORM 5.3" href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3"/>
                    <tag>hibernate</tag>
                    <quickfix name="HibernateQueryParametergetType" type="REPLACE">
                        <replacement>getHibernateType</replacement>
                        <search>getType</search>
                    </quickfix>
                </hint>
            </perform>
            <where param="className">
                <matches pattern="(engine.query.spi.NamedParameterDescriptor|engine.query.spi.OrdinalParameterDescriptor|query.procedure.internal.ProcedureParameterImpl|query.internal.QueryParameterImpl|query.internal.QueryParameterNamedImpl)"/>
            </where>
         </rule>
    </rules>
</ruleset>
