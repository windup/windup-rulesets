<?xml version="1.0"?>
<ruleset xmlns="http://windup.jboss.org/ns/ruleset/2.3.0.Final"  id="OtherBaseRules"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"     xsi:schemaLocation="http://windup.jboss.org/ns/ruleset/2.3.0.Final http://windup.jboss.org/schema/windup-ruleset-2.3.0.Final.xsd"> 
    <rules>
        <rule id="OtherBaseRules_2fmb">
            <when>
                <javaclass references="edu.oswego.cs.dl.util.concurrent.{*}" as="default"/>
            </when>
            <perform>
                <iteration>
                    <hint message="Upgrade to javax.util.concurrent in Java 5+" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_4mthy">
            <when>
                <javaclass references="edu.emory.mathcs.backport.java.util.{*}" as="default"/>
            </when>
            <perform>
                <iteration>
                    <hint message="Upgrade to javax.util.concurrent in Java 5+" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_6bcvk">
            <when>
                <javaclass references="java.lang.Class.classForName{*}" as="default">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Ensure class is available to JBoss" effort="1">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_8jyqn">
            <when>
                <javaclass references="oracle.sql.{*}" as="default">
                    <location>TYPE</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Oracle-specific SQL code" effort="1">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_Altni">
            <when>
                <javaclass references="org.osoa.sca.annotations.{*}" as="default">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Remove import" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_Cbxnb">
            <when>
                <javaclass references="org.osoa.sca.annotations.Property" as="default">
                    <location>TYPE</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="SCA Property Injection; replace with Spring Property Injection" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_Epnmk">
            <when>
                <javaclass references="org.osoa.sca.annotations.Reference" as="default">
                    <location>TYPE</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="SCA Bean Injection; replace with Spring Bean Injection" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_10vvyf">
            <when>
                <javaclass references="org.osoa.sca.annotations.Init" as="default">
                    <location>TYPE</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="SCA Initialization Hook; Use the property: init-method='example' on the Spring Bean, where example is the initialization method" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_12idl">
            <when>
                <javaclass references="org.osoa.sca.annotations.Destroy" as="default">
                    <location>TYPE</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="SCA Destroy Hook; Use the property: destroy-method='example' on the Spring Bean, where example is the destroy method" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_14wscy">
            <when>
                <javaclass references="com.ibm.ctg.client.JavaGateway" as="default">
                    <location>TYPE</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="IBM CICS Adapter" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_16aynk">
            <when>
                <javaclass references="javax.naming.{*}Context.lookup{*}" as="default">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint effort="1">
                        <message><![CDATA[
                           
                                           Ensure that the JNDI Name does not need to change for JBoss
                                           
                                           *For Example:*
                                                           
                                           ```java
                                           (ConnectionFactory)initialContext.lookup("weblogic.jms.ConnectionFactory");
                                           ```
                                           
                                           *should become:*
                                           
                                           ```java
                                           (ConnectionFactory)initialContext.lookup("/ConnectionFactory");
                                           ```
                                           
                           
                        ]]></message>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_18bicn">
            <when>
                <javaclass references="javax.naming.InitialContext({*})" as="default">
                    <location>CONSTRUCTOR_CALL</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Ensure that the InitialContext connection properties do not need to change for JBoss" effort="1">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_1Agqai">
            <when>
                <javaclass references="javax.management.remote.JMXServiceURL({*})" as="default">
                    <location>CONSTRUCTOR_CALL</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Ensure that the connection properties do not need to change for JBoss" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_1Csnki">
            <when>
                <javaclass references="javax.management.ObjectName({*})" as="default">
                    <location>CONSTRUCTOR_CALL</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Ensure that the ObjectName exists in JBoss" effort="1">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_1Efbtf">
            <when>
                <javaclass references="javax.management.remote.JMXConnectorFactory.connect({*})" as="default">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Ensure that the connection properties do not need to change for JBoss" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_20xslg">
            <when>
                <javaclass references="java.sql.DriverManager{*}" as="default">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Move to a JCA Connector unless this class is used for batch processes, then refactor as necessary" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_22ablx">
            <when>
                <javaclass references="java.sql.DriverManager" as="default">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Migrate to JCA Connector" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_24yoad">
            <when>
                <javaclass references="amx_{*}" as="default">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Tibco ActiveMatrix Stub; regenerate the SOAP Client for the class" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_26root">
            <when>
                <javaclass references="com.tibco.matrix.java.annotations.WebParam" as="default"/>
            </when>
            <perform>
                <iteration>
                    <hint message="Tibco specific annotation; replace with javax.jws.WebParam" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_28bvli">
            <when>
                <javaclass references="com.tibco.amf.platform.runtime.extension.exception.SOAPCode" as="default"/>
            </when>
            <perform>
                <iteration>
                    <hint message="Tibco specific annotation" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_2Aqqrj">
            <when>
                <javaclass references="com.tibco.matrix.java.annotations.WebServiceInterface" as="default"/>
            </when>
            <perform>
                <iteration>
                    <hint message="Tibco specific annotation; replace with javax.jws.WebService" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_2Cegwk">
            <when>
                <javaclass references="com.tibco.matrix.java.annotations.WebMethod" as="default"/>
            </when>
            <perform>
                <iteration>
                    <hint message="Tibco specific annotation; replace with javax.jws.WebMethod" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_2Eiqrg">
            <when>
                <javaclass references="com.tibco.matrix.java.annotations.WebFault" as="default"/>
            </when>
            <perform>
                <iteration>
                    <hint message="Tibco specific annotation; replace with javax.xml.ws.WebFault" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_30nhrn">
            <when>
                <javaclass references="org.mule.transformers.AbstractTransformer" as="default"/>
            </when>
            <perform>
                <iteration>
                    <hint message="Mule specific; replace with org.apache.camel.Converter annotation" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="OtherBaseRules_32ncpm">
            <when>
                <javaclass references="org.mule.umo.UMOMessage.getPayload{*}" as="default">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint message="Mule specific; replace with org.apache.camel.Message.getBody()" effort="0">
                    </hint>
                </iteration>
            </perform>
        </rule>
    </rules>
</ruleset>
