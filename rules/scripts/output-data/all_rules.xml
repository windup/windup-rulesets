<root>

<rule><column name="id">xml-resin-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Security_Guide/jboss-webxml_Configuration_Reference.html</column>

<column name="title">Resin Web Application Descriptor</column>
<column name="contents"> An Resin specific file defining an application configuration. Such a file may define URL paths, internal resin ids, root directory path etc. This is Resin specific and needs to be migrated to web.xml or jboss-web.xml</column></rule>


<rule><column name="id">xml-glassfish-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Security_Guide/jboss-webxml_Configuration_Reference.html</column>

<column name="title">Glassfish Web Descriptor</column>
<column name="contents"> Glassfish specific web descriptor file that is by convention named glassfish-web.xml. It is used to configure web application properties likes cache, session configuration, JNDI name binding etc.</column></rule>

<rule><column name="id">xml-glassfish-02000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-Reference2.html#jboss-ejb3xml_Deployment_Descriptor_Reference</column>

<column name="title">Glassfish EJB Descriptor</column>
<column name="contents"> Glassfish specific ejb configuration file used to configure EJBs, map them to jndi names etc.</column></rule>

<rule><column name="id">xml-glassfish-03000</column>
<column name="link">http://www.jboss.org/schema/jbossas/jboss-app_7_0.xsd</column>

<column name="title">Glassfish Application EAR configuration file</column>
<column name="contents"> Glassfish-application  is a Glassfish specific EAR configuration file used to configure security roles, url addresses, JNDI binding etc. This file is glassfish specific and needs to be migrated to application.xml or jboss-app.xml.</column></rule>


<rule><column name="id">xml-orion-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-Reference2.html#jboss-ejb3xml_Deployment_Descriptor_Reference</column>

<column name="title">Oracle Application Platform EJB Descriptor</column>
<column name="contents"> Orion specific ejb configuration file used to configure EJBs, map them to jndi names etc.</column></rule>

<rule><column name="id">xml-orion-02000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Security_Guide/jboss-webxml_Configuration_Reference.html</column>

<column name="title">Oracle Application Platform Web Descriptor</column>
<column name="contents"> Oracle Application Platform Web Descriptor configuriation is defined in files by convention named global-web-application.xml and orion-web.xml. It is Orion specific configuration file that besides supporting the standard web.xml features also adds additional support for featuers like buffering, servlet chaining, locales, virtual directories. This file is not supported in JBoss EAP 6 and needs to be migrated to web.xml or JBoss-specific jboss-web.xml</column></rule>

<rule><column name="id">xml-orion-03000</column>
<column name="link">http://www.jboss.org/schema/jbossas/jboss-app_7_0.xsd</column>

<column name="title">Oracle Application EAR configuration file</column>
<column name="contents"> Orion-application file is an orion specific EAR configuration file used to configure default data sources for CMP beans, security user manager, jndi authorization etc. This file may have been generated by Orion.</column></rule>


<rule><column name="id">jsp-01000</column>

<column name="title">Empty import definition in a JSP</column>
<column name="contents">
                        Empty import definition in .jsp or .jspf files would fail in compilation time and needs to be removed.
                    </column></rule>


<rule><column name="id">environment-dependent-calls-01000</column>
<column name="link">https://access.redhat.com/solutions/361343</column>

<column name="title">Dynamic class instantiation</column>
<column name="contents">
                       
                       The class is dynamically loaded within application. During the migration, multiple classes that are provided on classpath by a different server may not be present anymore.

                       Please review the class-loading mechanisms and ensure that the dynamically loaded class is available in JBoss EAP.
                       
                     </column></rule>

<rule><column name="id">environment-dependent-calls-02000</column>
<column name="link">https://docs.jboss.org/author/display/AS71/JNDI+Reference</column>

<column name="title">Call of JNDI lookup</column>
<column name="contents">
                           
                           This method lookups an object using a JNDI String. During the migration process, some entity JNDI bindings may change.
                           Ensure that the JNDI Name does not need to change for JBoss

                           *For Example:*

                           ```java
                           (ConnectionFactory)initialContext.lookup("weblogic.jms.ConnectionFactory");
                           ```

                           *should become:*

                           ```java
                           (ConnectionFactory)initialContext.lookup("/ConnectionFactory");
                           ```
                           
                        </column></rule>

<rule><column name="id">environment-dependent-calls-03000</column>
<column name="link">https://access.redhat.com/articles/1496973</column>

<column name="title">Proprietary InitialContext initialization</column>
<column name="contents">
                      
                      In JBoss EAP, the `InitialContext` should be instantiated with no arguments. Once an instance is constructed, look up the service using portable JNDI lookup syntax. Ensure also that in case system properties for `InitialContext` are provided, they do not need to be changed for the JBoss.

                      ```java
                      InitialContext context = new InitialContext();
                      Service service = (Service) context.lookup( "java:app/service/" + ServiceImpl.class.getSimpleName() );
                      ```
                      
                    </column></rule>

<rule><column name="id">environment-dependent-calls-03500</column>

<column name="title">JNDI properties file</column>
<column name="contents">
                          
                          The JNDI automatically reads the application resource files from all components in the applications' classpaths. The JNDI then makes the properties from these files available to the service providers.

                          Please ensure the property values listed in this file are available to JBoss.
                          
                        </column></rule>

<rule><column name="id">environment-dependent-calls-04000</column>

<column name="title">Reference to javax.management.{suffix}</column>
<column name="contents">
                          
                          After migration, some of the JMX beans provided by the previous server may not be present anymore.
                          Ensure that the `javax.management.{suffix}` does not need to change for JBoss.
                          
                        </column></rule>

<rule><column name="id">environment-dependent-calls-05000</column>

<column name="title">JMX connection</column>
<column name="contents">
                          
                          After migration, JMX connection String or parameters may be different than the one provided by previous server.
                          As an example, `javax.management.remote.JMXConnectorFactory.PROTOCOL_PROVIDER_PACKAGES` will change.
                          Ensure that any of the parameters does not need to change for JBoss EAP.
                          
                       </column></rule>

<ROOT xmlns="http://windup.jboss.org/v1/xml"/>

<rule><column name="id">generic-catchall-00000</column>
<column name="link">https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/package-summary.html</column>

<column name="title">Doug Lea Concurrency util</column>
<column name="contents">
                            This is an old Doug Lea Concurrency util type and needs to be migrated to a compatible `java.util.concurrent` API.
                            There is currently no detailed information about this type.
                            </column></rule>

<rule><column name="id">generic-catchall-00001</column>

<column name="title">backport-util-concurrent type reference</column>
<column name="contents">
                                This type is the backport of java.util.concurrent API, introduced in Java 5.0 and further refined in Java 6.0, to older Java platforms.
                                You should use java.util.concurrent API instead.
                            </column></rule>

<rule><column name="id">generic-catchall-00002</column>
<column name="link">http://camel.apache.org</column>

<column name="title">Mule API reference</column>
<column name="contents">
                                Mule API `org.mule.{package-remainder}.{type}` was used.
                                You should convert these types to Apache Camel.
                            </column></rule>

<rule><column name="id">generic-catchall-00003</column>

<column name="title">MX4J type reference</column>
<column name="contents">MX4J `mx4j.{package-remainder}.{type}` reference was used.</column></rule>

<rule><column name="id">generic-catchall-00100</column>

<column name="title">Apache Tuscany type reference</column>
<column name="contents">Apache Tuscany `org.osoa.sca.annotations.{type}` reference was used.</column></rule>

<rule><column name="id">generic-catchall-00200</column>

<column name="title">Tibco ActiveMatrix Stub</column>
<column name="contents">Tibco ActiveMatrix Stub; regenerate the SOAP Client for the class</column></rule>

<rule><column name="id">generic-catchall-00300</column>

<column name="title">Tibco type reference</column>
<column name="contents">
                                Tibco `com.tibco.{package-remainder}.{type}` reference found.
                                No specific details available.
                            </column></rule>

<rule><column name="id">generic-catchall-00400</column>

<column name="title">SAP CrystalReports type reference</column>
<column name="contents">SAP CrystalReports `com.crystaldecisions.{package-remainder}.{type}` reference found.
                         No specific details available.</column></rule>

<rule><column name="id">generic-catchall-00500</column>

<column name="title">IONA type reference</column>
<column name="contents">IONA `com.iona.{package-remainder}.{type}` reference found.
                         No specific details available.</column></rule>

<rule><column name="id">generic-catchall-00600</column>

<column name="title">Apache org.apache.{subpackage} type reference</column>
<column name="contents">Apache `org.apache.{subpackage}` API reference found. 
                          No specific details available.</column></rule>

<rule><column name="id">generic-catchall-00700</column>

<column name="title">JBoss API reference</column>
<column name="contents">`org.{subpackage}.{package-remainder}{type}` reference found. No specific details available.</column></rule>

<rule><column name="id">generic-catchall-00900</column>

<column name="title">java.sql.DriverManager type reference</column>
<column name="contents">`java.sql.DriverManager` type reference found. No specific details available.</column></rule>


<rule><column name="id">xml-jonas-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Security_Guide/jboss-webxml_Configuration_Reference.html</column>

<column name="title">JOnAS Web Descriptor</column>
<column name="contents"> JOnAS web descriptor is a file that is by convention named jonas-web.xml. It is JOnAS specific configuration file used to map JNDI name to bean reference name, bind virtual host address, specify root url for binding the application etc. This file is not supported in JBoss EAP 6 and needs to be migrated to web.xml or JBoss-specific jboss-web.xml.</column></rule>


<rule><column name="id">log4j-01000</column>
</rule>

<rule><column name="id">log4j-02000</column>
<column name="link">https://access.redhat.com/solutions/405893</column>
<column name="link">https://access.redhat.com/solutions/105653</column>
<column name="link">https://access.redhat.com/discussions/478983</column>
<column name="link">https://access.redhat.com/solutions/375273</column>

<column name="title">Log4j Configuration</column>
<column name="contents"/></rule>

<rule><column name="id">log4j-03000</column>
<column name="link">https://access.redhat.com/solutions/375273</column>

<column name="title">Log4j ConsoleAppender Configuration - Potential Deadlock</column>
<column name="contents">
                        Using ConsoleAppender configured in log4j.{suffix} can cause a deadlock on JBoss EAP 6. 
                        It is recommended to Remove application level log4j ConsoleAppenders.</column></rule>


<rule><column name="id">websphere-xml-01000</column>

<column name="title">IBM Process Server Rules 6.0</column>
<column name="contents">WBI is a WebSphere proprietary business integration solution. This needs to be migrated to JBoss Drools or JBPM/BRMS.</column></rule>

<rule><column name="id">websphere-xml-02000</column>
<column name="link">https://access.redhat.com/articles/1330673</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Security_Guide/Enabling_Role-Based_Access_Control.html</column>

<column name="title">WebSphere Application Binding Configuration</column>
<column name="contents">
                      
                      This file contains a specific IBM WebSphere Application binding configuration.

                      To migrate to EAP 6.x, configure EAP 6.x accordingly using the CLI interface or web console.
                      
                    </column>
<column name="title">WebSphere EAR Application Binding</column>
<column name="contents">This WebSphere application binding is an IBM proprietary method for binding user roles for authorization and needs to be migrated to JAAS or KeyCloak.</column></rule>

<rule><column name="id">websphere-xml-03000</column>
<column name="link">https://access.redhat.com/articles/1330673#jspattributes</column>
<column name="link">http://www-01.ibm.com/support/knowledgecenter/SS7JFU_6.1.0/com.ibm.websphere.javadoc.doc/configdoc/webappext/WebAppExtension.html</column>

<column name="title">WebSphere proprietary JSP engine configuration</column>
<column name="contents">
                          
                          This file contains WebSphere specific web application bindings. This would derive from J2EE web application.

                          To migrate to EAP 6.x, configure EAP 6.x accordingly using the CLI interface or web console.
                          
                        </column>
<column name="title">WebSphere proprietary JSP engine configuration</column>
<column name="contents">WebSphere (Java EE version prior to version 5) proprietary JSP engine configuration</column></rule>

<rule><column name="id">websphere-xml-04000</column>
<column name="link">https://access.redhat.com/articles/1330673</column>

<column name="title">WebSphere proprietary JSP engine configuration</column>
<column name="contents">
                      
                      This file contains WebSphere proprietary JSP engine configuration.

                      To migrate to EAP 6.x, configure EAP 6.x accordingly using the CLI interface or web console.
                      
                      </column></rule>

<rule><column name="id">websphere-xml-06000</column>
<column name="link">http://rjweb002.royalsun.com.br/configDocs/webappbnd/WebAppBinding.html</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#chap-Web_Subsystem</column>
<column name="link">http://docs.jboss.org/jbossweb/7.0.x/</column>
<column name="link">https://access.redhat.com/articles/1330673</column>

<column name="title">WebSphere web application binding</column>
<column name="contents">
                      
                      This file contains WebSphere proprietary binding configuration.

                      To migrate to EAP 6.x, configure EAP 6.x accordingly using the CLI interface or web console.
                      
                    </column>
<column name="title">WebSphere proprietary configuration</column>
<column name="contents">WebSphere web application binding configuration file.</column></rule>

<rule><column name="id">websphere-xml-07000</column>
<column name="link">https://docs.jboss.org/author/display/JBWS/Predefined+client+and+endpoint+configurations</column>

<column name="title">WebSphere ETools WSClient Extension</column>
<column name="contents">Client IBM-specific deployment descriptor extension that needs to be migrated to JBoss WS.</column></rule>

<rule><column name="id">websphere-xml-08000</column>
<column name="link">https://docs.jboss.org/author/display/JBWS/Web+Services+Introduction</column>

<column name="title">WebSphere ETools WSClient Binding</column>
<column name="contents">Client IBM-specific deployment descriptor binding that needs to be migrated to JBoss WS.</column></rule>

<rule><column name="id">websphere-xml-09000</column>

<column name="title">WebSphere deployment descriptor</column>
<column name="contents">This file is an auto-generated WebSphere proprietary deployment descriptor.</column></rule>


<rule><column name="id">websphere-other-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Administration_and_Configuration_Guide/Configure_the_Java_Connector_Architecture_JCA_Subsystem.html</column>
<column name="link">http://www.javaworld.com/article/2077671/build-ci-sdlc/the-wise-work-manager-for-context-based-scoping.html</column>
<column name="link">https://jcp.org/en/jsr/detail?id=237</column>

<column name="title">WebSphere Work Manager</column>
<column name="contents">
                      
                      WebSphere Asynchronous Work is a Work Manager, whose purpose is to allow the user utilizing threads while letting the container manage them.

                      For migration to JBoss EAP 6, [replace with JCA Work Manager](https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Administration_and_Configuration_Guide/Configure_the_Java_Connector_Architecture_JCA_Subsystem.html).
                      
                    </column></rule>

<rule><column name="id">websphere-other-02000</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/ejb/Singleton.html</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/ejb/Startup.html</column>

<column name="title">WebSphere Startup Service</column>
<column name="contents">
                      
                      WebSphere Startup Service serves as a callback to be invoked when the server or application starts.

                      When migrating to JBoss EAP 6, this has to be replaced with standard EJB 3.1 Startup Bean, using `@Startup @Singleton` class and `@PostConstruct` method.
                      
                    </column></rule>


<rule><column name="id">websphere-jms-00000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html</column>
<column name="link">http://docs.jboss.org/hornetq/2.4.0.Final/docs/user-manual/html_single/index.html#d0e1472</column>
<column name="link">https://docs.jboss.org/hornetq/2.4.0.Final/api/index.html?org/hornetq/api/core/client/package-summary.html</column>

<column name="title">IBM JMS Client</column>
<column name="contents">WebSphere MQ client API is used to communicate with the MQ server from client-side applications.
                        For JBoss EAP 6, this needs to be replaced with standard Java EE 6 JMS API, or with HornetQ client API.
                    </column></rule>

<rule><column name="id">websphere-jms-01000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html</column>

<column name="title">IBM {prefix}{type}ConnectionFactory reference</column>
<column name="contents">
                        IBM {prefix}{type}ConnectionFactory is a proprietary encapsulation of JMS servers to which Connections can be created for
                        message distribution. This reference should be replaced with the Java EE standard API: `javax.jms.{type}ConnectionFactory`.
                    </column></rule>

<rule><column name="id">websphere-jms-02000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html</column>

<column name="title">IBM JMS message JmsMsg{type}</column>
<column name="contents">
                        IBM JMS message {type}s are used for sending/reading messages to/from a topic or queue. This reference should be
                        replaced with the Java EE standard API `javax.jms.Message{type}`.
                    </column></rule>

<rule><column name="id">websphere-jms-02500</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html</column>

<column name="title">WebSphere implementation MQe{type}Queue of JMS Queue</column>
<column name="contents">
                        `MQe{type}Queue` is a WebSphere implementation of a JMS `Queue` and should be migrated to
                        the Java EE 6 JMS standard interface `javax.jms.Queue`.
                    </column></rule>

<rule><column name="id">websphere-jms-03000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html#bnces</column>

<column name="title">IBM JMS {type} message</column>
<column name="contents">
                                JMS {type} messages represent the actual data passed through JMS destinations. This reference should be
                                replaced with the Java EE standard API `javax.jms.{type}Message`.
                            </column></rule>

<rule><column name="id">websphere-jms-04000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html</column>

<column name="title">IBM proprietary interface {prefix}{type}</column>
<column name="contents">
                                {prefix}{type} is an IBM proprietary interface and needs to be migrated to the Java EE standard API `javax.jms.{type}`.
                            </column></rule>


<rule><column name="id">websphere-mqe-00000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html</column>
<column name="link">http://www-01.ibm.com/support/knowledgecenter/SSVHEW_6.2.0/com.ibm.mqe.javadoc/java/overview-summary.html</column>

<column name="title">IBM MQe client API</column>
<column name="contents">WebSphere MQe client API is used to communicate with the MQ server from client-side applications.
                        For JBoss EAP 6, this needs to be replaced with standard Java EE 6 JMS API, or with HornetQ client API.
                    </column></rule>

<rule><column name="id">websphere-mqe-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Administration_and_Configuration_Guide/Deploy_the_WebSphere_MQ_Resource_Adapter.html</column>
<column name="link">http://www-01.ibm.com/support/knowledgecenter/SSVHEW_6.2.0/com.ibm.mqe.javadoc/java/com/ibm/mqe/adapters/package-summary.html</column>

<column name="title">IBM MQe com.ibm.mqe.adapters.MQe{type}Adapter</column>
<column name="contents">
                        IBM MQe {type} adapter provides plug-in communications adapters or data storage adapters for queue managers. These can
                        be deployed to JBoss EAP.
                    </column></rule>

<rule><column name="id">websphere-mqe-02000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#Configure_the_JMS_Server1</column>
<column name="link">http://www-01.ibm.com/support/knowledgecenter/SSVHEW_6.2.0/com.ibm.mqe.javadoc/java/com/ibm/mqe/administration/package-summary.html</column>

<column name="title">IBM MQe com.ibm.mqe.administration.MQe{type}AdminMsg</column>
<column name="contents">IBM MQe {type} administration API provides classes used to administer and monitor a WebSphere MQ Everyplace queue manager. In
                        JBoss EAP 6, the JMS destinations can be configured with the JBoss Admin CLI.
                    </column></rule>

<rule><column name="id">websphere-mqe-03000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#About_Security_Domains</column>

<column name="title">IBM MQe com.ibm.mqe.jms.MQeJMSAuthenticator</column>
<column name="contents">
                        `MQeJMSAuthenticator` is a WebSphere proprietary JMS authentication API.
                        To migrate to JBoss EAP 6, replace with Java EE 6 JAAS for JMS authentication.
                    </column></rule>

<rule><column name="id">websphere-mqe-04000</column>

<column name="title">IBM MQe com.ibm.mqe.jms.MQeJMSMsgFieldNames</column>
<column name="contents">
                        IBM MQe constants are used to name fields when a JMS message is mapped to an `MQeMsgObject`. These are provided to
                        enable WebSphere MQ Everyplace applications to interpret messages sent by JMS or to construct messages that a JMS application
                        will understand.

                        These settings can be discarded when migrating to JBoss EAP 6 with HornetQ.
                    </column></rule>


<rule><column name="id">websphere-mq-00000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html</column>
<column name="link">http://www-01.ibm.com/support/knowledgecenter/SSVHEW_6.2.0/com.ibm.mqe.javadoc/java/overview-summary.html</column>

<column name="title">IBM MQ client API</column>
<column name="contents">WebSphere MQ client API is used to communicate with the MQ server from client-side applications.
                        For JBoss EAP 6, this needs to be replaced with standard Java EE 6 JMS API, or with HornetQ client API.
                    </column></rule>

<rule><column name="id">websphere-mq-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#Migrate_Your_Application_to_Use_HornetQ_as_the_JMS_Provider</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html</column>

<column name="title">IBM JMS implementation of WMQInitialContextFactory</column>
<column name="contents">`WMQInitialContextFactory` is an implementation of `InitialContextFactory`
                        used to get object instances from JNDI. The
                        equivalent functionality needs to be configured on JBoss EAP 6 using HornetQ.
                        `InitialContextFactory` is provided
                        by EAP and you only need to instantiate `InitialContext ctx = new InitialContext();`.
                    </column>
<column name="title">IBM MQ Configuration</column>
<column name="contents">The WebSphere MQ client API is used to communicate with the MQ server from client-side applications.
                        For JBoss EAP 6, this needs to be replaced with standard Java EE 6 JMS API, or with HornetQ client API.
                    </column></rule>

<rule><column name="id">websphere-mq-02000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#Configure_Messaging_with_HornetQ2</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html</column>

<column name="title">IBM WebSphere .scp file</column>
<column name="contents">
                        WebSphere `.scp` files contain scripts for the `jmsadmin` program which is used
                        to configure the WebSphere MQ destinations
                        and routing. To configure messaging in JBoss EAP 6 with HornetQ, use either the Management Console or Management CLI with it's
                        scripting feature.
                    </column>
<column name="title">IBM MQ Configuration</column>
<column name="contents"/></rule>

<ROOT xmlns="http://windup.jboss.org/v1/xml"/>

<rule><column name="id">websphere-catchall-db2-00000</column>
<column name="link">https://access.redhat.com/solutions/93693</column>

<column name="title">IBM DB2 driver type reference</column>
<column name="contents">
                                This is a reference to the IBM DB2 driver type (`com.ibm.db2.jcc.{type}`). It probably does not need to be migrated. However the IBM DB2 driver should be configured properly.
                            </column></rule>

<rule><column name="id">websphere-catchall-00000</column>

<column name="title">IBM proprietary type reference</column>
<column name="contents">
                                This is an IBM proprietary type (`{package}.{type}`) and needs to be migrated to a compatible API. There is currently no detailed
                                information about this type.
                            </column></rule>

<rule><column name="id">websphere-catchall-00001</column>

<column name="title">IBM ILog proprietary type reference</column>
<column name="contents">
                                This is an IBM ILog proprietary type (`ilog.{subpackage}.{type}`) and needs to be migrated to a compatible API. There is currently no detailed
                                information about this type.
                            </column></rule>


<rule><column name="id">xml-jrun-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Security_Guide/jboss-webxml_Configuration_Reference.html</column>

<column name="title">JRun Web App descriptor</column>
<column name="contents"> JRun web descriptor is a file that is by convention named jrun-web. It is JRun specific configuration file used to configure JRun server. This file is not supported in JBoss EAP 6 and needs to be migrated to web.xml or JBoss-specific jboss-web.xml</column></rule>

<rule><column name="id">xml-jrun-02000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-Reference2.html#jboss-ejb3xml_Deployment_Descriptor_Reference</column>

<column name="title">JRun ejb-jar configuration</column>
<column name="contents"> JRun ejb configuration file used to configure EJBs, map them to jndi names etc.</column></rule>


<rule><column name="id">jrun-catchall-00000</column>

<column name="title">JRun</column>
<column name="contents"/></rule>

<rule><column name="id">jrun-catchall-00001</column>

<column name="title">JRunX</column>
<column name="contents"/></rule>


<rule><column name="id">eap4-eap6-25000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#Update_the_DataSource_Configuration</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#sect-Datasource_Configuration</column>

<column name="title">PostgreSQL JDBC URL</column>
<column name="contents">
                        This is a JDBC URL, which describes the basic information about
                        where and how to connect to the database.
                        This particular URL points to a PostgreSQL database.

                        In EAP 6, the databases are configured in these steps:

                        1. Add the JDBC driver as an EAP 6 module. Download it [here](https://jdbc.postgresql.org/download.html).
                        2. Create a datasource (actual values need to be changed):
                            ```
                            $ EAP_HOME/bin/jboss-cli --connect
                            [standalone@localhost:9999 /] data-source add --name=ExampleDS --jndi-name=java:/ExampleDS \\
                                --connection-url=... --driver-name=postgresql \\
                                --user-name=... --password=...
                            ```
                        3. Use the datasource according to JPA 2.0 standards.
                    </column></rule>

<rule><column name="id">eap4-eap6-26000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#sect-Datasource_Configuration</column>

<column name="title">Oracle Database JDBC URL</column>
<column name="contents">
                        This is a JDBC URL, which describes the basic information about
                        where and how to connect to the database.
                        This particular URL points to an Oracle Database.

                        In EAP 6, the databases are configured in these steps:

                        1. Add the JDBC driver as an EAP 6 module. Download it [here](http://www.oracle.com/technetwork/database/features/jdbc/index-091264.html).
                        2. Create a datasource (actual values need to be changed):
                            ```
                            $ EAP_HOME/bin/jboss-cli --connect
                            [standalone@localhost:9999 /] data-source add --name=ExampleDS --jndi-name=java:/ExampleDS \\
                                --connection-url=... --driver-name=oracle \\
                                --user-name=... --password=...
                            ```
                        3. Use the datasource according to JPA 2.0 standards.

                            ```
                            @PersistenceContext EntityManager em;
                            ```
                    </column></rule>

<rule><column name="id">eap4-eap6-27000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#sect-Datasource_Configuration</column>

<column name="title">Microsoft SQL Server JDBC URL</column>
<column name="contents">
                      
                        This is a JDBC URL, which describes the basic information about
                        where and how to connect to the database.
                        This particular URL points to an Microsoft SQL Server.

                        In EAP 6, the databases are configured in these steps:

                        1. Add the JDBC driver as an EAP 6 module. Download it [here](https://msdn.microsoft.com/en-us/sqlserver/aa937724.aspx).
                        2. Create a datasource (actual values need to be changed):
                            ```
                            $ EAP_HOME/bin/jboss-cli --connect
                            [standalone@localhost:9999 /] data-source add --name=ExampleDS --jndi-name=java:/ExampleDS \\
                                --connection-url=... --driver-name=mssql \\
                                --user-name=... --password=...
                            ```
                        3. Use the datasource according to JPA 2.0 standards.

                            ```
                            @PersistenceContext EntityManager em;
                            ```
                      
                    </column></rule>

<rule><column name="id">eap4-eap6-28000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#sect-Socket_Binding_Groups</column>
<column name="link">https://docs.jboss.org/author/display/AS7/Interfaces+and+ports</column>

<column name="title">JBoss Web connector port</column>
<column name="contents">
                        
                        The `&lt;Connector port="..."/&gt;` attribute specifies the port
                        on which JBoss Web listens for requests.
                        In JBoss EAP 6, set the port number using JBoss CLI or a web console:
                        ```
                        :read-children-names(child-type=interface)
                        /subsystem=web/connector=http/:read-resource
                        ## Notice the "socket-binding" =&gt; "http"
                        /socket-binding-group=standard-sockets/socket-binding=http/:read-resource
                        ## Now set the HTTP port to what you need.
                        /socket-binding-group=standard-sockets/socket-binding=http/:write-attribute(name=port, value=80)
                        ```
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-29000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#Define_Thread_Pools_for_HTTP_Connector_in_JBoss_Enterprise_Application_Platform</column>

<column name="title">JBoss Web connector protocol</column>
<column name="contents">
                        
                        The `&lt;Connector protocol="..."/&gt;` attribute specifies the protocol
                        of the particular JBoss Web connector.
                        In JBoss EAP 6, set the protocol using JBoss CLI or a web console:
                        ```
                        :read-children-names(child-type=interface)
                        /subsystem=web/connector=http/:read-resource
                        /subsystem=web/connector=http/:write-attribute(name=protocol, value=HTTP/1.1)
                        ##  To enable NIO protocol:
                        /subsystem=web/connector=http/:write-attribute(name=protocol, value=org.apache.coyote.http11.Http11NioProtocol)
                        ```
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-30000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#Define_Thread_Pools_for_HTTP_Connector_in_JBoss_Enterprise_Application_Platform</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#Define_Thread_Pools_for_HTTP_Connector_in_JBoss_Enterprise_Application_Platform</column>

<column name="title">JBoss Web connector - maximal number of threads</column>
<column name="contents">
                        
                        The `&lt;Connector maxThreads="..."/&gt;` attribute specifies the
                        maximum number of JBoss Web Connector threads.
                        In JBoss EAP 6, the
                        [connections do not map 1:1 to threads](https://access.redhat.com/solutions/389513),
                        thanks to use of `javax.nio`. There can be more connection
                        served by less threads.

                        You can set the maximum number of connections using JBoss CLI or a web console:
                        ```
                        /subsystem=web/connector=http/:write-attribute(name=max-connections, value=200)
                        ```
                        The default is 512 per CPU core.

                        You can limit the number of threads using JBoss CLI or a web console:
                        ```
                        /subsystem=web/connector=http/:read-resource
                        ##  Define a thread factory
                        /subsystem=threads/thread-factory=http-connector-factory:add(thread-name-pattern="HTTP-%t", priority="9", group-name="uq-thread-pool")
                        ##  Create an executor
                        /subsystem=threads/unbounded-queue-thread-pool=uq-thread-pool:add(thread-factory="http-connector-factory", keepalive-time=\{time=30, unit="seconds"}, max-threads=30)
                        ##  Make the HTTP web connector use this thread pool
                        /subsystem=web/connector=http:write-attribute(name=executor, value="uq-thread-pool")
                        ```
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-31000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-JBoss_Web_Component_Changes</column>

<column name="title">JBoss Web connector connection timeout</column>
<column name="contents">
                        
                        The `&lt;Connector connectionTimeout="..."/&gt;` attribute specifies the connection timeout
                        of the particular JBoss Web connector.
                        In JBoss EAP 6, set the connection timeout using a system property:
                        ```
                        /system-property=org.apache.coyote.ajp.DEFAULT_CONNECTION_TIMEOUT/:add(value=600000)
                        /system-property=org.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT/:add(value=120000)
                        ```
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-32000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#chap-Web_Subsystem</column>

<column name="title">JBoss Web HTTP connector - empty path of the session cookie</column>
<column name="contents">
                        
                        JBoss Web's `emptySessionPath` option sets the path of a session cookie to '/'.
                        In JBoss EAP 6, the path is set in a web framework, or in `web.xml`:
                        ```xml
                        &lt;session-config&gt;
                            &lt;cookie-config&gt;
                                &lt;path&gt;/&lt;/path&gt;
                                &lt;http-only&gt;true&lt;/http-only&gt;
                                &lt;secure/&gt;
                            &lt;/cookie-config&gt;
                            &lt;tracking-mode&gt;COOKIE&lt;/tracking-mode&gt;
                        &lt;/session-config&gt;
                        ```
                        Not to be confused with Undertow's `path` which sets the session files storage path.
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-33000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-JBoss_Web_Component_Changes</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#chap-Web_Subsystem</column>

<column name="title">JBoss Web connector DNS lookups</column>
<column name="contents">
                        
                        The `&lt;Connector enableLookups="..."/&gt;` attribute
                        enables DNS lookup through `request.getRemoteHost()`.
                        Define this setting using JBoss CLI or the web console.
                        ```
                        /subsystem=web/connector=http:write-attribute(name=enable-lookups, value=true)
                        ```
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-34000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-JBoss_Web_Component_Changes</column>

<column name="title">JBoss Web HTTP connector port for redirections</column>
<column name="contents">
                        
                        The `&lt;Connector redirectPort="..."/&gt;` attribute
                        specifies  a port number to be used in cases of redirection; the common ones being redirection to secure (HTTPS) or AJP connector.

                        Define this setting using JBoss CLI or the web console.
                        ```
                        /subsystem=web/connector=http:write-attribute(name=redirect-port, value=8433)
                        ```
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-35000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-JBoss_Web_Component_Changes</column>

<column name="title">JBoss Web connector scheme</column>
<column name="contents">
                        
                        The `&lt;Connector scheme="..."/&gt;` attribute
                        specifies the web connector scheme, such as HTTP or HTTPS.

                        Define this setting using JBoss CLI or the web console.
                        ```
                        /subsystem=web/connector=http:write-attribute(name=scheme, value=http)
                        ```
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-36000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-JBoss_Web_Component_Changes</column>

<column name="title">JBoss Web HTTP connector - the secure option</column>
<column name="contents">
                        
                        The `secure` option tells the browser (or other HTTP clients) to only send the cookie over SSL connections.
                        This means the cookie will not be available to any part of the site that is not secure.
                        If you serve both protocols, the non-secure http connection will then use URL re-writing with the long ";jsessionid=XXXXXXX" appended to every URL.

                        You should set this to true ONLY if you are only serving https content, for mixed content this setting in NOT recomended.

                        Define this setting using JBoss CLI or the web console.
                        ```
                        /subsystem=web/connector=http:write-attribute(name=secure, value=true)
                        ```
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-37000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#Configure_the_Enterprise_Application_Platform_to_Accept_Requests_From_an_External_HTTPD1</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#System_Properties</column>

<column name="title">JBoss Web HTTP - jvmRoute</column>
<column name="contents">
                        
                        In JBoss Web, the `jvmRoute` attribute of the Engine element allows the load balancer to match requests
                        to the JVM currently responsible for updating the relevant session.
                        It does this by appending the name of the JVM to the `JSESSIONID` of the request,
                        and matching this against the worker name provided in `workers.properites`.

                        In JBoss EAP 6,
                        the `jvmRoute` is set to the same value as the server name.
                        If you need to customize it, you can use a command like the following.
                        Replace or remove the `/profile=ha portion` of the command, depending on which profile you use or
                        whether you use a standalone server.
                        Replace the string `CUSTOM_ROUTE_NAME` with your custom jvmRoute name.

                        ```
                        /profile=ha/subsystem=web:write-attribute(name="instance-id", value="CUSTOM_ROUTE_NAME")
                        ```

                        The default can be overriden by setting the `jvmRoute` system property.
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-38000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-EJB_Changes</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#Assign_Bean_Pools_for_Session_and_Message-Driven_Beans</column>
<column name="link">http://www.jboss.org/j2ee/dtd/jboss_5_0.dtd</column>
<column name="link">https://docs.jboss.org/jbossas/docs/Server_Configuration_Guide/4/html/EJBDeployer_MBean-Container_configuration_information.html</column>

<column name="title">JBoss EAP 4 EJB container configuration</column>
<column name="contents">
                        
                        JBoss EAP 4 and 5 allows overriding the container settings in `jboss.xml` files.
                        Extending `"Standard Stateless SessionBean"` allows configuring the instance pool.
                        Bean-specific instance pool can be set with one line in JBoss EAP 6 management CLI.
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-39000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-EJB_Changes</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#Assign_Bean_Pools_for_Session_and_Message-Driven_Beans</column>
<column name="link">http://www.jboss.org/j2ee/dtd/jboss_5_0.dtd</column>
<column name="link">https://docs.jboss.org/jbossas/docs/Server_Configuration_Guide/4/html/EJBDeployer_MBean-Container_configuration_information.html</column>

<column name="title">JBoss EAP 4 EJB container configuration</column>
<column name="contents">
                        
                        JBoss EAP 4 allows overriding the container settings in `jboss.xml` files.
                        Extending `"Clustered Stateless SessionBean"` allows configuring the instance pool.
                        Bean-specific instance pool can be set with one line in JBoss EAP 6 management CLI.
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-40000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-EJB_Changes</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#Assign_Bean_Pools_for_Session_and_Message-Driven_Beans</column>
<column name="link">http://www.jboss.org/j2ee/dtd/jboss_5_0.dtd</column>
<column name="link">https://docs.jboss.org/jbossas/docs/Server_Configuration_Guide/4/html/EJBDeployer_MBean-Container_configuration_information.html</column>

<column name="title">JBoss EAP 4 EJB container configuration</column>
<column name="contents">
                        
                        JBoss EAP 4 and 5 allows overriding the container settings in `jboss.xml` files.
                        Extending `"Standard Message Driven Bean"` allows configuring the instance pool.
                        MDB's bean-specific instance pool can be set with one line in JBoss EAP 6 management CLI.
                        Use the `bean-instance-pool-ref` CLI node of the respective configuration part.
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-41000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-EJB_Changes</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#Assign_Bean_Pools_for_Session_and_Message-Driven_Beans</column>
<column name="link">http://www.jboss.org/j2ee/dtd/jboss_5_0.dtd</column>
<column name="link">https://docs.jboss.org/jbossas/docs/Server_Configuration_Guide/4/html/EJBDeployer_MBean-Container_configuration_information.html</column>

<column name="title">JBoss EAP 4 EJB container configuration</column>
<column name="contents">
                        
                        JBoss EAP 4 and 5 allows overriding the container settings in `jboss.xml` files.
                        Extending `"Singleton Message Driven Bean"` allows configuring the instance pool.
                        Singleton Message Driven Bean's bean-specific bean-specific instance pool can be set with one line in JBoss EAP 6 management CLI.
                        Use the `bean-instance-pool-ref` CLI node of the respective configuration part.
                        
                    </column></rule>

<rule><column name="id">eap4-eap6-42000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-EJB_Changes</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#Assign_Bean_Pools_for_Session_and_Message-Driven_Beans</column>
<column name="link">http://www.jboss.org/j2ee/dtd/jboss_5_0.dtd</column>
<column name="link">https://docs.jboss.org/jbossas/docs/Server_Configuration_Guide/4/html/EJBDeployer_MBean-Container_configuration_information.html</column>

<column name="title">JBoss EAP 4 EJB container configuration</column>
<column name="contents">
                        
                        JBoss EAP 4 and 5 allows overriding the container settings in `jboss.xml` files.
                        Extending `"Standard Message Inflow Driven Bean"` allows configuring the instance pool.
                        Standard Message Inflow Driven Bean's bean-specific bean-specific instance pool can be set with one line in JBoss EAP 6 management CLI.
                        Use the `bean-instance-pool-ref` CLI node of the respective configuration part.
                        
                    </column></rule>


<rule><column name="id">jboss-eap5-java-01000</column>

<column name="title">JBoss EAP 5 JMX ManagementBean</column>
<column name="contents"/></rule>

<rule><column name="id">jboss-eap5-java-02000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Administration_and_Configuration_Guide/sect-Configuration1.html#Configure_the_JMS_Server1</column>

<column name="title">javax.jms.QueueConnectionFactory</column>
<column name="contents">
                      
                      `QueueConnectionFactory` was used to obtain connection to JMS queues.

                      Replace the lookup string `QueueConnectionFactory` with `ConnectionFactory`.
                      
                    </column></rule>

<rule><column name="id">jboss-eap5-java-04000</column>
<column name="link">https://docs.jboss.org/ejb3/docs/reference/build/reference/en/html/jboss_extensions.html</column>
<column name="link">https://docs.jboss.org/ejb3/embedded/api/org/jboss/annotation/ejb/package-summary.html</column>

<column name="title">org.jboss.annotation.ejb.Service</column>
<column name="contents">
                        The `@Service` annotation is one of JBoss EJB 3.0 extensions which creates a singleton EJB.
                        Use the new `org.jboss.ejb3.annotation.Service` instead.
                    </column></rule>

<rule><column name="id">jboss-eap5-java-05000</column>
<column name="link">https://docs.jboss.org/ejb3/docs/reference/build/reference/en/html/jboss_extensions.html</column>
<column name="link">https://docs.jboss.org/ejb3/embedded/api/org/jboss/annotation/ejb/package-summary.html</column>

<column name="title">org.jboss.annotation.ejb.Management</column>
<column name="contents">
                        The `@Management` annotation is one of JBoss EJB 3.0 extensions which wraps the the bean
                        as an MBean and install it in the JBoss MBean Server.
                        Use the new `org.jboss.ejb3.annotation.Management` instead.
                    </column></rule>

<rule><column name="id">jboss-eap5-java-06000</column>
<column name="link">https://docs.jboss.org/ejb3/docs/reference/build/reference/en/html/jboss_extensions.html</column>
<column name="link">https://docs.jboss.org/ejb3/embedded/api/org/jboss/annotation/ejb/package-summary.html</column>

<column name="title">org.jboss.annotation.ejb.LocalBinding</column>
<column name="contents">
                        The `@LocalBinding` annotation is one of JBoss EJB 3.0 extensions
                        which specifies the local jndi binding for an EJB local interface.
                        Migrate to `org.jboss.ejb3.annotation.LocalBinding`.
                    </column></rule>

<rule><column name="id">jboss-eap5-java-07000</column>
<column name="link">https://docs.jboss.org/ejb3/docs/reference/build/reference/en/html/jboss_extensions.html</column>
<column name="link">https://docs.jboss.org/ejb3/embedded/api/org/jboss/annotation/ejb/package-summary.html</column>

<column name="title">org.jboss.annotation.ejb.Depends</column>
<column name="contents">
                        The `@Depends` annotation is one of JBoss EJB 3.0 extensions
                        which specifies a deployment dependency for a bean.
                        Validate that a JBoss EAP 6 Dependency exists.
                    </column></rule>


<rule><column name="id">jboss-eap5-xml-01000</column>
<column name="link">https://developer.jboss.org/wiki/JBossCacheOfficialDocumentation</column>

<column name="title">JBoss Cache</column>
<column name="contents">
                        JBoss Cache TreeCache is a distributed tree-like structure that is replicated across several members.
                        Updates will be multicast to all group members reliably and in the same order.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-03000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/5/html/Microcontainer_User_Guide/sect-JBoss_Microcontainer_User_Guide-The_ClassLoading_Layer-ClassLoading.html</column>

<column name="title">JBoss Classloading configuration, typically in jboss-classloading.xml.</column>
<column name="contents">
                        JBoss EAP 5 allows detailed classloading configuration.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-04000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/5/html/Microcontainer_User_Guide/sect-JBoss_Microcontainer_User_Guide-The_ClassLoading_Layer-ClassLoading.html</column>

<column name="title">JBoss EAP 5 Classloading Configuration</column>
<column name="contents">
                        JBoss EAP 5 allows detailed classloading configuration.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-05000</column>
<column name="link">https://docs.jboss.org/seam/latest/reference/html/xml.html</column>

<column name="title">JBoss Seam Components</column>
<column name="contents">
                        Allows to configure a Seam component using XML: to isolate deployment-specific information from
                        the Java code, to enable the creation of re-usable frameworks, to configure Seam's built-in functionality, etc.
                        Seam provides two basic approaches to configuring components:
                        configuration via property settings in a properties file or in `web.xml`,
                        and configuration via `components.xml`.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-06000</column>
<column name="link">https://docs.jboss.org/seam/latest/reference/html_single/</column>

<column name="title">JBoss Seam Pages</column>
<column name="contents">
                        The `pages.xml` file specifies the page flow and other configuration of the Seam Framework.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-07000</column>

<column name="title">JBoss Seam Page</column>
<column name="contents"/></rule>

<rule><column name="id">jboss-eap5-xml-02000</column>
<column name="link">http://www.jboss.org/j2ee/dtd/</column>

<column name="title">JBoss 5.x EAR descriptor</column>
<column name="contents">
                        A JBoss specific EAR descriptor allows extensions to Java EE EAR archives configuration.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-08000</column>

<column name="title">JBoss EAR descriptor</column>
<column name="contents">
                            The `jboss-app.xml` file configures a Java EE application deployments specifically for JBoss EAP.
                        </column></rule>

<rule><column name="id">jboss-eap5-xml-09000</column>

<column name="title">JBoss web application descriptor (jboss-web.xml)</column>
<column name="contents">
                        The `jboss-web.xml` file configures a Java EE web application specifically for JBoss EAP.
                        It is an extension to standard `web.xml`.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-10000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/chap-Class_Loading_and_Modules.html</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/5/html/Microcontainer_User_Guide/sect-JBoss_Microcontainer_User_Guide-The_ClassLoading_Layer-ClassLoading.html</column>

<column name="title">JBoss 5 classloader configuration (jboss-classloading.xml)</column>
<column name="contents">
                        In JBoss EAP 6, the classloading configuration is not done through `jboss-classloading.xml`.
                        Since EAP 6 it is of modular nature, based on JBoss Modules.
                        Learn how to divide your application's dependencies into modules
                        and what dependencies and APIs are available automatically.
                    </column>
<column name="title">JBoss 5 classloader configuration (jboss-classloading.xml)</column>
<column name="contents">The `jboss-classloading.xml` file allows customization of classloading in JBoss EAP 5.</column></rule>

<rule><column name="id">jboss-eap5-xml-11000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/chap-Class_Loading_and_Modules.html</column>

<column name="title">JBoss module and classloading configuration (jboss-deployment-structure.xml)</column>
<column name="contents">
                        The `jboss-deployment-structure.xml` file allows the creator of the deployment to control the dependencies
                        and classloading of deployments.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-12000</column>
<column name="link">https://docs.jboss.org/jbossas/docs/Server_Configuration_Guide/4/html/The_CMP_Engine-The_jbosscmp_jdbc_Structure.html</column>

<column name="title">JBoss EJB 2 CMP Deployment descriptor (jbosscmp-jdbc.xml)</column>
<column name="contents">
                        The `jbosscmp-jdbc.xml` is a deployment decriptor controlling the Container Managed Persistence.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-13000</column>
<column name="link">http://docs.jboss.org/ejb3/app-server/tutorial/jboss_deployment_descriptor/jboss_dd.html</column>

<column name="title">JBoss EJB XML deployment descriptor prior to EAP 6</column>
<column name="contents">
                        The `jboss.xml` descriptor in deployments is ignored by JBoss AS 7+ or JBoss EAP 6+.
                        Replace it with `jboss-ejb3.xml`.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-14000</column>
<column name="link">http://docs.oracle.com/javase/7/docs/technotes/guides/security/jaas/JAASRefGuide.html</column>

<column name="title">JBoss EAP security-domain configuration - java:/jaas/</column>
<column name="contents">
                        `java:/jaas/` is a JBoss EAP `security-domain` URI.
                        Remove the `java:/jaas/` prefix for `security-domain` elements in AS 7 / EAP 6.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-16000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-6.4/red-hat-jboss-enterprise-application-platform-64-how-to-configure-server-security</column>
<column name="link">http://docs.jboss.org/jbosssecurity/docs/6.0/security_guide/html/Login_Modules.html</column>

<column name="title">JBoss security configuration descriptor (prior to AS 7 / EAP 6)</column>
<column name="contents">
                        When migrating to JBoss AS 7 or JBoss EAP 6+,
                        the `login-config.xml` descriptor is no longer supported.
                        Security is now configured in the `security-domain` element inside the server configuration.
                    </column>
<column name="title">JBoss security configuration descriptor (prior to AS 7 / EAP 6)</column>
<column name="contents"/></rule>

<rule><column name="id">jboss-eap5-xml-17000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-Reference2.html#jboss-ejb3xml_Deployment_Descriptor_Reference</column>

<column name="title">JBoss EJB 3 deployment descriptor (jboss-ejb3.xml)</column>
<column name="contents">
                        A JBoss specific EJB 3 configuration allows extensions of Java EE EJB 3.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-18000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-Web_Services_Changes</column>

<column name="title">JBoss web-services deployment descriptor (jboss-webservices.xml)</column>
<column name="contents">
                        JBossWS 4.0 introduces a new deployment descriptor to configure web services.
                        The `jboss-webservices.xml` file provides additional information for the given deployment
                        and partially replaces the obsolete `jboss.xml` file.

                        For EJB webservice deployments, the expected location of the `jboss-webservices.xml` descriptor file
                        is in the `META-INF/` directory. For POJO and EJB webservice endpoints bundled in WAR file,
                        the expected location of the `jboss-webservices.xml` file is in the `WEB-INF/` directory.
                    </column></rule>

<rule><column name="id">jboss-eap5-xml-20000</column>

<column name="title">JBoss EAP 4 JMS configuration</column>
<column name="contents"/></rule>


<rule><column name="id">commonj-01000</column>
<column name="link">https://access.redhat.com/solutions/199183</column>

<column name="title">Commonj Timer Manager API</column>
<column name="contents"/></rule>

<rule><column name="id">commonj-02000</column>
<column name="link">http://docs.oracle.com/javaee/6/tutorial/doc/bnboy.html</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/ejb/TimerService.html</column>

<column name="title">Migrate commonj.timers.TimerManager to Java EE TimerService API</column>
<column name="contents">Commonj Timer Manager API is similar to the EJB 3.1 java.ejb.Timer Service.
                 In Java EE 6, the Timer Service was updated to allow cron like configuration of scheduling which is similar to Quartz's timer configurations.
               </column></rule>

<rule><column name="id">commonj-03000</column>
<column name="link">http://docs.oracle.com/javaee/6/tutorial/doc/bnboy.html</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/ejb/Timer.html</column>

<column name="title">Migrate commonj.timers.Timer to Java EE javax.ejb.Timer</column>
<column name="contents">
                           Commonj Timer Interface is similar to the EJB 3.1 javax.ejb.Timer Interface.
                  </column></rule>

<rule><column name="id">commonj-04000</column>
<column name="link">https://access.redhat.com/solutions/199183</column>
<column name="link">http://docs.oracle.com/javaee/6/api/index.html?javax/resource/spi/work/package-summary.html</column>
<column name="link">http://www.ironjacamar.org/doc/api/spec/1.7/index.html?javax/resource/spi/work/package-summary.html</column>

<column name="title">Commonj WorkManager API</column>
<column name="contents"/></rule>

<rule><column name="id">commonj-05000</column>
<column name="link">http://www.ironjacamar.org/doc/api/spec/1.7/index.html?javax/resource/spi/work/WorkManager.html</column>

<column name="title">Replace CommonJ WorkManager with a JCA Resource Adapter</column>
<column name="contents">The CommonJ WorkManager can be replaced with a JCA Resource Adapter.</column></rule>

<rule><column name="id">commonj-06000</column>

<column name="title">Commonj WorkManager API</column>
<column name="contents">Replace commonj.work.Work{part} with javax.resource.spi.work.Work{part}.</column></rule>

<rule><column name="id">commonj-07000</column>

<column name="title">CommonJ WorkManager API Exception</column>
<column name="contents">Replace CommonJ Work related Exception with a javax.resource.spi.work.Work{subpart}Exception subclass.</column></rule>


<rule><column name="id">weblogic-webservices-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/chap-JAX-WS_Web_Services.html</column>

<column name="title">WebLogic proprietary web service implementation class</column>
<column name="contents">
                      
                      This web service stub uses the WebLogic proprietary web service implementation class ("weblogic.wsee.jaxrpc.ServiceImpl").
                      It might have been generated by a WebLogic proprietary tool.

                      This should be replaced using the standard Java EE JAX-WS framework. It could be regenerated using the JBoss web services tools.
                      Please refer to the [JAX-WS web service](https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/chap-JAX-WS_Web_Services.html) guide for more information.
                      
                    </column></rule>

<rule><column name="id">weblogic-webservices-02000</column>
<column name="link">https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#Develop_a_JAX-WS_Client_Application</column>

<column name="title">WebLogic asynchronous web service client</column>
<column name="contents">
                      
                      The [WebLogic proprietary Asynchronous Web Service Client API](https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm) should be replaced using calls to the JAX-WS asynchronous API.

                      More information is available in the [JBoss EAP documentation](https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#Develop_a_JAX-WS_Client_Application).
                      
                    </column></rule>

<rule><column name="id">weblogic-webservices-03000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/5/html/Web_Services_CXF_User_Guide/sect-Authentication.html</column>

<column name="title">WebLogic proprietary web service authentication</column>
<column name="contents">
                      
                        Replace proprietary web-service authentication with JAX-WS standard calls. To attach authentication with JBoss EAP, simply use the following code:

                        ```java
                        URL wsdlURL = new File("resources/jaxws/samples/context/WEB-INF/wsdl/TestEndpoint.wsdl").toURL();
                        QName qname = new QName("http://org.jboss.ws/jaxws/context", "TestEndpointService");
                        Service service = Service.create(wsdlURL, qname);
                        port = (TestEndpoint)service.getPort(TestEndpoint.class);

                        BindingProvider bp = (BindingProvider)port;
                        bp.getRequestContext().put(BindingProvider.USERNAME_PROPERTY, "jsmith");
                        bp.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, "PaSSw0rd");
                        ```
                      
                    </column></rule>

<rule><column name="id">weblogic-webservices-04000</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/xml/ws/WebServiceContext.html</column>

<column name="title">WebLogic proprietary web services API</column>
<column name="contents">
                      
                      This code uses the WebLogic specific class "weblogic.wsee.context.WebServiceContext". This usage will need to be replaced with the Java Enterprise Edition standard "javax.xml.WebServiceContext" interface.

                      Example code:

                      ```java
                          @Resource
                          private WebServiceContext webServiceContext;
                      ```
                      
                    </column></rule>

<rule><column name="id">weblogic-webservices-05000</column>

<column name="title">WebLogic proprietary web services API</column>
<column name="contents">
                        This exception (`weblogic.wsee.context.ContextNotFoundException`) is WebLogic specific and can be removed.
                    </column></rule>

<rule><column name="id">weblogic-webservices-06000</column>
<column name="link">https://docs.oracle.com/cd/E13222_01/wls/docs90/webserv/anttasks.html#1039270</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#Develop_a_JAX-WS_Client_Application</column>
<column name="link">https://jax-ws.java.net/nonav/2.2.6/docs/ch04.html#tools-wsgen</column>
<column name="link">https://cxf.apache.org/docs/tools.html</column>

<column name="title">WebLogic proprietary web services generated client classes</column>
<column name="contents">
                      
                      This class has been generated by a WebLogic web service client generator (ClientGen).

                      It could be replaced by an equivalent standard Java EE technology using for example the EAP 6 wsconsume tool, the wsgen tool or the CXF tools.
                      
                    </column></rule>


<rule><column name="id">weblogic-01000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnboy.html</column>

<column name="title">WebLogic Scheduled Job</column>
<column name="contents">
                      
                      WebLogic scheduled jobs should be migrated to use the EJB Timer Service.

                      More information is available within the [Java EE
                      6 Tutorial](https://docs.oracle.com/javaee/6/tutorial/doc/bnboy.html).
                      
                    </column>
<column name="title">WebLogic scheduled job</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-02000</column>
<column name="link">https://commons.apache.org/proper/commons-lang/</column>

<column name="title">WebLogic StringUtils usage</column>
<column name="contents">Replace with the `StringUtils` class from Apache Commons.</column></rule>

<rule><column name="id">weblogic-03000</column>

<column name="title">WebLogic specific Apache XML package</column>
<column name="contents">
                        Code using this package should be replaced with code using the org.apache.xml package from [Apache Xerces](http://xerces.apache.org/).
                    </column></rule>

<rule><column name="id">weblogic-04000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/chap-Java_Transaction_API_JTA.html</column>
<column name="link">http://docs.oracle.com/javaee/7/api/javax/transaction/TransactionManager.html</column>

<column name="title">WebLogic TransactionManager usage</column>
<column name="contents">Replace with the Java EE standard [javax.transaction.TransactionManager](http://docs.oracle.com/javaee/7/api/javax/transaction/TransactionManager.html)</column></rule>

<rule><column name="id">weblogic-05000</column>

<column name="title">WebLogic TransactionManager usage of resume method</column>
<column name="contents">Replace with the Java EE standard method `javax.transaction.TransactionManager.resume(Transaction tx)`.</column></rule>

<rule><column name="id">weblogic-06000</column>

<column name="title">WebLogic TransactionManager usage of suspend method</column>
<column name="contents">Replace with the Java EE standard `javax.transaction.TransactionManager.suspend()`</column></rule>

<rule><column name="id">weblogic-07000</column>

<column name="title">WebLogic TxHelper usage</column>
<column name="contents">Remove the `weblogic.transaction.TxHelper` import statement.</column></rule>

<rule><column name="id">weblogic-08000</column>

<column name="title">WebLogic ClientTxHelper</column>
<column name="contents">
                            
                            Look up the Java Enterprise Edition `javax.transaction.TransactionManager` in JBoss EAP using the following code:

                            ```java
                            InitialContext context = new InitialContext();
                            TransactionManager transactionManager =
                            (TransactionManager)context.lookup("java:jboss/TransactionManager");
                            ```
                            
                        </column></rule>

<rule><column name="id">weblogic-09000</column>
<column name="link">https://docs.oracle.com/database/121/JAJDB/oracle/jdbc/class-use/OracleClob.html</column>
<column name="link">http://docs.oracle.com/javase/7/docs/api/java/sql/Clob.html</column>

<column name="title">WebLogic proprietary Clob JDBC object (OracleThinClob)</column>
<column name="contents">
                        This Oracle and WebLogic proprietary code (`OracleThinClob`) should be replaced with the use of the java.sql.Clob interface.
                    </column></rule>

<rule><column name="id">weblogic-10000</column>
<column name="link">https://docs.oracle.com/database/121/JAJDB/oracle/jdbc/class-use/OracleClob.html</column>
<column name="link">http://docs.oracle.com/javase/7/docs/api/java/sql/Clob.html</column>

<column name="title">WebLogic JDBC code</column>
<column name="contents">
                        This code is specific to WebLogic and should be replaced with `java.sql.Clob.setCharacterStream(1)`
                    </column></rule>

<rule><column name="id">weblogic-11000</column>
<column name="link">https://docs.oracle.com/javase/7/docs/technotes/guides/logging/overview.html</column>
<column name="link">http://www.jboss.org/quickstarts/eap/logging/</column>

<column name="title">WebLogic proprietary logger (NonCatalogLogger)</column>
<column name="contents">
                      
                      The WebLogic `NonCatalogLogger` is not supported on JBoss EAP, and should be migrated to a supported logging framework,
                      such as the JDK Logger or JBoss Logging:

                      ```java
                      import java.util.logging.Logger;
                      Logger LOG = Logger.getLogger("MyLogger");
                      ```
                      
                    </column></rule>

<rule><column name="id">weblogic-12000</column>
<column name="link">https://access.redhat.com/articles/1329233</column>
<column name="link">https://access.redhat.com/solutions/42463</column>

<column name="title">WebLogic Oracle FCF JDBC property</column>
<column name="contents">
                      
                      Oracle Fast Connection Failover is specific property supported only by Oracle JDBC driver which provides support for their vendor's special features transparently to the application server in which they are deployed.

                      For example, one can supply a URL like this to the Oracle JDBC driver and the driver will provide transparent load-balancing and fail-over:
                      ```
                      &lt;xa-datasource-property name="URL"&gt;jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(LOAD_BALANCE=ON)(FAILOVER=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=my.host.org)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=my.host.org)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=servjboss)(failover_mode=(type=select)(method=basic)))&lt;/xa-datasource-property&gt;
                      ```
                      
                    </column></rule>

<rule><column name="id">weblogic-13000</column>
<column name="link">https://access.redhat.com/articles/1329253</column>

<column name="title">WebLogic side-by-side redeployment configuration</column>
<column name="contents">
                      
                      Oracle WebLogic Server includes a proprietary side-by-side production redeployment feature. For applications that meet certain requirements and restrictions, the new version of the application is deployed while the older version is still running.
                      The old and new applications must be running on the same server or cluster. The new version of the application accepts new web session requests while the older version finishes processing requests already in process. Upon completion of the existing session requests, the older version of the application is then undeployed.

                      In JBoss EAP, you can either deploy the new application to a secondary server group or cluster, or deploy the new application serially to the same clustered domain.
                      
                    </column></rule>

<rule><column name="id">weblogic-15000</column>
<column name="link">https://access.redhat.com/articles/1329073</column>

<column name="title">WebLogic Oracle Wallet</column>
<column name="contents">
                      
                      WebLogic administrators use wallets created by Oracle Wallet Manager to manage public key security credentials on application clients and servers.

                      These wallets must first be converted to standard Java KeyStore (JKS) entries that can then be used to configure the credentials in JBoss EAP 6.
                      
                    </column></rule>

<rule><column name="id">weblogic-016000</column>
<column name="link">https://access.redhat.com/solutions/161543</column>
<column name="link">https://access.redhat.com/solutions/396853</column>

<column name="title">WebLogic InitialContextFactory</column>
<column name="contents">
                    
                    `weblogic.jndi.WLInitialContextFactory` is an implementation of `InitialContextFactory` used to get object instances from JNDI.

                    The equivalent functionality needs to be configured on JBoss EAP 6 using `org.jboss.naming.remote.client.InitialContextFactory`. Then the context could be instanticated as follows: `InitialContext ctx = new InitialContext();`.
                    
                    </column></rule>

<rule><column name="id">weblogic-017000</column>
<column name="link">https://docs.oracle.com/cd/E24329_01/web.1211/e24389/rmi_t3.htm#WLRMI143</column>
<column name="link">https://access.redhat.com/solutions/1230143</column>

<column name="title">WebLogic proprietary T3 JNDI binding</column>
<column name="contents">
                    
                    Weblogic’s implementation of the RMI specification uses a proprietary protocol known as T3. T3S is the version of the protocol over SSL.
                     `t3://` and `t3s://` URLs are used to configure a JNDI InitialContext within WebLogic.

                    The equivalent functionality needs to be configured in JBoss EAP 6.
                    This could be done either by using standard Java EE JNDI names or by using a WebLogic proprietary library if the connectivity to WebLogic server is still required.
                    
                    </column></rule>


<rule><column name="id">weblogic-catchall-01000</column>

<column name="title">Proprietary type reference found</column>
<column name="contents">
                                This is an Oracle proprietary type (`com.bea{subpackage}.{type}`) and needs to be migrated to a compatible API. There is currently no detailed information about this type.
                            </column></rule>

<rule><column name="id">weblogic-catchall-02000</column>

<column name="title">Proprietary type reference found</column>
<column name="contents">
                                This is an Oracle proprietary type (`com.oracle{subpackage}.{type}`) and needs to be migrated to a compatible API. There is currently no detailed information about this type.
                            </column></rule>

<rule><column name="id">weblogic-catchall-03000</column>

<column name="title">Proprietary type reference found</column>
<column name="contents">
                                This is an Oracle proprietary type (`com.tangosol{subpackage}.{type}`) and needs to be migrated to a compatible API. There is currently no detailed information about this type.
                            </column></rule>

<rule><column name="id">weblogic-catchall-04000</column>

<column name="title">WebLogic proprietary type reference found</column>
<column name="contents">
                              
                              This is an Oracle WebLogic proprietary type (`com.weblogic{subpackage}.{type}`) and needs to be migrated to a compatible API. There is currently no detailed information about this type.

                              Please review each item and make sure that no reference to Oracle WebLogic classes is remaining.
                              
                            </column></rule>

<rule><column name="id">weblogic-catchall-05000</column>

<column name="title">Oracle BEA proprietary type reference</column>
<column name="contents">
                              
                              This is an Oracle proprietary type (`bea.{remainder}`) and needs to be migrated to a compatible API. There is currently no detailed information about this type.

                              Please review each item and make sure that no reference to Oracle WebLogic classes is remaining.
                              
                            </column></rule>

<rule><column name="id">weblogic-catchall-06000</column>

<column name="title">Oracle proprietary SQL type reference</column>
<column name="contents">
                              
                              This is an Oracle proprietary SQL type (`oracle.sql.{remainder}`).

                              In most of the cases, it does not need to be migrated to a compatible API.
                              
                            </column></rule>

<rule><column name="id">weblogic-catchall-06500</column>

<column name="title">Oracle proprietary JDBC type reference</column>
<column name="contents">
                              
                              This is an Oracle proprietary JDBC type (`oracle.sql.{remainder}`).

                              It should be replaced by standard Java EE JCA, datasource and JDBC types.
                              
                            </column></rule>

<rule><column name="id">weblogic-catchall-07000</column>

<column name="title">Oracle proprietary type reference</column>
<column name="contents">
                              
                              This is an Oracle proprietary type (`oracle.{remainder}`) and needs to be migrated to a compatible API. There is currently no detailed information about this type.
                              
                            </column></rule>

<rule><column name="id">weblogic-catchall-08000</column>

<column name="title">WebLogic proprietary type reference</column>
<column name="contents">
                              
                              This is an Oracle WebLogic proprietary type (`weblogic.{remainder}`) and needs to be migrated to a compatible API. There is currently no detailed
                              information about this type.

                              Please review each item and make sure that no reference to Oracle WebLogic classes is remaining.
                              
                            </column></rule>


<rule><column name="id">weblogic-webapp-01000</column>
<column name="link">https://access.redhat.com/articles/1332613</column>

<column name="title">WebLogic Virtual directory mapping</column>
<column name="contents">Virtual directories supported in WebLogic are not supported in JBoss EAP.</column></rule>

<rule><column name="id">weblogic-webapp-02000</column>
<column name="link">https://access.redhat.com/articles/1249423</column>

<column name="title">WebLogic proprietary servlet annotations</column>
<column name="contents">
                      
                      Replace the proprietary WebLogic `@WLServlet` annotation with the Java EE 6 standard `@WebServlet` annotation.

                      See the [javax.servlet.annotation JavaDoc](http://docs.oracle.com/javaee/6/api/javax/servlet/annotation/package-summary.html) for more information.
                      
                    </column></rule>

<rule><column name="id">weblogic-webapp-03000</column>
<column name="link">https://access.redhat.com/articles/1249423</column>

<column name="title">WebLogic proprietary servlet annotations</column>
<column name="contents">
                      
                      Replace the proprietary WebLogic `@WLInitParam` annotation with the Java EE 6 standard `@WebInitParam` annotation.

                      See the [javax.servlet.annotation JavaDoc](http://docs.oracle.com/javaee/6/api/javax/servlet/annotation/package-summary.html) for more information.
                      
                    </column></rule>

<rule><column name="id">weblogic-webapp-04000</column>
<column name="link">https://access.redhat.com/articles/1249423</column>

<column name="title">WebLogic proprietary servlet annotations</column>
<column name="contents">
                      
                      Replace the proprietary WebLogic `@WLFilter` annotation with the Java EE 6 standard `@WebFilter` annotation.

                      See the [javax.servlet.annotation JavaDoc](http://docs.oracle.com/javaee/6/api/javax/servlet/annotation/package-summary.html) for more information.
                      
                    </column></rule>

<rule><column name="id">weblogic-webapp-05000</column>
<column name="link">https://access.redhat.com/articles/1326703</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/servlet/ServletContextEvent.html</column>
<column name="link">http://docs.oracle.com/cd/E13222_01/wls/docs90/programming/lifecycle.html</column>

<column name="title">WebLogic ApplicationLifecycleEvent</column>
<column name="contents">
                      
                      WebLogic `ApplicationLifecycleEvent` must be replaced with standard Java EE `ServletContextEvent`. Otherwise, a custom solution using CDI's `ApplicationScoped` beans or EJB's `@Startup` beans is required in order to propagate a custom event object because `ServletContextEvent` types are not extendible in the standard Java EE programming model.

                      Use a `javax.servlet.ServletContextListener` with `@javax.annotation.servlet.WebListener`, or an EJB 3.1 `@javax.ejb.Startup` `@javax.ejb.Singleton` service bean.
                      
                    </column></rule>

<rule><column name="id">weblogic-webapp-06000</column>
<column name="link">https://access.redhat.com/articles/1326703</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/servlet/ServletContextEvent.html</column>
<column name="link">http://docs.oracle.com/cd/E13222_01/wls/docs90/programming/lifecycle.html</column>

<column name="title">WebLogic ApplicationLifecycleListener</column>
<column name="contents">
                      
                      WebLogic `ApplicationLifecycleListener` must be replaced with standard Java EE `ServletContextListener` types. Otherwise, a solution using CDI's `ApplicationScoped` beans or EJB's `@Startup` beans is required.

                      Use a `javax.servlet.ServletContextListener` with `@javax.annotation.servlet.WebListener`, or an EJB 3.1 `@javax.ejb.Startup` `@javax.ejb.Singleton` service bean.
                      
                    </column></rule>

<rule><column name="id">weblogic-webapp-07000</column>
<column name="link">http://docs.oracle.com/cd/E12839_01/apirefs.1111/e13941/weblogic/security/Security.html</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform?category=security&amp;version=6.4</column>

<column name="title">WebLogic proprietary security API</column>
<column name="contents">The usage of the WebLogic proprietary security API should be replaced by standard Java EE mechanisms or the ones provided by JBoss EAP.</column></rule>

<rule><column name="id">weblogic-webapp-08000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/API_Documentation/files/javadoc/org/jboss/security/SecurityContextAssociation.html</column>
<column name="link">https://access.redhat.com/solutions/55114</column>

<column name="title">WebLogic proprietary security reference to weblogic.security.Security</column>
<column name="contents">Migrate to JBoss EAP 6: `org.jboss.security.SecurityContextAssociation`.</column></rule>

<rule><column name="id">weblogic-webapp-09000</column>
<column name="link">https://access.redhat.com/articles/1329213</column>

<column name="title">WebLogic proprietary ServletAuthentication annotation</column>
<column name="contents">
                      
                      Oracle WebLogic Server provides a proprietary `ServletAuthentication` class to perform programmatic login.

                      In Red Hat JBoss EAP 6, you can use the standard Java EE 6 servlet security 3.0 `HttpServletRequest.login()` method or you can define a `&lt;security-constraint&gt;` element in the web.xml file. You must also replace code that uses the Oracle WebLogic Server proprietary `ServletAuthentication` class.
                      
                    </column></rule>

<ROOT xmlns="http://windup.jboss.org/v1/xml"/>

<rule><column name="id">weblogic-xml-descriptor-01000</column>
<column name="link">https://access.redhat.com/articles/1326803</column>
<column name="link">https://access.redhat.com/articles/1328043</column>

<column name="title">WebLogic EAR application descriptor (weblogic-application.xml)</column>
<column name="contents">
                      The `weblogic-application.xml` deployment descriptor file is used to describe Oracle WebLogic Server EAR archives. Oracle WebLogic Server EAR configures some application settings through the `application-param` element.
                      These settings could be replaced with `context-param` elements in Java EE Servlet `web.xml` descriptor.
                    </column></rule>

<rule><column name="id">weblogic-xml-descriptor-02000</column>
<column name="link">https://access.redhat.com/articles/1326803</column>

<column name="title">WebLogic Entity EJB configuration</column>
<column name="contents">WebLogic Entity EJB Configuration are used for RDBMS based persistence services.</column></rule>

<rule><column name="id">weblogic-xml-descriptor-03000</column>
<column name="link">https://access.redhat.com/articles/1326823</column>

<column name="title">WebLogic `delay-updates-until-end-of-tx` configuration element</column>
<column name="contents">
                      
                      The WebLogic `&amp;amp;lt;delay-updates-until-end-of-tx&amp;amp;lt;` configuration element, which defaults to `true`, is used for performance reasons to delay updates to the persistent store of all beans until the end of the transaction. When set to `false`, updates are sent to the database after each method invocation, but are not committed until the end of the transaction. This allows other processes to access the persisted data while the transaction is waiting to be completed.

                      In JBoss EAP 6, you can achieve the same behavior by specifying the `&amp;amp;lt;sync-on-commit-only&amp;amp;gt;` in the jbosscmp-jdbc.xml file.
                      
                    </column></rule>

<rule><column name="id">weblogic-xml-descriptor-04000</column>
<column name="link">https://access.redhat.com/articles/1326823</column>

<column name="title">WebLogic EJB XML (weblogic-ejb-jar.xml)</column>
<column name="contents">The elements of proprietary `weblogic-ejb-jar.xml` descriptor need to be mapped to the `jboss-ejb3.xml` one according to the attached knowledge article.</column>
<column name="title">WebLogic EJB XML</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-06001</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/ejb/AccessTimeout.html</column>

<column name="title">WebLogic Stateful Session Bean (SFSB)</column>
<column name="contents">Replace WebLogic proprietary configuration by Java EE 6 annotation `@AccessTimeout`.
                  The equivalent usage is `@AccessTimeout(value= -1)`</column></rule>

<rule><column name="id">weblogic-xml-descriptor-07000</column>

<column name="title">WebLogic SOAP client mapping</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-08000</column>

<column name="title">WebLogic Java to WSDL Mapping</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-09000</column>

<column name="title">WebLogic web service policy</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-10000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/chap-JAX-RS_Web_Services.html</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/chap-JAX-WS_Web_Services.html</column>

<column name="title">Webservice Type</column>
<column name="contents">WebLogic webservices can be migrated to `jboss-webservices.xml` descriptor or to a Java EE standard Annotation based configuration. Reference the JBoss EAP 6 product documentation for more information.
                        </column>
<column name="title">WebLogic web service descriptor</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-11000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Administration_and_Configuration_Guide/index.html#sect-Configuration1</column>

<column name="title">WebLogic JMS descriptor</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-12000</column>
<column name="link">https://access.redhat.com/articles/1326803</column>
<column name="link">https://access.redhat.com/articles/1327803</column>
<column name="link">https://access.redhat.com/site/documentation/JBoss_Enterprise_Application_Platform/</column>

<column name="title">WebLogic web application descriptor (weblogic.xml)</column>
<column name="contents">
                      The Oracle WebLogic Server deployment descriptor file (`weblogic.xml`) provides functionality that is not included in the standard Java EE specification. While there is no direct mapping of these descriptor elements, many of these features may be configured in the application deployment or JBoss server configuration files.

                      For more information on how to configure JBoss EAP, please refer to the Administration and Configuration Guide for JBoss Enterprise Application Platform 6.
                    </column></rule>

<rule><column name="id">weblogic-xml-descriptor-13000</column>

<column name="title">WebLogic RMI XML version 1.x</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-14000</column>

<column name="title">WebLogic web service type mapping</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-15000</column>

<column name="title">WebLogic services configuration</column>
<column name="contents">WebLogic specific configuration of web services runtime parameters</column></rule>

<rule><column name="id">weblogic-xml-descriptor-16000</column>

<column name="title">WebLogic specific webservice ant tasks</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-17000</column>

<column name="title">WebLogic annotation manifest</column>
<column name="contents">
                        In this file, the value set for a property by a metadata annotation can be overridden. (It does not override the values set by a setter method.)
                    </column></rule>

<rule><column name="id">weblogic-xml-descriptor-18000</column>
<column name="link">https://access.redhat.com/articles/1329173</column>

<column name="title">WebLogic plan.xml deployment descriptor</column>
<column name="contents">
                        WebLogic `plan.xml` deployment descriptor file provides a way to target the application deployment for a specific environment.
                    </column></rule>


<rule><column name="id">weblogic-services-01000</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/ejb/Singleton.html</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/ejb/Startup.html</column>

<column name="title">WebLogic Startup Service</column>
<column name="contents">Replace this class with a class using the EJB 3.1 `@Singleton` and `@Startup` annotations.</column></rule>

<rule><column name="id">weblogic-services-02000</column>
<column name="link">http://docs.oracle.com/javaee/6/tutorial/doc/gipvi.html</column>

<column name="title">WebLogic T3ServicesDef usage</column>
<column name="contents">
                      
                      `T3ServicesDef` provides access to core services of the container, such as Timers and Logging facilities.

                      Replace the services provided by this with a Singleton EJB (using the `@Singleton` annotation) that provides access to the equivalent services from JBoss EAP.
                      
                    </column></rule>

<rule><column name="id">weblogic-services-03000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Migration_Guide/chap-Migrate_Your_Application.html#sect-Logging_Changes</column>

<column name="title">WebLogic proprietary logging classes</column>
<column name="contents">
                      
                      Oracle WebLogic logging classes should be replaced with SLF4J, Log4J, or Java Logging.

                      Please refer to the [JBoss EAP migration guide](https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Migration_Guide/chap-Migrate_Your_Application.html#sect-Logging_Changes) for more information on this.
                      
                    </column></rule>


<rule><column name="id">weblogic-jms-00000</column>
<column name="link">http://docs.oracle.com/cd/B10501_01/appdev.920/a96609/toc.htm</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html</column>

<column name="title">Oracle JMS</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-jms-01000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html#bncen</column>

<column name="title">Oracle JMS Session</column>
<column name="contents">
                        Oracle JMS sessions are used for producing and consuming messaging API objects such as message producers, message
                        consumers, messages, queue browsers, and temporary queues and topics.

                        This reference should be replaced with the Java EE
                        standard API: `javax.jms.Session`.
                    </column></rule>

<rule><column name="id">weblogic-jms-02000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html#bncey</column>

<column name="title">Oracle JMS Queue Browser</column>
<column name="contents">
                        Oracle JMS queue browsers are used for browsing messages in a JMS queue.

                        This reference should be replaced with the Java
                        EE standard API: `javax.jms.QueueBrowser`.
                    </column></rule>

<rule><column name="id">weblogic-jms-03000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html#bnceo</column>

<column name="title">Oracle JMS Producer</column>
<column name="contents">
                        Oracle JMS producers are used for sending messages to a destination.

                        This reference should be replaced with the Java
                        EE
                        standard API: `javax.jms.MessageProducer`.
                    </column></rule>

<rule><column name="id">weblogic-jms-04000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html#bnceo</column>

<column name="title">Oracle JMS Consumer</column>
<column name="contents">
                        Oracle JMS consumers are used for receiving messages sent to a destination.

                        This reference should be replaced with the
                        Java EE standard API: `javax.jms.MessageConsumer`.
                    </column></rule>

<rule><column name="id">weblogic-jms-05000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html#bncem</column>

<column name="title">Oracle JMS Consumer</column>
<column name="contents">
                        Oracle JMS connections represent virtual connections with a JMS provider.

                        This reference should be replaced with the
                        Java
                        EE standard API: `javax.jms.Connection`.
                    </column></rule>

<rule><column name="id">weblogic-jms-06000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html#bnces</column>

<column name="title">Oracle JMS {type}Message</column>
<column name="contents">
                        Oracle JMS {type} messages represent the actual data passed through JMS destinations.

                        This reference should be replaced
                        with the
                        Java
                        EE standard API: `javax.jms.{type}Message`.
                    </column></rule>

<rule><column name="id">weblogic-jms-07000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html#bncel</column>

<column name="title">Oracle JMS Destination</column>
<column name="contents">
                        Oracle JMS destinations are the objects a client uses to specify the target of messages it produces and the source of
                        messages it consumes.

                        This reference should be replaced with the
                        Java
                        EE standard API: `javax.jms.Destination`.
                    </column></rule>

<rule><column name="id">weblogic-jms-08000</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnceh.html#bncek</column>

<column name="title">Oracle JMS {type} Connection Factory</column>
<column name="contents">
                        Oracle {type}ConnectionFactory is an encapsulation of JMS servers to which Connections can be created for message distribution.

                        This reference should be replaced with the
                        Java
                        EE standard API: `javax.jms.{type}ConnectionFactory`.
                    </column></rule>


<rule><column name="id">xml-webservices-01000</column>

<column name="title">Apache Axis Service Group</column>
<column name="contents"/></rule>

<rule><column name="id">xml-webservices-02000</column>

<column name="title">Apache Axis Module</column>
<column name="contents"/></rule>

<rule><column name="id">xml-webservices-03000</column>

<column name="title">Apache Axis Configuration</column>
<column name="contents"/></rule>

<rule><column name="id">xml-webservices-04000</column>

<column name="title">XFire 1.x Configuration</column>
<column name="contents"/></rule>

<rule><column name="id">xml-webservices-05000</column>

<column name="title">JAX-WS Handler Chain</column>
<column name="contents"/></rule>

<rule><column name="id">xml-webservices-06000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-JAX-WS_Development_Reference.html#JAX-WS_Common_API_Reference</column>

<column name="title">Use of Web Service Handler2</column>
<column name="contents">EAP 6 developer documentation describes JAX-WS Web Services Common API.</column>
<column name="title">Java Webservice Configuration</column>
<column name="contents"/></rule>

<rule><column name="id">xml-webservices-06001</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-JAX-WS_Web_Service_Endpoints.html</column>

<column name="title">Use of Web Service Handler2</column>
<column name="contents">EAP 6 developer documentation about JAX-WS Web Services Endpoints</column>
<column name="title">Java Webservice Configuration</column>
<column name="contents"/></rule>

<rule><column name="id">xml-webservices-07000</column>

<column name="title">Apache CXF Bus Extension</column>
<column name="contents"/></rule>

<rule><column name="id">xml-webservices-08000</column>

<column name="title">WS-Policy</column>
<column name="contents"/></rule>

<rule><column name="id">xml-webservices-09000</column>

<column name="title">SOAP Envelope</column>
<column name="contents"/></rule>

<rule><column name="id">xml-webservices-10000</column>

<column name="title">WSDL Definition</column>
<column name="contents"/></rule>


<rule><column name="id">seam-ui-00000</column>

<column name="title">JSF Seam Template</column>
<column name="contents"/></rule>

<rule><column name="id">seam-ui-jsf-00001</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:button found</column>
<column name="contents">
                        Seam UI's &lt;s:button&gt; JSF control should be replaced by &lt;h:button&gt;.
                        There are differences in attributes, for example the _action_ attribute maps to _outcome_ and there is no _propagation_ attribute.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:link found</column>
<column name="contents">
                        You can use &lt;h:link&gt; instead of Seam UI &lt;s:link&gt;.
                        There are differences in attributes, for example the _action_ attribute maps to _outcome_ and there is no _propagation_ attribute.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01001</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:conversationId found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:conversationId&gt; in JSF UI controls.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01002</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:conversationPropagation found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:conversationPropagation&gt; in JSF UI controls
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01003</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:taskId found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:taskId&gt; in JSF UI controls
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01004</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:defaultAction found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:defaultAction&gt; in JSF UI controls
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01005</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:convertDateTime found</column>
<column name="contents">
                        Replace it with &lt;f:convertDateTime type="time" pattern="kk:mm:ss"&gt;.
                        You can achieve a similar effect by using the standard &lt;f:convertDateTime&gt; tag and setting the locale,
                         or setting the context-param *javax.faces.DATETIMECONVERTER_DEFAULT_TIMEZONE_IS_SYSTEM_TIMEZONE* to *true*.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01006</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:convertEntity found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:convertEntity&gt; in JSF UI controls. Use &lt;f:converter converterId="&lt;yourConverterClass&gt;"&gt; instead.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01007</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:enumItem found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:enumItem&gt; in JSF UI controls
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01008</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:token found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:token&gt; in JSF UI controls
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01009</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:formattedText found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:formattedText&gt; in JSF UI controls
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01010</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:cache found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:cache&gt; in JSF UI controls
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01011</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:resource found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:resource&gt; in JSF UI controls
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01012</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:download found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:download&gt; in JSF UI controls
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01013</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:remote found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:remote&gt; in JSF UI controls
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01014</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:selectItems found</column>
<column name="contents">
                        Replace it by using &lt;h:selectItems&gt;.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01015</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:validate found</column>
<column name="contents">
                      Replace it by using &lt;f:validateBean&gt;.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01016</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:fragment found</column>
<column name="contents">
                        There is &lt;ui:fragment&gt; to use instead in pure JSF.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01017</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>
<column name="link">https://docs.oracle.com/javaee/6/api/javax/faces/convert/EnumConverter.html</column>

<column name="title">Seam 2 UI control s:convertEnum found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:convertEnum&gt; in JSF UI controls, but JSF 2 has a built-in EnumConverter which can be extended if necessary.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01018</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnaus.html</column>

<column name="title">Seam 2 UI control s:convertAtomicBoolean found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:convertAtomicBoolean&gt; in JSF UI controls. Create a custom converter for a replacement.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01019</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnaus.html</column>

<column name="title">Seam 2 UI control s:convertAtomicInteger found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:convertAtomicInteger&gt; in JSF UI controls. Create a custom converter for a replacement.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01020</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>
<column name="link">https://docs.oracle.com/javaee/6/tutorial/doc/bnaus.html</column>

<column name="title">Seam 2 UI control s:convertAtomicLong found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:convertAtomicLong&gt; in JSF UI controls. Create a custom converter for a replacement.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01021</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:validateEquality found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:validateEquality&gt; in JSF UI controls.
                        Use respective &lt;f:validate*&gt; like:message
                        * &lt;f:validateDoubleRange&gt;,
                        * &lt;f:validateLength&gt;,
                        * &lt;f:validateLongRange&gt;,
                        * &lt;f:validateRequired&gt;.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01022</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:validateAll found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:validateAll&gt; in JSF UI controls, but you can achieve a similar effect by using &lt;f:validateBean&gt; or [Richfaces](http://richfaces.jboss.org/) &lt;rich:validator&gt;.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01023</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:decorate found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:decorate&gt; in JSF UI controls, but you can achieve the same functionality by using the UIInputContainer and a composite container, both of which are demonstrated in the [Open18 migration example](https://github.com/seam/migration/blob/develop/open18_java_ee_6)
                        [input.xhtml](https://raw.githubusercontent.com/seam/migration/develop/open18_java_ee_6/src/main/webapp/resources/components/input.xhtml) file.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01024</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:div found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:div&gt; in JSF UI controls, but it could be done with an &lt;h:panelGroup layout="block"&gt; or a &lt;ui:fragment&gt; containing a div.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01025</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:span found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:span&gt; in JSF UI controls, but you can achieve a similar effect by using &lt;h:panelGroup&gt; or a &lt;ui:fragment&gt; with a span element.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01026</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:label found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:label&gt; in JSF UI controls, but &lt;h:outputLabel&gt; is similar.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01027</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:message found</column>
<column name="contents">
                        Use &lt;h:message for="name" errorClass="invalid"&gt; or [Richfaces](http://richfaces.jboss.org/) &lt;rich:message&gt;.
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01028</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:fileUpload found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:fileUpload&gt; in JSF UI controls. You can achieve similar functionality by using [Richfaces](http://richfaces.jboss.org/) &lt;rich:fileUpload&gt;
                    </column></rule>

<rule><column name="id">seam-ui-jsf-01029</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/_seam_2_ui_controls_migration_to_jsf.html</column>

<column name="title">Seam 2 UI control s:graphicImage found</column>
<column name="contents">
                        There is no direct mapping for &lt;s:graphicImage&gt; in JSF UI controls, but you can use &lt;h:graphicImage&gt; as Seam extends that JSF UI control.
                    </column></rule>


<rule><column name="id">java-ee-jaxrpc-00000</column>
<column name="link">http://docs.oracle.com/cd/E17802_01/webservices/webservices/docs/1.6/api/javax/xml/rpc/handler/GenericHandler.html</column>

<column name="title">JAX-RPC Generic Handler</column>
<column name="contents">
                    
                        The "javax.xml.rpc.handler.GenericHandler" class implements the Handler interface.
                        SOAP Message Handler developers should typically subclass GenericHandler class unless
                        the Handler class needs another class as a superclass. It is a convenience abstract
                        class that makes writing Handlers easy. GenericHandler provides default implementations
                        of the lifecycle methods init and destroy and also different handle methods.
                        
                    </column></rule>


<rule><column name="id">sonic-catchall-00000</column>

<column name="title">Sonic proprietary type reference com.{subpackage}.{classname}</column>
<column name="contents">
                                This com.{subpackage}.{classname} is a Sonic proprietary type and needs to be migrated to a compatible API. There are currently no detailed
                                migration rules about this type.
                            </column></rule>


<rule><column name="id">xml-sonic-esb-01000</column>

<column name="title">SonicESB Service Configuration</column>
<column name="contents"/></rule>


<rule><column name="id">sonic-esb-01000</column>
<column name="link">http://documentation.progress.com/output/Sonic/8.0.0/Docs8.0/api/esb_api/com/sonicsw/xq/XQService.html</column>

<column name="title">Sonic ESB service - inheritance from com.sonicsw.xq.XQService</column>
<column name="contents">
                       
                       Sonic ESB services inherit from XQService.  In Camel, this can be achieved through the simple Java Bean Camel Component.

                       * [Camel Java Bean Component](http://camel.apache.org/bean.html)
                       
                     </column>
<column name="title">Sonic ESB Service</column>
<column name="contents"/></rule>

<rule><column name="id">sonic-esb-02000</column>

<column name="title">Reference to com.sonicsw.xq.XQServiceContext</column>
<column name="contents">
                       
                       Sonic ESB services leverage the service(XQServiceContext context) method to implement business logic.  When messages are routed to the service, the service(XQServiceContext context) method is executed.
                       In Camel, this is achieved by routing messages to the Java Bean via the Camel Route's Bean Component syntax.

                       * [Camel Java Bean Component](http://camel.apache.org/bean.html)
                       * [Camel Binding Annotations](http://camel.apache.org/parameter-binding-annotations.html)

                       Camel's Java Bean Component can leverage annotations annotations on the method to specify how Camel Message body values are mapped to the method parameters.  Additionally, the @Handler annotation can be leveraged to setup the default Java Bean method.

                       **For example:**

                       ```java
                       public void service(XQServiceContext ctx) throws XQServiceException \{
                       ...
                       }
                       ```

                       **Should become:**

                       ```java
                       @Handler
                       public void service(@Header messageHeader, @Body messageBody, Exchange exchange) \{
                       ...
                       }
                       ```

                       * org.apache.camel.Body
                       * org.apache.camel.Header
                       * org.apache.camel.Exchange
                       
                     </column></rule>

<rule><column name="id">sonic-esb-03000</column>

<column name="title">Reference to com.sonicsw.xq.XQInitContext</column>
<column name="contents">
                       
                       The XQInitContext is used to receive initialization information for the service from Sonic ESB.

                       This is not neccessary for Camel.  The init() method that receives this object should be replaced with Spring Bean property injection.  For initialization beyond propery injection, leverage Spring's @PostConstruct annotation on this init() method.

                       * [Spring @PostConstruct Documentation](http://docs.spring.io/spring/docs/2.5.x/reference/beans.html#beans-postconstruct-and-predestroy-annotations)

                       ```java
                       @PostConstruct
                       public void init() \{
                       //leverage injected properties
                       }
                       ```
                       
                     </column></rule>

<rule><column name="id">sonic-esb-04000</column>

<column name="title">Call of com.sonicsw.xq.XQInitContext.getParameters</column>
<column name="contents">Migrate XQInitContext.getParameters to Spring property injection.</column></rule>

<rule><column name="id">sonic-esb-05000</column>

<column name="title">Call of com.sonicsw.xq.XQParameters.getParameter</column>
<column name="contents">Migrate XQParameters.getParameter to Spring property injection.</column></rule>

<rule><column name="id">sonic-esb-06000</column>

<column name="title">Reference to com.sonicsw.xq.XQParameters</column>
<column name="contents">Migrate XQParameters to Spring property injection.</column></rule>

<rule><column name="id">sonic-esb-07000</column>

<column name="title">Reference to com.sonicsw.xq.XQParameters</column>
<column name="contents">Migrate XQParameterInfo to Spring property injection.</column></rule>

<rule><column name="id">sonic-esb-08000</column>

<column name="title">Reference to com.sonicsw.xq.XQMessage</column>
<column name="contents">Migrate to org.apache.camel.Message</column></rule>

<rule><column name="id">sonic-esb-09000</column>

<column name="title">Call of com.sonicsw.xq.XQMessage.getHeaderValue</column>
<column name="contents">Migrate to org.apache.camel.Message.getHeader(String name)</column></rule>

<rule><column name="id">sonic-esb-10000</column>

<column name="title">Call of com.sonicsw.xq.XQMessage.setHeaderValue</column>
<column name="contents">Migrate to org.apache.camel.Message.setHeader(String name, Object value)</column></rule>

<rule><column name="id">sonic-esb-11000</column>

<column name="title">Call of com.sonicsw.xq.XQMessage.getHeaderNames</column>
<column name="contents">Migrate to org.apache.camel.Message.getHeaders()</column></rule>

<rule><column name="id">sonic-esb-12000</column>

<column name="title">Reference to com.sonicsw.xq.XQPart</column>
<column name="contents">Migrate XQPart to an attachment on the org.apache.camel.Message</column></rule>

<rule><column name="id">sonic-esb-13000</column>

<column name="title">Call of com.sonicsw.xq.XQMessage.getPartCount</column>
<column name="contents">Migrate to org.apache.camel.Message.getAttachments().size()</column></rule>

<rule><column name="id">sonic-esb-14000</column>

<column name="title">Call of com.sonicsw.xq.XQMessage.getPart</column>
<column name="contents">Migrate to org.apache.camel.Message.getAttachment(String id)</column></rule>

<rule><column name="id">sonic-esb-15000</column>

<column name="title">Reference to com.sonicsw.xq.XQLog</column>
<column name="contents">
                        Migrate to [Apache SLF4J](http://www.slf4j.org).
                     </column></rule>

<rule><column name="id">sonic-esb-16000</column>

<column name="title">Reference to com.sonicsw.xq.XQServiceException </column>
<column name="contents">
                       
                       Create a custom ServiceException class, extending Exception.  The documentation below explains exception handling in Camel.

                       * [Camel Exception Handling](http://camel.apache.org/exception-clause.html)
                       
                     </column></rule>

<rule><column name="id">sonic-esb-17000</column>

<column name="title">Call of com.sonicsw.xq.XQMessage.getCorrelationId</column>
<column name="contents">
                       
                       Correlation is handled several ways in Camel.  Read the article below.

                       * [Camel Exception Handling](http://camel.apache.org/correlation-identifier.html)
                       </column></rule>

<rule><column name="id">sonic-esb-18000</column>

<column name="title">Call of com.sonicsw.xq.XQAddressFactory.createEndpointAddress</column>
<column name="contents">
                       
                       This indicates that the Sonic ESB Service is routing messages to a [1...N] endpoints.  To achieve this in Camel, take the business logic in the service, and populate a header property with an array of target enpoints.

                       Next, create a Recipient List processor to route the message to N endpoints.

                       * [Camel Recipient List](http://camel.apache.org/recipientlist-annotation.html)
                       
                     </column></rule>

<rule><column name="id">sonic-esb-19000</column>

<column name="title">Call of com.sonicsw.xq.XQServiceContext.addOutgoing</column>
<column name="contents">
                       
                       Sonic ESB uses the addOutgoing method to set the outgoing message.
                       This is achieved in Camel by either modifying the @Body parameter in the Java Bean Component method, or literally setting a new message to the Exchange.

                       * [Camel Setting Response](http://camel.apache.org/using-getin-or-getout-methods-on-exchange.html)
                       
                     </column></rule>

<rule><column name="id">sonic-esb-20000</column>

<column name="title">Reference to com.sonicsw.xq.XQEnvelope</column>
<column name="contents">Migrate to org.apache.camel.Exchange</column></rule>

<rule><column name="id">sonic-esb-21000</column>

<column name="title">Call of com.sonicsw.xq.XQEnvelope.getMessage</column>
<column name="contents">Migrate to org.apache.camel.Message.getIn()</column></rule>


<rule><column name="id">hibernate4-00001</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addFile is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataSources#addFile` instead.</column></rule>

<rule><column name="id">hibernate4-00002</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.add() is deprecated in Hibernate 5</column>
<column name="contents">There is no direct replacement for method `org.hibernate.cfg.Configuration#add()`.</column></rule>

<rule><column name="id">hibernate4-00003</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addXML is deprecated in Hibernate 5</column>
<column name="contents">There is no direct replacement for method `org.hibernate.cfg.Configuration#addXML`.</column></rule>

<rule><column name="id">hibernate4-00004</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addCacheableFile is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataSources#addCacheableFile` instead.</column></rule>

<rule><column name="id">hibernate4-00005</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addURL is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataSources#addURL` instead.</column></rule>

<rule><column name="id">hibernate4-00006</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addInputStream is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataSources#addInputStream` instead.</column></rule>

<rule><column name="id">hibernate4-00007</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addResource is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataSources#addResource` instead.</column></rule>

<rule><column name="id">hibernate4-00008</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addClass is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataSources#addClass` instead.</column></rule>

<rule><column name="id">hibernate4-00009</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addAnnotatedClass is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataSources#addAnnotatedClass` instead.</column></rule>

<rule><column name="id">hibernate4-00010</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addPackage is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataSources#addPackage` instead.</column></rule>

<rule><column name="id">hibernate4-00011</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addJar is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataSources#addJar` instead.</column></rule>

<rule><column name="id">hibernate4-00012</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addDirectory is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataSources#addDirectory` instead.</column></rule>

<rule><column name="id">hibernate4-00013</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.registerTypeContributor is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataBuilder#applyTypes` instead.</column></rule>

<rule><column name="id">hibernate4-00014</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.registerTypeOverride is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.MetadataBuilder#applyBasicType` instead.</column></rule>

<rule><column name="id">hibernate4-00015</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.setProperty is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.registry.StandardServiceRegistryBuilder#applySetting` instead.</column></rule>

<rule><column name="id">hibernate4-00016</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.setProperties is deprecated in Hibernate 5</column>
<column name="contents">There is no direct replacement.</column></rule>

<rule><column name="id">hibernate4-00017</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.addProperties is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.registry.StandardServiceRegistryBuilder#applySettings` instead.</column></rule>

<rule><column name="id">hibernate4-00018</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.setNamingStrategy is deprecated in Hibernate 5</column>
<column name="contents">
                        Historically Hibernate provided just a singular contract for applying a "naming strategy". 
                        Starting in 5.0 this has been split into 2 distinct contracts:
                         
                        * ImplicitNamingStrategy - is used whenever a table or column is not explicitly named to determine the name to use. 
                        * PhysicalNamingStrategy - is used to convert a "logical name" (either implicit or explicit) name of a table or column into a physical name (e.g. following corporate naming guidelines)
                        
                        Use methods `org.hibernate.boot.MetadataBuilder#setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy)` or 
                        `org.hibernate.boot.MetadataBuilder#setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy)` 
                        instead of `public Configuration setNamingStrategy(NamingStrategy namingStrategy)()`
                    </column></rule>

<rule><column name="id">hibernate4-00021</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.configure is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.registry.StandardServiceRegistryBuilder#configure` instead.</column></rule>

<rule><column name="id">hibernate4-00022</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.setInterceptor is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.SessionFactoryBuilder#applyInterceptor` instead.</column></rule>

<rule><column name="id">hibernate4-00023</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.setEntityNotFoundDelegate is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.SessionFactoryBuilder#applyEntityNotFoundDelegate` instead.</column></rule>

<rule><column name="id">hibernate4-00024</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.setSessionFactoryObserver is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.SessionFactoryBuilder#addSessionFactoryObservers` instead.</column></rule>

<rule><column name="id">hibernate4-00025</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#re-purposing-of-configuration</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#hibernate_and_jpa_migration_changes</column>

<column name="title">Method org.hibernate.cfg.Configuration.setCurrentTenantIdentifierResolver is deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.SessionFactoryBuilder#applyCurrentTenantIdentifierResolver` instead.</column></rule>

<rule><column name="id">hibernate4-00026</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_other_classes</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#type-handling</column>

<column name="title">org.hibernate.metamodel.spi.{type} was moved in Hibernate 5</column>
<column name="contents">Use `org.hibernate.boot.model.{type}` instead.</column></rule>

<rule><column name="id">hibernate4-00027</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#deprecations</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_deprecations</column>

<column name="title">org.hibernate.cfg.AnnotationConfiguration was removed in Hibernate 5</column>
<column name="contents">
                    All functionality from `org.hibernate.cfg.AnnotationConfiguration` has been moved to `org.hibernate.cfg.Configuration`.
                    </column></rule>

<rule><column name="id">hibernate4-00028</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_deprecations</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#deprecations</column>

<column name="title">Class org.hibernate.id.{idclass} was removed/deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.id.enhanced.SequenceStyleGenerator` instead.</column></rule>

<rule><column name="id">hibernate4-00030</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#misc</column>

<column name="title">Class org.hibernate.hql.spi.{type} was moved in Hibernate 5</column>
<column name="contents">Hibernate 5 moved `org.hibernate.hql.spi.{type}` class to new `org.hibernate.hql.spi.id` package.</column></rule>

<rule><column name="id">hibernate4-00031</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_miscellaneous</column>

<column name="title">Class org.hibernate.hql.spi.PersistentTableBulkIdStrategy was moved in Hibernate 5</column>
<column name="contents">Hibernate 5 moved `org.hibernate.hql.spi.PersistentTableBulkIdStrategy` class to new `org.hibernate.hql.spi.id.persistent` package.</column></rule>

<rule><column name="id">hibernate4-00032</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_miscellaneous</column>

<column name="title">Class org.hibernate.hql.spi.TemporaryTableBulkIdStrategy was replaced in Hibernate 5</column>
<column name="contents">Hibernate 5 replaced `org.hibernate.hql.spi.TemporaryTableBulkIdStrategy` class with `org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy` and `org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy`.</column></rule>

<rule><column name="id">hibernate4-00033</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_other_classes</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#changedmoved-contracts</column>

<column name="title">Interface org.hibernate.integrator.spi.Integrator was changed in Hibernate 5</column>
<column name="contents">Hibernate 5 changed contract `org.hibernate.integrator.spi.Integrator` to account for bootstrap redesign.
                    Check if you implement method `integrate(Configuration configuration, SessionFactoryImplementor sessionFactory, SessionFactoryServiceRegistry serviceRegistry)` which is no longer there.
                    </column></rule>

<rule><column name="id">hibernate4-00034</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_other_classes</column>
<column name="link">https://github.com/hibernate/hibernate-orm/blob/5.0/migration-guide.adoc#changedmoved-contracts</column>
<column name="link">https://docs.jboss.org/hibernate/orm/5.0/javadocs/index.html?org/hibernate/engine/jdbc/env/spi/JdbcEnvironment.html</column>

<column name="title">Class org.hibernate.engine.jdbc.spi.JdbcServices was changed in Hibernate 5</column>
<column name="contents">Hibernate 5 extracted new interface `org.hibernate.engine.jdbc.env.spi.JdbcEnvironment` from `org.hibernate.engine.jdbc.spi.JdbcServices`.</column></rule>

<rule><column name="id">hibernate4-00035</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_other_classes</column>
<column name="link">https://docs.jboss.org/hibernate/orm/5.0/javadocs/org/hibernate/id/Configurable.html#configure-org.hibernate.type.Type-java.util.Properties-org.hibernate.service.ServiceRegistry-</column>

<column name="title">Interface org.hibernate.id.Configurable changed method parameter in configure method in Hibernate 5</column>
<column name="contents">Hibernate 5 changed the signature of `org.hibernate.id.Configurable#configure` method to accept `ServiceRegistry` rather than just `Dialect`</column></rule>

<rule><column name="id">hibernate4-00036</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_other_classes</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_miscellaneous</column>
<column name="link">https://docs.jboss.org/hibernate/orm/5.0/javadocs/org/hibernate/boot/model/relational/ExportableProducer.html#registerExportables-org.hibernate.boot.model.relational.Database-</column>

<column name="title">PersistentIdentifierGenerator implementations need to implement ExportableProducer#registerExportables</column>
<column name="contents">Since Hibernate 5, The `org.hibernate.id.PersistentIdentifierGenerator` extends new `org.hibernate.boot.model.relational.ExportableProducer` interface which will affect all `org.hibernate.id.PersistentIdentifierGenerator` implementations.
                    Therefore you need to implement additionally `ExportableProducer#registerExportables(org.hibernate.boot.model.relational.Database database)` method.</column></rule>

<rule><column name="id">hibernate4-00037</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_miscellaneous</column>
<column name="link">https://docs.jboss.org/hibernate/orm/5.0/javadocs/index.html?org/hibernate/envers/boot/internal/EnversService.html</column>

<column name="title">Class org.hibernate.envers.configuration.AuditConfiguration was removed in Hibernate 5</column>
<column name="contents">Hibernate 5 removed `AuditConfiguration` in preference for new `org.hibernate.envers.boot.internal.EnversService`.</column></rule>

<rule><column name="id">hibernate4-00038</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_type_handling</column>
<column name="link">https://docs.jboss.org/hibernate/orm/5.0/javadocs/index.html?org/hibernate/type/descriptor/sql/SqlTypeDescriptorRegistry.html</column>
<column name="link">https://docs.jboss.org/hibernate/orm/5.0/javadocs/index.html?org/hibernate/type/descriptor/java/JavaTypeDescriptorRegistry.html</column>

<column name="title">Built-in implementations of org.hibernate.type.descriptor.sql.SqlTypeDescriptor needs to register in Hibernate 5</column>
<column name="contents">Built-in implementations of `org.hibernate.type.descriptor.sql.SqlTypeDescriptor` and `org.hibernate.type.descriptor.java.JavaTypeDescriptor` no longer
                        auto-register themselves with `org.hibernate.type.descriptor.sql.SqlTypeDescriptorRegistry` and `org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry`.
                        Applications using custom `SqlTypeDescriptor`/`JavaTypeDescriptor` implementations which extends the built-in ones and
                        rely on that behavior should be updated to call `SqlTypeDescriptorRegistry#addDescriptor` or `JavaTypeDescriptorRegistry#addDescriptor` themselves.
                     This warning is important especially for users of Hibernate 4.3.</column></rule>


<rule><column name="id">hibernate4-xml-00001</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_transactions</column>
<column name="link">https://docs.jboss.org/hibernate/orm/5.1/javadocs/index.html?org/hibernate/cfg/AvailableSettings.html#TRANSACTION_COORDINATOR_STRATEGY</column>

<column name="title">Hibernate: Deprecated property hibernate.transaction.factory_class</column>
<column name="contents">
                        Replace configuration transaction property `hibernate.transaction.factory_class`
                        with `hibernate.transaction.coordinator_class`.
                            
                        Next the contract in `hibernate.transaction.coordinator_class` property should refer to `org.hibernate.resource.transaction.TransactionCoordinatorBuilder` 
                        instead of to `org.hibernate.engine.transaction.spi.TransactionFactory`
                        </column></rule>

<rule><column name="id">hibernate4-xml-00002</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_deprecations</column>

<column name="title">Class org.hibernate.id.{idclass} was removed/deprecated in Hibernate 5</column>
<column name="contents">Use `org.hibernate.id.enhanced.SequenceStyleGenerator` instead.</column></rule>

<rule><column name="id">hibernate4-xml-00003</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_deprecations</column>

<column name="title">Identifier generator {generator} was removed/deprecated in Hibernate 5</column>
<column name="contents">Identifier generator {generator} was removed/deprecated in Hibernate 5. You can use `sequence` generator instead.</column></rule>

<rule><column name="id">hibernate4-xml-00004</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_deprecations</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_deprecations</column>

<column name="title">TemporaryTableBulkIdStrategy was replaced in Hibernate 5</column>
<column name="contents">Since Hibernate 5, the `org.hibernate.hql.spi.TemporaryTableBulkIdStrategy` class was replaced by `org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy` and `org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy`.</column>
<column name="title">TemporaryTableBulkIdStrategy was replaced in Hibernate 5</column>
<column name="contents">Since Hibernate 5, the `org.hibernate.hql.spi.TemporaryTableBulkIdStrategy` class was replaced by `org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy` and `org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy`.</column></rule>

<rule><column name="id">hibernate4-xml-00005</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_miscellaneous</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migration_hibernate_orm_changes_miscellaneous</column>

<column name="title">Class PersistentTableBulkIdStrategy was moved in Hibernate 5</column>
<column name="contents">Since Hibernate 5, the `org.hibernate.hql.spi.PersistentTableBulkIdStrategy` class was moved to new package and you should use it as `org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy`.</column>
<column name="title">Class PersistentTableBulkIdStrategy was moved in Hibernate 5</column>
<column name="contents">Since Hibernate 5, the `org.hibernate.hql.spi.PersistentTableBulkIdStrategy` class was moved to new package and you should use it as `org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy`.</column></rule>


<rule><column name="id">resteasy-eap6-000001</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>

<column name="title">RESTEasy 3 Cache Client package change</column>
<column name="contents">Caching in the RESTEasy client framework in resteasy-jaxrs is replaced by caching in the JAX-RS 2.0 compliant resteasy-client module.
                    Use `org.jboss.resteasy.client.jaxrs.cache` package instead of `org.jboss.resteasy.client.cache`. 
                    </column></rule>

<rule><column name="id">resteasy-eap6-000002</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>

<column name="title">Deprecated class ClientRequest in RESTEasy 3</column>
<column name="contents">
                    Replace class `org.jboss.resteasy.client.ClientRequest` with `org.jboss.resteasy.client.jaxrs.ResteasyClient`.
                    
                    The following is an example of how to send a link header with the RESTEasy client in EAP 6 with RESTEasy 2.3.x.
                    
                    ```java
                    ClientRequest request = new ClientRequest(generateURL("/linkheader/str"));
                    request.addLink("previous chapter", "previous", "http://example.com/TheBook/chapter2", null);
                    ClientResponse response = request.post();
                    LinkHeader header = response.getLinkHeader();
                    ```
                    
                    The following is an example of how to accomplish the same task with the RESTEasy client in RESTEasy 3.
                    
                    ```java
                    ResteasyClient client = new ResteasyClientBuilder().build();
                    Response response = client.target(generateURL("/linkheader/str")).request()
                        .header("Link", "&lt;http://example.com/TheBook/chapter2&gt;; rel="previous";
                    title="previous chapter"&gt;").post(Entity.text(new String()));
                    javax.ws.rs.core.Link link = response.getLink("previous");
                    ```
                    
                    </column></rule>

<rule><column name="id">resteasy-eap6-000003</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>

<column name="title">Deprecated class ClientResponse in RESTEasy 3</column>
<column name="contents">Replace `org.jboss.resteasy.client.ClientResponse` class with `javax.ws.rs.core.Response`.</column></rule>

<rule><column name="id">resteasy-eap6-000004</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>

<column name="title">Deprecated class org.jboss.resteasy.client.{type} in RESTEasy 3</column>
<column name="contents">Replace this class with `org.jboss.resteasy.client.jaxrs.{type}`.</column></rule>

<rule><column name="id">resteasy-eap6-000005</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>

<column name="title">Deprecated class EntityTypeFactory in RESTEasy 3</column>
<column name="contents">
                    There is no direct replacement for `org.jboss.resteasy.client.EntityTypeFactory` class.
                    
                    `org.jboss.resteasy.client.ClientResponse&lt;T&gt;` is a generic type in the RESTEasy client framework,
                    but `org.jboss.resteasy.client.jaxrs.internal.ClientResponse` in the resteasy-client module is not, so
                    `EntityTypeFactory` is no longer useful.
                    </column></rule>

<rule><column name="id">resteasy-eap6-000006</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>

<column name="title">Deprecated interface ClientExecutor in RESTEasy 3</column>
<column name="contents">Replace the `org.jboss.resteasy.client.ClientExecutor` usage with `org.jboss.resteasy.client.jaxrs.ClientHttpEngine` class.</column></rule>

<rule><column name="id">resteasy-eap6-000007</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>

<column name="title">Deprecated class ClientRequestFactory in RESTEasy 3</column>
<column name="contents">Replace the `org.jboss.resteasy.client.ClientRequestFactory` usage with `org.jboss.resteasy.client.jaxrs.ResteasyClientBuilder` class.</column></rule>

<rule><column name="id">resteasy-eap6-000008</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>

<column name="title">Deprecated exception ClientResponseFailure in RESTEasy 3</column>
<column name="contents">Replace the `org.jboss.resteasy.client.ClientResponseFailure` with `javax.ws.rs.client.ResponseProcessingException` 
                    or with `javax.ws.rs.client.ProcessingException` or with `javax.ws.rs.client.WebApplicationException` class.</column></rule>

<rule><column name="id">resteasy-eap6-000009</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>
<column name="link">https://jax-rs-spec.java.net/nonav/2.0-rev-a/apidocs/index.html?javax/ws/rs/ext/ParamConverterProvider.html</column>

<column name="title">RESTEasy 3 SPI Application Change for StringConverter</column>
<column name="contents">Replace `org.jboss.resteasy.spi.StringConverter` by `javax.ws.rs.ext.ParamConverterProvider`.</column></rule>

<rule><column name="id">resteasy-eap6-000010</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#injectorfactory_and_registry</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/index.html?org/jboss/resteasy/spi/InjectorFactory.html</column>

<column name="title">RESTEasy 3 SPI Application Changes for InjectorFactory</column>
<column name="contents">There were multiple changes on adding/removing methods on `org.jboss.resteasy.spi.InjectorFactory`.</column></rule>

<rule><column name="id">resteasy-eap6-000011</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/javax/ws/rs/ext/WriterInterceptor.html</column>

<column name="title">Deprecated interface MessageBodyWriterInterceptor in RESTEasy 3</column>
<column name="contents">The interface `org.jboss.resteasy.spi.interception.MessageBodyWriterInterceptor` is deprecated and you should use `javax.ws.rs.ext.WriterInterceptor` from JAX-RS API.</column></rule>

<rule><column name="id">resteasy-eap6-000012</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/ext/ReaderInterceptor.html</column>

<column name="title">Deprecated interface MessageBodyReaderInterceptor in RESTEasy 3</column>
<column name="contents">The interface `org.jboss.resteasy.spi.interception.MessageBodyReaderInterceptor` is deprecated and you should use `javax.ws.rs.ext.ReaderInterceptor` from JAX-RS API.</column></rule>

<rule><column name="id">resteasy-eap6-000013</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/ext/ReaderInterceptor.html</column>

<column name="title">Deprecated interface MessageBodyWriterContext in RESTEasy 3</column>
<column name="contents">The interface `org.jboss.resteasy.spi.interception.MessageBodyWriterContext` is replaced by the `javax.ws.rs.ext.WriterInterceptorContext` interface by JAX-RS 2.0 compliant interceptor facility.</column></rule>

<rule><column name="id">resteasy-eap6-000014</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">http://www.oracle.com/technetwork/articles/java/jaxrs20-1929352.html</column>

<column name="title">Deprecated class InterceptorRegistry in RESTEasy 3</column>
<column name="contents">`org.jboss.resteasy.core.interception.InterceptorRegistry` is deprecated in favor of the JAX-RS 2.0 Interceptor and filter API.</column></rule>

<rule><column name="id">resteasy-eap6-000015</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">http://www.oracle.com/technetwork/articles/java/jaxrs20-1929352.html</column>

<column name="title">Deprecated interface InterceptorRegistryListener in RESTEasy 3</column>
<column name="contents">`org.jboss.resteasy.core.interception.InterceptorRegistryListener` is deprecated in favor of the JAX-RS 2.0 Interceptor and filter API.</column></rule>

<rule><column name="id">resteasy-eap6-000017</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.jboss.org/resteasy/docs/2.3.1.GA/javadocs/org/jboss/resteasy/client/core/executors/ApacheHttpClientExecutor.html</column>

<column name="title">Removed class ApacheHttpClientExecutor from in RESTEasy 3</column>
<column name="contents">No direct replacement.</column></rule>

<rule><column name="id">resteasy-eap6-000018</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/index.html?org/jboss/resteasy/plugins/cache/server/SimpleServerCache.html</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/index.html?org/jboss/resteasy/plugins/cache/server/InfinispanCache.html</column>
<column name="link">http://docs.jboss.org/resteasy/docs/3.0.9.Final/userguide/html/Cache_NoCache_CacheControl.html#server_cache</column>

<column name="title">Deprecated class SimpleServerCache in RESTEasy 3</column>
<column name="contents">Use `org.jboss.resteasy.plugins.cache.server.InfinispanCache` instead of `org.jboss.resteasy.plugins.cache.server.SimpleServerCache`.</column></rule>

<rule><column name="id">resteasy-eap6-000019</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/container/DynamicFeature.html</column>

<column name="title">Deprecated interface AcceptedByMethod in RESTEasy 3</column>
<column name="contents">Use `javax.ws.rs.container.DynamicFeature` for Dynamic binding instead of implementing `org.jboss.resteasy.spi.interception.AcceptedByMethod` interface.</column></rule>

<rule><column name="id">resteasy-eap6-000020</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#additional_classes_removed_from_resteasy_3</column>
<column name="link">https://docs.jboss.org/resteasy/docs/2.3.5.Final/javadocs/index.html?org/jboss/resteasy/annotations/cache/ServerCached.html</column>
<column name="link">http://docs.jboss.org/resteasy/docs/3.0.16.Final/userguide/html_single/index.html#server_cache</column>

<column name="title">Removed annotation ServerCached in RESTEasy 3</column>
<column name="contents">Remove annotation `@org.jboss.resteasy.annotations.cache.ServerCached' as it was removed in RESTEasy 3.x.</column></rule>

<rule><column name="id">resteasy-eap6-000021</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/core/Link.html</column>

<column name="title">Deprecated class Link in RESTEasy 3</column>
<column name="contents">Replaced by `javax.ws.rs.core.Link` in JAX-RS API.</column></rule>

<rule><column name="id">resteasy-eap6-000022</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">http://www.oracle.com/technetwork/articles/java/jaxrs20-1929352.html</column>

<column name="title">Deprecated interface ClientExecutionContext in RESTEasy 3</column>
<column name="contents">`org.jboss.resteasy.spi.interception.ClientExecutionContext` is deprecated in favor of the JAX-RS 2.0 Interceptor and filter API.</column></rule>

<rule><column name="id">resteasy-eap6-000023</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>

<column name="title">Deprecated interface ClientExecutionInterceptor in RESTEasy 3</column>
<column name="contents">Use `javax.ws.rs.client.Invocation` instead of `org.jboss.resteasy.spi.interception.ClientExecutionInterceptor`.
                    The RESTEasy interceptor facility introduced in release 2.x is replaced by the JAX-RS 2.0 compliant interceptor facility in release 3.0.x.</column></rule>

<rule><column name="id">resteasy-eap6-000024</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#resteasyproviderfactory_add_methods</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/org/jboss/resteasy/spi/ResteasyProviderFactory.html</column>

<column name="title">ResteasyProviderFactory#add* methods were removed</column>
<column name="contents">Most of the `org.jboss.resteasy.spi.ResteasyProviderFactory#add*` methods have been removed or made protected in RESTEasy 3.0.
                    For example, the `addBuiltInMessageBodyReader()` and `addBuiltInMessageBodyWriter()` methods have been removed and the `addMessageBodyReader()` and `addMessageBodyWriter()` methods have been made protected.
                    You should now use the `registerProvider()` and `registerProviderInstance()` methods.</column></rule>

<rule><column name="id">resteasy-eap6-000025</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/ext/ReaderInterceptor.html</column>

<column name="title">Deprecated interface MessageBodyReaderContext in RESTEasy 3</column>
<column name="contents">Use `javax.ws.rs.ext.ReaderInterceptorContext` instead of `org.jboss.resteasy.spi.interception.MessageBodyReaderContext`.
                    The RESTEasy interceptor facility introduced in release 2.x is replaced by the JAX-RS 2.0 compliant interceptor facility in release 3.0.x.</column></rule>

<rule><column name="id">resteasy-eap6-000029</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://jax-rs-spec.java.net/nonav/2.0-rev-a/apidocs/index.html?javax/ws/rs/container/ContainerResponseFilter.html</column>

<column name="title">Deprecated interface PostProcessInterceptor in RESTEasy 3</column>
<column name="contents">Use `javax.ws.rs.container.ContainerResponseFilter` instead of `org.jboss.resteasy.spi.interception.PostProcessInterceptor`.
                    The RESTEasy interceptor facility introduced in release 2.x is replaced by the JAX-RS 2.0 compliant filters and interceptor facility in release 3.0.x.</column></rule>

<rule><column name="id">resteasy-eap6-000030</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://jax-rs-spec.java.net/nonav/2.0-rev-a/apidocs/index.html?javax/ws/rs/container/ContainerRequestFilter.html</column>

<column name="title">Deprecated interface PreProcessInterceptor in RESTEasy 3</column>
<column name="contents">Use `javax.ws.rs.container.ContainerRequestFilter` instead of `org.jboss.resteasy.spi.interception.PreProcessInterceptor`.
                    The RESTEasy interceptor facility introduced in release 2.x is replaced by the JAX-RS 2.0 compliant filters and interceptor facility in release 3.0.x.</column></rule>

<rule><column name="id">resteasy-eap6-000032</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes#injectorfactory_and_registry</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/index.html?org/jboss/resteasy/spi/Registry.html</column>

<column name="title">RESTEasy 3 SPI Registry changed</column>
<column name="contents">There were multiple changes on adding/removing methods on `org.jboss.resteasy.spi.Registry`.</column></rule>

<rule><column name="id">resteasy-eap6-000101</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/ForbiddenException.html</column>

<column name="title">Deprecated exception ForbiddenException in RESTEasy 3</column>
<column name="contents">Replaced by `javax.ws.rs.ForbiddenException` in jaxrs-api module.</column></rule>

<rule><column name="id">resteasy-eap6-000103</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/NotAllowedException.html</column>

<column name="title">Deprecated exception MethodNotAllowedException in RESTEasy 3</column>
<column name="contents">Replaced by `javax.ws.rs.NotAllowedException` in jaxrs-api module.</column></rule>

<rule><column name="id">resteasy-eap6-000104</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/NotAcceptableException.html</column>

<column name="title">Deprecated exception NotAcceptableException in RESTEasy 3</column>
<column name="contents">Replaced by `javax.ws.rs.NotAcceptableException` in jaxrs-api module.</column></rule>

<rule><column name="id">resteasy-eap6-000105</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/NotFoundException.html</column>

<column name="title">Deprecated exception NotFoundException in RESTEasy 3</column>
<column name="contents">Replaced by `javax.ws.rs.NotFoundException` in jaxrs-api module.</column></rule>

<rule><column name="id">resteasy-eap6-000106</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/NotAuthorizedException.html</column>

<column name="title">Deprecated exception UnauthorizedException in RESTEasy 3</column>
<column name="contents">Replaced by `javax.ws.rs.NotAuthorizedException` in jaxrs-api module.</column></rule>

<rule><column name="id">resteasy-eap6-000107</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/chapter-4-application-changes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/NotSupportedException.html</column>

<column name="title">Deprecated exception UnsupportedMediaTypeException in RESTEasy 3</column>
<column name="contents">Replaced by `javax.ws.rs.NotSupportedException` in jaxrs-api module.</column></rule>

<rule><column name="id">resteasy-eap6-000118</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>

<column name="title">Deprecated method ServerCookie#checkName in RESTEasy 3</column>
<column name="contents">RESTEasy 3 deprecates method `org.jboss.resteasy.plugins.delegates.ServerCookie#checkName` without a replacement.
                    It was deprecated in the original `org.apache.tomcat.util.http.ServerCookie` class which was a template for this method.</column></rule>

<rule><column name="id">resteasy-eap6-000119</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>

<column name="title">Deprecated method JAXBContextWrapper#createValidator in RESTEasy 3</column>
<column name="contents">Empty</column></rule>

<rule><column name="id">resteasy-eap6-000120</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/ext/ReaderInterceptor.html</column>

<column name="title">Deprecated method ResteasyHttpServletResponseWrapper#encodeRedirectUrl</column>
<column name="contents">Replace method calls of `encodeRedirectUrl` with `encodeRedirectURL(String url)`.</column></rule>

<rule><column name="id">resteasy-eap6-000121</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/ext/ReaderInterceptor.html</column>

<column name="title">Deprecated ResteasyHttpServletResponseWrapper#encodeUrl method</column>
<column name="contents">Replace `ResteasyHttpServletResponseWrapper#encodeUrl` with `ResteasyHttpServletResponseWrapper#encodeURL(String url)`.</column></rule>

<rule><column name="id">resteasy-eap6-000122</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/org/jboss/resteasy/plugins/providers/multipart/MultipartFormDataInputImpl.html#getFormData()</column>

<column name="title">Deprecated method MultipartFormDataInputImpl#getFormData in RESTEasy 3</column>
<column name="contents">`MultipartFormDataInputImpl#getFormData` method will be removed in the future. Use `MultipartFormDataInput#getFormDataMap()` instead.</column></rule>

<rule><column name="id">resteasy-eap6-000123</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/org/jboss/resteasy/plugins/providers/multipart/MultipartFormDataInput.html#getFormData()</column>

<column name="title">Deprecated method MultipartFormDataInput#getFormData in RESTEasy 3</column>
<column name="contents">`MultipartFormDataInput#getFormData` method will be removed in the future. Use `MultipartFormDataInput#getFormDataMap()` instead.</column></rule>

<rule><column name="id">resteasy-eap6-000125</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/org/jboss/resteasy/core/ResteasyHttpServletRequestWrapper.html#isRequestedSessionIdFromUrl()</column>

<column name="title">Deprecated method ResteasyHttpServletRequestWrapper.isRequestedSessionIdFromURL in RESTEasy 3</column>
<column name="contents">As of Version 2.1 of the Java Servlet API, use `ResteasyHttpServletRequestWrapper.isRequestedSessionIdFromURL()` instead.</column></rule>

<rule><column name="id">resteasy-eap6-000126</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/org/jboss/resteasy/plugins/providers/jaxb/SecureUnmarshaller.html#isValidating()</column>

<column name="title">Deprecated method SecureUnmarshaller#isValidating in RESTEasy 3</column>
<column name="contents">Method `org.jboss.resteasy.plugins.providers.jaxb.SecureUnmarshaller#isValidating` is deprecated without a replacement.</column></rule>

<rule><column name="id">resteasy-eap6-000127</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/org/jboss/resteasy/plugins/delegates/ServerCookie.html#maybeQuote%28int,%20java.lang.StringBuffer,%20java.lang.String%29</column>

<column name="title">Deprecated method ServerCookie#maybeQuote in RESTEasy 3</column>
<column name="contents">RESTEasy 3 deprecates method `org.jboss.resteasy.plugins.delegates.ServerCookie#maybeQuote` without a replacement.
                    It was deprecated in the original `org.apache.tomcat.util.http.ServerCookie` class which was a template for this method.</column></rule>

<rule><column name="id">resteasy-eap6-000128</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.oracle.com/javaee/7/api/index.html?javax/ws/rs/ext/ReaderInterceptor.html</column>

<column name="title">Deprecated method SecureUnmarshaller#setAdapter in RESTEasy 3</column>
<column name="contents">Method `org.jboss.resteasy.plugins.providers.jaxb.SecureUnmarshaller#setAdapter` is deprecated in RESTEasy 3.</column></rule>

<rule><column name="id">resteasy-eap6-000129</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/org/jboss/resteasy/core/ResteasyHttpServletResponseWrapper.html#setStatus(int,%20java.lang.String)</column>

<column name="title">Deprecated method ResteasyHttpServletResponseWrapper#setStatus in RESTEasy 3</column>
<column name="contents">As of version 2.1, due to ambiguous meaning of the message parameter. To set a status code use `setStatus(int)` instead, 
                    to send an error with a description use `sendError(int, String)`. Sets the status code and message for this response.</column></rule>

<rule><column name="id">resteasy-eap6-000130</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/org/jboss/resteasy/plugins/providers/jaxb/SecureUnmarshaller.html#setValidating(boolean)</column>

<column name="title">Deprecated method SecureUnmarshaller#setValidating in RESTEasy 3</column>
<column name="contents">RESTEasy 3 deprecates method `org.jboss.resteasy.plugins.providers.jaxb.SecureUnmarshaller#setValidating` without a replacement.</column></rule>

<rule><column name="id">resteasy-eap6-000131</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_resteasy_deprecated_classes</column>
<column name="link">https://docs.jboss.org/resteasy/docs/3.0.16.Final/javadocs/org/jboss/resteasy/auth/oauth/OAuthValidator.html#validateMessage(net.oauth.OAuthMessage,%20net.oauth.OAuthAccessor)</column>

<column name="title">Deprecated method OAuthValidator#validateMessage in RESTEasy 3</column>
<column name="contents">RESTEasy 3 deprecates `org.jboss.resteasy.auth.oauth.OAuthValidator#validateMessage` method without a replacement.</column></rule>


<rule><column name="id">eap6-01000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_entity_beans_to_jpa</column>

<column name="title">Entity EJB</column>
<column name="contents">Entity beans are no longer supported in JBoss EAP 7. User is requested to use JPA entities that fully replaced the functionality provided by Entity beans.
                        This entity needs to be migrated using JPA persistence.xml or using JPA annotations.</column></rule>

<rule><column name="id">eap6-02000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_apache_cxf_spring_web_services_changes</column>

<column name="title">Apache CFX integration with JBoss </column>
<column name="contents">Migrate all functionality specified in such XML descriptor. It is mostly already supported by the JAX-WS specification, included in Java EE 7. For specific functionality consult the Apache CFX documentation link provided.</column></rule>

<rule><column name="id">eap6-03000</column>

<column name="title">Manifest.mf - specifies application dependencies</column>
<column name="contents">Verify in advance that all the modules this application depends on still exist.</column></rule>

<rule><column name="id">eap6-04000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_jboss_web_valves</column>

<column name="title">JBoss Web Valve</column>
<column name="contents">JBoss Web was replaced by Undertow, which does not contain support for the Valve functionality. It may be needed to migrate to Undertow handlers.</column></rule>

<rule><column name="id">eap6-05000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_deployment_plan_configurations</column>

<column name="title">JSR 88 deployment plan not supported</column>
<column name="contents">This class is using JSR 88 specific classes. Rely instead on proprietary functionality to automate deployments. Please consult EAP 7 admin documentation to learn about such functionality</column></rule>

<rule><column name="id">eap6-06000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_clustering_ha_singleton</column>

<column name="title">Outdated HA Singleton</column>
<column name="contents">EAP 7 includes a new API for building Singleton services, which significantly simplifies the process, and solves the issues found in the legacy solution.</column></rule>

<rule><column name="id">eap6-07000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_stateful_session_ejb_clustering_changes</column>

<column name="title">Stateful Session EJB Clustering changes in EAP 7</column>
<column name="contents">
                        The `@Clustered` annotation is ignored in EAP 7 and is not useful. In case the application is started using HA profile, the replication will be done automatically.
                    </column></rule>

<rule><column name="id">eap6-08000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_default_remote_url_connector_and_port_changes</column>

<column name="title">Remote JNDI Provider URL has changed in EAP 7</column>
<column name="contents">
                        Default Remote JNDI Provider URL has changed in EAP 7. External applications using JNDI to lookup remote resources, for instance an EJB or a JMS Queue,
                        may need to change the value for the JNDI InitialContext environment's property named `java.naming.provider.url`.
                        The default URL scheme is now **http-remoting** instead of **remote**, and the default URL port is now **8080** instead of **4447**.
                        
                        As an example, consider the application server host is localhost, then clients previously accessing EAP 6 would use
                         
                        ```
                        java.naming.factory.initial=org.jboss.naming.remote.client.InitialContextFactory
                        java.naming.provider.url=remote://localhost:4447
                        ```
                        
                        while clients now accessing EAP 7 should use instead
                        
                        ```
                        java.naming.factory.initial=org.jboss.naming.remote.client.InitialContextFactory
                        java.naming.provider.url=http-remoting://localhost:8080
                        ```

                    </column></rule>

<rule><column name="id">eap6-08001</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#update_the_default_remote_connection_port</column>

<column name="title">jboss-ejb-client.properties - Default Remote Connection Port changes</column>
<column name="contents">
                        The default remote connection port has changed in **jboss-ejb-client.properties** from '4447' to '8080'.

                        In EAP 6, the jboss-ejb-client.properties file looked similar to the following:
                        
                        ```
                        remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED=false
                        remote.connections=default
                        remote.connection.default.host=localhost
                        remote.connection.default.port=4447
                        remote.connection.default.connect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS=false
                        ```
                        
                        In EAP 7, the properties file looks like this:
                        
                        ```
                        remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED=false
                        remote.connections=default
                        remote.connection.default.host=localhost
                        remote.connection.default.port=8080
                        remote.connection.default.connect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS=false
                        ```
                        
                    </column></rule>

<rule><column name="id">eap6-08002</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#update_the_default_remote_connection_port</column>

<column name="title">Java - Default Remote Connection Port has changed in EAP 7</column>
<column name="contents">
                        The default remote connection port has changed from '4447' to '8080'.

                        In EAP 6, Remote EJB client Java code looks like the following:
                        
                        ```java
                        Properties properties = new Properties();
                        properties.put("remote.connection.default.port", "4447");
                        ```
                        
                        In EAP 7, the Java client code looks like this:
                        
                        ```java
                        Properties properties = new Properties();
                        properties.put("remote.connection.default.port", "8080");
                        ```
                        
                    </column></rule>

<rule><column name="id">eap6-09000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_messaging_application_hornetq_api</column>
<column name="link">https://activemq.apache.org/artemis/migration.html</column>

<column name="title">HornetQ was removed in EAP 7</column>
<column name="contents">HornetQ was replaced by ActiveMQ Artemis in EAP 7. You should replace all references to `org.hornetq.*` with JMS API or ActiveMQ Artemis API.</column></rule>

<rule><column name="id">eap6-10000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_jboss_logging_changes</column>

<column name="title">Deprecated JBoss Logging annotations</column>
<column name="contents">JBoss Logging annotations in package `org.jboss.logging` are deprecated. You should replace them by the corresponding annotations from package `org.jboss.logging.annotations`. Note that using the `org.jboss.logging.annotations` package requires adding a new dependency: `org.jboss.logging:jboss-logging-annotations`.</column></rule>

<rule><column name="id">eap6-11000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#compatibility_issue_between_jsf_2_1_and_jsf_2_2</column>
<column name="link">https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1257</column>

<column name="title">Value of FaceletContext.FACELET_CONTEXT_KEY has changed</column>
<column name="contents">Value of `FaceletContext.FACELET_CONTEXT_KEY` has changed between JSF 2.1 and 2.2. The variable is a compile-time constant expression, so when the program was originally compiled, the reference to `FACELET_CONTEXT_KEY` was replaced by its value during compilation. The application must be recompiled so that the reference to `FACELET_CONTEXT_KEY` is replaced by its new value.</column></rule>


<rule><column name="id">hsearch-00000</column>

<column name="title">Hibernate Search API usage</column>
<column name="contents">Hibernate Search library API used in application.</column></rule>

<rule><column name="id">hsearch-00001</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Hibernate Search 5 renamed class SearchMappingBuilder</column>
<column name="contents">The class `org.hibernate.search.impl.SearchMappingBuilder` was replaced by `org.hibernate.search.engine.spi.SearchMappingHelper` class.</column></rule>

<rule><column name="id">hsearch-00002</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>

<column name="title">Hibernate Search 5 package change for Environment</column>
<column name="contents">The class `org.hibernate.search.Environment` was replaced by `org.hibernate.search.cfg.Environment` class.</column></rule>

<rule><column name="id">hsearch-00003</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>

<column name="title">Hibernate Search 5 package change for FullTextFilter</column>
<column name="contents">The class `org.hibernate.search.FullTextFilter` was replaced by `org.hibernate.search.filter.FullTextFilter` class.</column></rule>

<rule><column name="id">hsearch-00004</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Hibernate Search 5 package change for DirectoryBasedIndexManager</column>
<column name="contents">The class `org.hibernate.search.indexes.impl.DirectoryBasedIndexManager` was replaced by `org.hibernate.search.indexes.spi.DirectoryBasedIndexManager` class.</column></rule>

<rule><column name="id">hsearch-00005</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>

<column name="title">Hibernate Search 5 package change for InfinispanDirectoryProvider</column>
<column name="contents">The class `org.hibernate.search.infinispan.impl.InfinispanDirectoryProvider` was replaced by `org.hibernate.search.infinispan.spi.InfinispanDirectoryProvider` class.</column></rule>

<rule><column name="id">hsearch-00006</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>

<column name="title">Hibernate Search 5 package change for ProjectionConstants</column>
<column name="contents">The class `org.hibernate.search.ProjectionConstants` was replaced by `org.hibernate.search.engine.ProjectionConstants` class.</column></rule>

<rule><column name="id">hsearch-00007</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>

<column name="title">Hibernate Search 5 package change for SearchException</column>
<column name="contents">The class `org.hibernate.search.SearchException` was replaced by `org.hibernate.search.exception.SearchException` class.</column></rule>

<rule><column name="id">hsearch-00008</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Hibernate Search 5 package change for MassIndexerFactory</column>
<column name="contents">The class `org.hibernate.search.spi.MassIndexerFactory` was replaced by `org.hibernate.search.batchindexing.spi.MassIndexerFactory` class.</column></rule>

<rule><column name="id">hsearch-00009</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>
<column name="link">http://docs.jboss.org/hibernate/search/5.5/api/org/hibernate/search/spi/SearchIntegratorBuilder.html</column>

<column name="title">Deprecated interface org.hibernate.search.spi.SearchFactoryBuilder in Hibernate Search 5</column>
<column name="contents">The class `org.hibernate.search.spi.SearchFactoryBuilder` was replaced by `org.hibernate.search.spi.SearchIntegratorBuilder` class.</column></rule>

<rule><column name="id">hsearch-00010</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>
<column name="link">https://docs.jboss.org/hibernate/search/5.5/api/org/hibernate/search/spi/SearchIntegrator.html</column>

<column name="title">Deprecated interface org.hibernate.search.spi.SearchFactoryIntegrator in Hibernate Search 5</column>
<column name="contents">Do not use `org.hibernate.search.spi.SearchFactoryIntegrator`. You should migrate all code to use `org.hibernate.search.spi.SearchIntegrator`.
                    This interface is a temporary placeholder and will be removed at the next micro release!</column></rule>

<rule><column name="id">hsearch-00011</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>

<column name="title">Hibernate Search 5 package change for Version</column>
<column name="contents">The class `org.hibernate.search.Version` was replaced by `org.hibernate.search.engine.Version` class.</column></rule>

<rule><column name="id">hsearch-00100</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_deprecated_constructors</column>
<column name="link">https://docs.jboss.org/hibernate/search/5.5/api/org/hibernate/search/cfg/NumericFieldMapping.html#NumericFieldMapping-org.hibernate.search.cfg.PropertyDescriptor-org.hibernate.search.cfg.EntityDescriptor-org.hibernate.search.cfg.SearchMapping-</column>

<column name="title">Constructor NumericFieldMapping.NumericFieldMapping is deprecated in Hibernate Search 5</column>
<column name="contents">Use `NumericFieldMapping.NumericFieldMapping(String, PropertyDescriptor, EntityDescriptor, SearchMapping)` instead.</column></rule>

<rule><column name="id">hsearch-00101</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>
<column name="link">https://docs.jboss.org/hibernate/search/5.5/api/org/hibernate/search/store/ShardIdentifierProvider.html</column>

<column name="title">Deprecated interface org.hibernate.search.store.IndexShardingStrategy in Hibernate Search 5</column>
<column name="contents">`org.hibernate.search.store.IndexShardingStrategy` interface is deprecated as of Hibernate Search 4.4. Might be removed in Hibernate Search 5.
                    Use `org.hibernate.search.store.ShardIdentifierProvider` instead.</column></rule>

<rule><column name="id">hsearch-00103</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>

<column name="title">Deprecated interface org.hibernate.search.store.Workspace in Hibernate Search 5</column>
<column name="contents">`org.hibernate.search.store.Workspace` interface will be moved and considered as non-public API.</column></rule>

<rule><column name="id">hsearch-00104</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.1/#api-changes</column>

<column name="title">Deprecated interface org.hibernate.search.filter.FilterKey in Hibernate Search 5</column>
<column name="contents">Custom filter keys are deprecated and are scheduled for removal in Hibernate Search 6. As of Hibernate Search 5.1, keys for caching Lucene filters are calculated automatically based on the given filter parameters.</column></rule>

<rule><column name="id">hsearch-00106</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.1/#api-changes</column>
<column name="link">https://docs.jboss.org/hibernate/search/5.5/api/index.html?org/hibernate/search/filter/StandardFilterKey.html</column>

<column name="title">Deprecated class org.hibernate.search.filter.StandardFilterKey in Hibernate Search 5</column>
<column name="contents">Custom filter keys `StandardFilterKey` are deprecated and are scheduled for removal in Hibernate Search 6.
                    As of Hibernate Search 5.1, keys for caching Lucene filters are calculated automatically based on the given filter parameters.</column></rule>

<rule><column name="id">hsearch-00107</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>
<column name="link">https://docs.jboss.org/hibernate/search/5.5/api/org/hibernate/annotations/FieldCacheType.html</column>

<column name="title">Deprecated enum FieldCacheType in Hibernate Search 5</column>
<column name="contents">Remove the `@FieldCacheType` annotation. No alternative replacement necessary as the Field Cache in Apache Lucene feature does no longer exist.</column></rule>

<rule><column name="id">hsearch-00108</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_changes</column>
<column name="link">https://docs.jboss.org/hibernate/search/5.5/api/org/hibernate/search/annotations/CacheFromIndex.html</column>

<column name="title">Deprecated annotation CacheFromIndex in Hibernate Search 5</column>
<column name="contents">Remove the `@CacheFromIndex` annotation. No alternative replacement necessary.</column></rule>

<rule><column name="id">hsearch-00109</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.1/#api-changes</column>
<column name="link">https://docs.jboss.org/hibernate/search/5.5/api/index.html?org/hibernate/search/annotations/Key.html</column>

<column name="title">Deprecated annotation Key in Hibernate Search 5</column>
<column name="contents">Custom filter cache keys are a deprecated feature and are scheduled to be removed in Hibernate Search 6.
                     As of Hibernate Search 5.1, the filter cache keys are determined automatically based on the filter parameters so it is no longer required to provide a key object. </column></rule>

<rule><column name="id">hsearch-00110</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Deprecated enum constant IndexWriterSetting.{constant} in Hibernate Search 5</column>
<column name="contents">The `IndexWriterSetting.MAX_THREAD_STATES` and `IndexWriterSetting.TERM_INDEX_INTERVAL` enum constants are deprecated.
                    They affect which properties are read from the configuration, so the fact they they are missing means that configuration properties such as `hibernate.search.Animals.2.indexwriter.term_index_interval = default` are now ignored.
                    The only side effect is that the property is not applied.</column></rule>

<rule><column name="id">hsearch-00111</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>

<column name="title">Renamed SpatialMode.GRID to HASH in Hibernate Search 5</column>
<column name="contents">The enum value `SpatialMode.GRID` for `@Spatial` annotation was renamed to `SpatialMode.HASH`.</column></rule>

<rule><column name="id">hsearch-00112</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#fulltextindexeventlistener-now-final</column>

<column name="title">FullTextIndexEventListener class is now final in Hibernate Search 5</column>
<column name="contents">The class `FullTextIndexEventListener` is now a final class. If you currently extend this class, you must find an alternate solution to achieve the same functionality. You could in some cases use an `EntityIndexingInterceptor`.</column></rule>

<rule><column name="id">hsearch-00113</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#jms-controller-api-changed</column>

<column name="title">Usage of internal AbstractJMSHibernateSearchController class in Hibernate Search 5</column>
<column name="contents">The JMS backend was depending to Hibernate ORM. This dependency was removed, so that the backend can be used in other (non ORM) environments as well.
                    A consequence is that implementors of `org.hibernate.search.backend.impl.jms.AbstractJMSHibernateSearchController` will need to adjust to the new signature.
                     This class is really considered internal. We suggest to take this class as an example instead of extending it.</column></rule>

<rule><column name="id">hsearch-00114</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>
<column name="link">http://docs.jboss.org/hibernate/search/5.0/api/org/hibernate/search/engine/service/spi/ServiceManager.html</column>
<column name="link">http://docs.jboss.org/hibernate/search/5.0/api/org/hibernate/search/engine/service/spi/Service.html</column>
<column name="link">http://docs.jboss.org/hibernate/search/5.0/api/org/hibernate/search/engine/service/spi/Stoppable.html</column>
<column name="link">http://docs.jboss.org/hibernate/search/5.0/api/org/hibernate/search/engine/service/spi/Startable.html</column>

<column name="title">Implementing ServiceProvider in Hibernate Search 5</column>
<column name="contents">The `org.hibernate.search.spi.ServiceProvider` SPI has been refactored.
                    If you where integrating with the old service contract, refer to the javadoc of `ServiceManager`, `Service`, `Startable` and `Stoppable` for details about the new contract.</column></rule>

<rule><column name="id">hsearch-00115</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>
<column name="link">https://docs.jboss.org/hibernate/search/5.5/api/index.html?org/hibernate/search/annotations/IndexedEmbedded.html</column>

<column name="title">Indexing of id fields of Embedded Relations in Hibernate Search 5</column>
<column name="contents">
                     When using an `@IndexedEmbedded` annotation to include fields from a related entity,
                     the id of the related entity is no longer included.

                     You can enable the inclusion of the id by using the `includeEmbeddedObjectId` attribute of the `@IndexedEmbedded` annotation.

                     ```java
                     @IndexedEmbedded(includeEmbeddedObjectId=true)
                     ```

                    </column></rule>

<rule><column name="id">hsearch-00116</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_number_and_date_index_formatting_changes</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#number-and-date-index-format</column>
<column name="link">http://docs.jboss.org/hibernate/search/5.5/api/org/hibernate/search/bridge/builtin/package-summary.html</column>
<column name="link">http://docs.jboss.org/hibernate/search/5.5/api/org/hibernate/search/bridge/builtin/IntegerBridge.html</column>

<column name="title">Changes in indexing numeric and date values in Hibernate Search 5</column>
<column name="contents">
            Numbers and dates are now indexed as numeric fields by default. Properties of type int, long, float, double, and their
            corresponding wrapper classes are no longer indexed as strings. Instead, they are now indexed using Lucene’s appropriate numeric
            encoding. The id fields are an exception to this rule. Even when they are represented by a numeric type, they are still indexed as
            a string keyword by default. The use of `@NumericField` is now obsolete unless you want to specify a custom precision for the numeric
            encoding. You can keep the old string-based index format by explicitly specifying a string encoding field bridge. In the case of
            integers, this is the `org.hibernate.search.bridge.builtin.IntegerBridge`. Check the `org.hibernate.search.bridge.builtin` package for
            other publicly available field bridges.

            Date and Calendar are no longer indexed as strings. Instead, instances are encoded as long values representing the number
            of milliseconds since January 1, 1970, 00:00:00 GMT. You can switch the indexing format by using the new EncodingType enum. For example:

            ```java
            @DateBridge(encoding=EncodingType.STRING)
            @CalendarBridge(encoding=EncodingType.STRING)
            ```

            The encoding change for numbers and dates is important and can have a big impact on application behavior. If you have
            a query that targets a field that was previously string-encoded, but is now encoded numerically, you must update the query. Numeric
             fields must be searched with a NumericRangeQuery. You must also make sure that all fields targeted by faceting are string encoded.
            If you use the Search query DSL, the correct query should be created automatically for you.
            </column></rule>

<rule><column name="id">hsearch-00117</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#null-value-tokens-for-numeric-fields</column>

<column name="title">Changes in indexing null values for Hibernate Search 5</column>
<column name="contents">When using `@Field(indexNullAs=)` to encode a null marker value in the index, the type of the marker must be compatible with all other values that are indexed in that same field.
                    For example, it was previously possible to encode a null value for numeric fields using a string _null_.
                    This is no longer allowed. Instead, you must choose a number to represent the null value, such as -1. </column></rule>

<rule><column name="id">hsearch-00118</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>
<column name="link">http://in.relation.to/2015/05/11/hibernate-search-530-beta-1-with-native-lucene-faceting</column>
<column name="link">http://docs.jboss.org/hibernate/search/5.5/reference/en-US/html_single/#query-faceting</column>

<column name="title">Improvements in Faceting Engine for Hibernate Search 5</column>
<column name="contents">Significant improvements were made to the faceting engine. Most of the changes do not affect the API. The one notable exception is that you must now annotate any fields you intend to use for faceting with the `@Facet` or `@Facets` annotation.</column></rule>

<rule><column name="id">hsearch-00119</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#number-and-date-index-format</column>

<column name="title">Changes in indexing numeric values for Hibernate Search 5</column>
<column name="contents">Numbers and dates now indexed as numeric fields by default.
Properties of type `Date`, `Calendar` as well as `int`, `long`, `float`, `double` and their corresponding wrappers, are no longer indexed as strings. Instead, they are now indexed using Lucene’s appropriate numeric encoding.

The `id` fields are an exception to this rule: even when these are represented by a numeric type, they will still be indexed as a string keyword by default..</column></rule>

<rule><column name="id">hsearch-00200</column>
</rule>

<rule><column name="id">hsearch-00201</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>

<column name="title">hibernate-search-analyzers maven artifact dropped in Hibernate Search 5</column>
<column name="contents">The hibernate-search-analyzers module was removed. The recommended approach is to directly use the appropriate Lucene artifact,
                     for example org.apache.lucene:lucene-analyzers-common.</column></rule>

<rule><column name="id">hsearch-00210</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#sorting-options</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>

<column name="title">Lucene API changed for org.apache.lucene.search.SortField constructor</column>
<column name="contents">
                    The Lucene SortField API requires the following application code change. In the previous release of JBoss EAP, you set the type of the sort field in the query as follows.

```java
fulltextQuery.setSort(new Sort(new SortField("title", SortField.STRING)));
```

The following is an example of how you set it in JBoss EAP 7.

```java
fulltextQuery.setSort(new Sort(new SortField("title", SortField.Type.STRING)))
```

                     </column></rule>

<rule><column name="id">hsearch-00211</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#api-changes</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_deprecated_methods</column>

<column name="title">Deprecated ContainedInMapping#numericField() method in Hibernate Search 5</column>
<column name="contents">Method `ContainedInMapping#numericField()` has been deprecated and is scheduled for removal. Invoke `ContainedInMapping#field().numericField()` instead.</column></rule>

<rule><column name="id">hsearch-00213</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#api-changes</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_deprecated_methods</column>

<column name="title">Deprecated method FullTextSharedSessionBuilder#autoClose in Hibernate Search 5</column>
<column name="contents">Don't use `FullTextSharedSessionBuilder#autoclose()` and `FullTextSharedSessionBuilder#autoclose(boolean)` method. There is no replacement.</column></rule>

<rule><column name="id">hsearch-00214</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#api-changes</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_deprecated_methods</column>

<column name="title">Deprecated method IndexedMapping#cacheFromIndex in Hibernate Search 5</column>
<column name="contents">This will be removed with no replacement.</column></rule>

<rule><column name="id">hsearch-00215</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#api-changes</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_deprecated_methods</column>

<column name="title">Deprecated method EntityDescriptor#getCacheInMemory in Hibernate Search 5</column>
<column name="contents">This will be removed with no replacement.</column></rule>

<rule><column name="id">hsearch-00216</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#api-changes</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Deprecated method HSQuery#getExtendedSearchIntegrator in Hibernate Search 5</column>
<column name="contents">should be at most SearchIntegrator, preferably removed altogether</column></rule>

<rule><column name="id">hsearch-00217</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#api-changes</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Deprecated method DocumentBuilderIndexedEntity#getFieldCacheOption in Hibernate Search 5</column>
<column name="contents">The `DocumentBuilderIndexedEntity#getFieldCacheOption()` method has been deprecated. There is no replacement.</column></rule>

<rule><column name="id">hsearch-00218</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Deprecated method BuildContext#getIndexingStrategy in Hibernate Search 5</column>
<column name="contents">The `BuildContext#getIndexingStrategy()` method is deprecated. Use `BuildContext#getIndexingMode()` instead.</column></rule>

<rule><column name="id">hsearch-00219</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Deprecated method DirectoryHelper#getVerifiedIndexDir in Hibernate Search 5</column>
<column name="contents">The `DirectoryHelper#getVerifiedIndexDir(String, Properties, boolean)` method is deprecated. Use `DirectoryHelper#getVerifiedIndexPath(java.lang.String, java.util.Properties, boolean)` instead. </column></rule>

<rule><column name="id">hsearch-00220</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#api-changes</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_miscellaneous_hibernate_search_changes</column>

<column name="title">Deprecated method EntityDescriptor#setCacheInMemory in Hibernate Search 5</column>
<column name="contents">Method `org.hibernate.search.cfg.EntityDescriptor.setCacheInMemory` is deprecated and there is no replacement.</column></rule>

<rule><column name="id">hsearch-00221</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#api-changes</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_deprecated_methods</column>

<column name="title">Deprecated method MassIndexer#threadsForSubsequentFetching in Hibernate Search 5</column>
<column name="contents">Method `org.hibernate.search.MassIndexer.threadsForSubsequentFetching(int)` is deprecated and will be removed.</column></rule>

<rule><column name="id">hsearch-00222</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.5/#api-changes</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_deprecated_methods</column>

<column name="title">Deprecated method FuzzyContext#withThreshold in Hibernate Search 5</column>
<column name="contents">Use `FuzzyContext.withEditDistanceUpTo(int)` instead.</column></rule>

<rule><column name="id">hsearch-00224</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Renamed package for class {type} in Lucene 4.x</column>
<column name="contents">Lucene's core `org.apache.lucene.queryParser.{type}` have been consolidated into lucene/queryparser, that results in changing package name so it is now named as `org.apache.lucene.queryparser.classic.{type}`.</column></rule>

<rule><column name="id">hsearch-00225</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Renamed class org.apache.lucene.queryParser.QueryParserToken in Lucene 4.x</column>
<column name="contents">Lucene's core `org.apache.lucene.queryParser.QueryParserToken` have been consolidated into lucene/queryparser, that results in changing package name so it is now named as `org.apache.lucene.queryparser.classic.Token`.</column></rule>

<rule><column name="id">hsearch-00226</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Renamed class org.apache.lucene.queryParser.QueryParserTokenMgrError in Lucene 4.x</column>
<column name="contents">Lucene's core `org.apache.lucene.queryParser.QueryParserTokenMgrError` have been consolidated into lucene/queryparser, that results in changing package name so it is now named as `org.apache.lucene.queryparser.classic.TokenMgrError`.</column></rule>

<rule><column name="id">hsearch-00227</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for {type} in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.analysis.{type}` to `org.apache.lucene.analysis.core.{type}`.</column></rule>

<rule><column name="id">hsearch-00228</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for PorterStemFilter in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.analysis.PorterStemFilter` to `org.apache.lucene.analysis.en.PorterStemFilter`.</column></rule>

<rule><column name="id">hsearch-00229</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for {type} in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.analysis.{type}` to `org.apache.lucene.analysis.miscellaneous.{type}`.</column></rule>

<rule><column name="id">hsearch-00230</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for TeeSinkTokenFilter in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.analysis.TeeSinkTokenFilter` to `org.apache.lucene.analysis.sinks.TeeSinkTokenFilter`.</column></rule>

<rule><column name="id">hsearch-00231</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for {type} in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.analysis.{type}` to `org.apache.lucene.analysis.charfilter.{type}`.</column></rule>

<rule><column name="id">hsearch-00232</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for {type} in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.analysis.{type}` to `org.apache.lucene.analysis.util.{type}`.</column></rule>

<rule><column name="id">hsearch-00233</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for ReusableAnalyzerBase in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring class name have changed for `org.apache.lucene.analysis.ReusableAnalyzerBase` to `org.apache.lucene.analysis.Analyzer`.</column></rule>

<rule><column name="id">hsearch-00234</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for CharacterUtils in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.util.CharacterUtils` to `org.apache.lucene.analysis.util.CharacterUtils`.</column></rule>

<rule><column name="id">hsearch-00235</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for {type} in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.search.function.{type}` to `org.apache.lucene.queries.{type}`.</column></rule>

<rule><column name="id">hsearch-00236</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for NumericIndexDocValueSource in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.search.function.NumericIndexDocValueSource` to `org.apache.lucene.queries.function.valuesource.NumericIndexDocValueSource`.</column></rule>

<rule><column name="id">hsearch-00237</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for {type} in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.search.function.{type}` to `org.apache.lucene.queries.function.{type}`.</column></rule>

<rule><column name="id">hsearch-00238</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_lucene_renamed_and_repackaged_classes</column>

<column name="title">Renamed package for {type} in Lucene 4.x</column>
<column name="contents">Lucene's core and contrib analyzers, along with Solr's analyzers, were consolidated into lucene/analysis module.
                     During the refactoring package name have changed for `org.apache.lucene.search.function.{type}` to `org.apache.lucene.queries.function.valuesources.{type}`.</column></rule>

<rule><column name="id">hsearch-00239</column>
<column name="link">http://lucene.apache.org/core/4_10_2/MIGRATE.html</column>
<column name="link">http://hibernate.org/search/documentation/migrate/5.0/#within-apache-lucene</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_advanced_integrator_changes</column>

<column name="title">Apache Solr class {type} moved into Lucene 4.x</column>
<column name="contents">Solr utilities class `org.apache.solr.analysis.{type}` was moved into Apache Lucene so you can use `org.apache.lucene.analysis.util.{type}`.</column></rule>

<rule><column name="id">hsearch-00240</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_hibernate_search_deprecated_methods</column>

<column name="title">Removed method MassIndexer#threadsForIndexWriter in Hibernate Search 5</column>
<column name="contents">Method `org.hibernate.search.MassIndexer#threadsForIndexWriter(int)` was removed in Hibernate Search 5.</column></rule>


<rule><column name="id">eap6-xml-01000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_entity_beans_to_jpa</column>

<column name="title">CMP Entity EJB configuration.</column>
<column name="contents">CMP entity beans are no longer supported in JBoss EAP 7. User is requested to use JPA entities that fully replaced the functionality provided by CMP beans.
                    CMP configuration provided in this ejb-jar.xml should be configured using JPA persistence.xml or using JPA annotations.</column></rule>

<rule><column name="id">eap6-xml-01500</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_entity_beans_to_jpa</column>

<column name="title">BMP Entity EJB configuration.</column>
<column name="contents">BMP entity beans are no longer supported in JBoss EAP 7. User is requested to use JPA entities that fully replaced the functionality provided by BMP beans.
                   BMP configuration provided in this ejb-jar.xml should be configured using JPA persistence.xml or using JPA annotations.</column></rule>

<rule><column name="id">eap6-xml-02000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_custom_application_valves</column>

<column name="title">Valve is not supported in JBoss EAP 7.</column>
<column name="contents">JBoss Web was replaced by Undertow, which does not contain support for the Valve functionality. It may be needed to migrate to Undertow handlers.</column></rule>

<rule><column name="id">eap6-xml-03000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_jax_rpc_support_changes</column>

<column name="title">JAX-RPC specific configuration.</column>
<column name="contents">JAX-RPC support was removed in JBoss EAP 7. All the RPC calls will need to be migrated to JAX-WS.</column></rule>

<rule><column name="id">eap6-xml-04000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_deployment_plan_configurations</column>

<column name="title">JSR-88 deployment plans are no more supported by JBoss EAP7.</column>
<column name="contents">This file should be removed and instead rely on proprietary functionality to automate deployments. Please consult EAP 7 admin documentation to learn about such functionality.</column></rule>

<rule><column name="id">eap6-xml-05000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_messaging_application_jms_deployment_descriptors</column>

<column name="title">Proprietary JMS Resource Definitions</column>
<column name="contents">The proprietary XML descriptors, previously used to setup JMS resources, are deprecated in EAP 7.
    An updated version of this file was generated using XSLT transformation.</column></rule>

<rule><column name="id">eap6-xml-06000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_explicit_module_dependencies</column>

<column name="title">JBoss deployment structure - specifies application dependencies</column>
<column name="contents">Verify in advance that all the modules this application depends on still exist.</column></rule>

<rule><column name="id">eap6-xml-07000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_stateful_session_ejb_clustering_changes</column>

<column name="title">Stateful Session EJB Clustering configuration changes in EAP 7</column>
<column name="contents">
                        The `clustered` element is ignored in EAP 7 and is not useful. In case the application is started using HA profile, the replication will be done automatically.
                    </column></rule>

<rule><column name="id">eap6-xml-08000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config replication-trigger changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates `replication-trigger` element in `jboss-web.xml` file descriptor.
                    </column></rule>

<rule><column name="id">eap6-xml-08001</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config replication-mode changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates element `replication-mode` element without replacement in `jboss-web.xml` file descriptor.
                    </column></rule>

<rule><column name="id">eap6-xml-08002</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config backups changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates `backups` element without replacement in `jboss-web.xml` file descriptor.
                    </column></rule>

<rule><column name="id">eap6-xml-08003</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config use-jk changes in EAP 7</column>
<column name="contents">
                         The EAP 7 Web Session Clustering configuration deprecates `use-jk` element without replacement in `jboss-web.xml` file descriptor.

                         Previously by specifying `use-jk` element, the instance-id of the node handling a given request was appended to the jsessionid (foruse by load balancers such as mod_jk, mod_proxy_balancer, mod_cluster, etc.) depending on the value specified for `use-jk`.

                         In the new implementation, the instance-id, if defined, is always appended to the jsessionid.
                    </column></rule>

<rule><column name="id">eap6-xml-08004</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config max-unreplicated-interval changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates `max-unreplicated-interval` element in `jboss-web.xml` file descriptor.
                       
                       Previously, this configuration option was an optimization that would prevent the replication of a session’s timestamp if no session attribute was changed. While this sounds nice, in practice it doesn't prevent any RPCs, since session access requires cache transaction RPCs regardless of whether any session attributes changed.
                        
                       In the new implementation, the timestamp of a session is replicated on every request.
                       This prevents stale session metadata following failover.
                    </column></rule>

<rule><column name="id">eap6-xml-08005</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config snapshot-mode changes in EAP 7</column>
<column name="contents">
                     The EAP 7 Web Session Clustering configuration deprecates `snapshot-mode` element in `jboss-web.xml` file descriptor.
                     
                     Previously, one could configure `snapshot-mode` as INSTANT or INTERVAL. Infinispan’s replication queue renders this configuration option obsolete.
                    </column></rule>

<rule><column name="id">eap6-xml-08006</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config snapshot-interval changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration removed `snapshot-interval` element from `jboss-web.xml` file descriptor.
                       This option was only relevant for `&lt;snapshot-mode&gt;INTERVAL&lt;/snapshot-mode&gt;`. Since `snapshot-mode` is no longer used, this option is no longer used as well.
                    </column></rule>

<rule><column name="id">eap6-xml-08007</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config session-notification-policy changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates `session-notification-policy` element in `jboss-web.xml` file descriptor.
                       
                       Previously `session-notification-policy` element defined a policy for triggering session events.
                       
                       In the new implementation, this behaviour is specification driven and not configurable.
                    </column></rule>

<rule><column name="id">eap6-xml-09000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config passivation-config changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates `passivation-config` element and its sub-elements `use-session-passivation`, `passivation-min-idle-time` and `passivation-max-idle-time` completely in `jboss-web.xml` file descriptor.
                       
                       * `use-session-passivation` enabled the passivation, but now passivation is enabled by specifying a non-negative value for `max-active-sessions` element.
                       
                       * `passivation-min-idle-time` is not supported and the new implementation avoids waiting some time before the passivation.
                       
                       * `passivation-max-idle-time` is not supported and the new implementation supports only lazy passivation. Sessions are only passivated when necessary to comply with `max-active-sessions`.
                    </column></rule>

<rule><column name="id">eap6-xml-10000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config max-active-sessions changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration changed `max-active-sessions` element meaning in `jboss-web.xml` file descriptor.
                       
                       Previously, session creation would fail if an additional session would cause the number of active sessions to exceed the value specified by `&lt;max-active-sessions/&gt;`.

                       In the new implementation, `&lt;max-active-sessions/&gt;` is used to enable session passivation. If session creation would cause the number of active sessions to exceed `&lt;max-active-sessions/&gt;`,
 then the oldest session known to the session manager will passivate to make room for the new session.
                    </column></rule>


<rule><column name="id">eap7-websphere-xml-01000</column>

<column name="title">IBM Process Server Rules 6.0</column>
<column name="contents">WBI is a WebSphere proprietary business integration solution. This needs to be migrated to JBoss Drools or JBPM/BRMS.</column></rule>

<rule><column name="id">eap7-websphere-xml-02000</column>
<column name="link">https://access.redhat.com/articles/1330673</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/how-to-configure-server-security/#enabling_role_based_access_control</column>

<column name="title">WebSphere Application Binding Configuration</column>
<column name="contents">
                      
                      This file contains a specific IBM WebSphere Application binding configuration.

                      To migrate to EAP 7+, configure EAP 7+ accordingly using the CLI interface or web console.
                      
                    </column>
<column name="title">WebSphere EAR Application Binding</column>
<column name="contents">This WebSphere application binding is an IBM proprietary method for binding user roles for authorization and needs to be migrated to JAAS or KeyCloak.</column></rule>

<rule><column name="id">eap7-websphere-xml-03000</column>
<column name="link">https://access.redhat.com/articles/1330673#jspattributes</column>
<column name="link">http://www-01.ibm.com/support/knowledgecenter/SS7JFU_6.1.0/com.ibm.websphere.javadoc.doc/configdoc/webappext/WebAppExtension.html</column>

<column name="title">WebSphere proprietary JSP engine configuration</column>
<column name="contents">
                          
                          This file contains WebSphere specific web application bindings. This would derive from J2EE web application.

                          To migrate to EAP 7+, configure EAP 7+ accordingly using the CLI interface or web console.
                          
                        </column>
<column name="title">WebSphere proprietary JSP engine configuration</column>
<column name="contents">WebSphere (Java EE version prior to version 5) proprietary JSP engine configuration</column></rule>

<rule><column name="id">eap7-websphere-xml-04000</column>
<column name="link">https://access.redhat.com/articles/1330673</column>

<column name="title">WebSphere proprietary JSP engine configuration</column>
<column name="contents">
                      
                      This file contains WebSphere proprietary JSP engine configuration.

                      To migrate to EAP 6+, configure EAP 6+ accordingly using the CLI interface or web console.
                      
                      </column></rule>

<rule><column name="id">eap7-websphere-xml-06000</column>
<column name="link">http://rjweb002.royalsun.com.br/configDocs/webappbnd/WebAppBinding.html</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/configuration-guide/#configuring_the_web_server_undertow</column>
<column name="link">http://docs.jboss.org/jbossweb/7.0.x/</column>
<column name="link">http://undertow.io/undertow-docs/undertow-docs-1.3.0/index.html</column>
<column name="link">https://access.redhat.com/articles/1330673</column>

<column name="title">WebSphere web application binding</column>
<column name="contents">
                      
                      This file contains WebSphere proprietary binding configuration.

                      To migrate to EAP 7+, configure EAP 7+ accordingly using the CLI interface or web console.
                      
                    </column>
<column name="title">WebSphere proprietary configuration</column>
<column name="contents">WebSphere web application binding configuration file.</column></rule>

<rule><column name="id">eap7-websphere-xml-07000</column>
<column name="link">https://docs.jboss.org/author/display/JBWS/Predefined+client+and+endpoint+configurations</column>

<column name="title">WebSphere ETools WSClient Extension</column>
<column name="contents">Client IBM-specific deployment descriptor extension that needs to be migrated to JBoss WS.</column></rule>

<rule><column name="id">eap7-websphere-xml-08000</column>
<column name="link">https://docs.jboss.org/author/display/JBWS/Web+Services+Introduction</column>

<column name="title">WebSphere ETools WSClient Binding</column>
<column name="contents">Client IBM-specific deployment descriptor binding that needs to be migrated to JBoss WS.</column></rule>

<rule><column name="id">eap7-websphere-xml-09000</column>

<column name="title">WebSphere deployment descriptor</column>
<column name="contents">This file is an auto-generated WebSphere proprietary deployment descriptor.</column></rule>


<rule><column name="id">websphere-other-eap7-01000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/configuration-guide/#jca_management</column>
<column name="link">http://www.javaworld.com/article/2077671/build-ci-sdlc/the-wise-work-manager-for-context-based-scoping.html</column>
<column name="link">https://jcp.org/en/jsr/detail?id=237</column>

<column name="title">WebSphere Work Manager</column>
<column name="contents">
                      
                      WebSphere Asynchronous Work is a Work Manager, whose purpose is to allow the user utilizing threads while letting the container manage them.

                      For migration to JBoss EAP 7, [replace with JCA Work Manager](https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/configuration-guide/#jca_management).
                      
                    </column></rule>

<rule><column name="id">websphere-other-eap7-02000</column>
<column name="link">http://docs.oracle.com/javaee/7/api/javax/ejb/Singleton.html</column>
<column name="link">http://docs.oracle.com/javaee/7/api/javax/ejb/Startup.html</column>

<column name="title">WebSphere Startup Service</column>
<column name="contents">
                      
                      WebSphere Startup Service serves as a callback to be invoked when the server or application starts.

                      When migrating to JBoss EAP 7, this has to be replaced with standard EJB 3.1 Startup Bean, using `@Startup @Singleton` class and `@PostConstruct` method.
                      
                    </column></rule>


<rule><column name="id">websphere-jms-eap7-00000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>
<column name="link">http://activemq.apache.org/artemis/docs/1.5.0/messaging-concepts.html</column>
<column name="link">http://activemq.apache.org/artemis/docs/javadocs/javadoc-1.5.0/org/apache/activemq/artemis/api/core/client/package-summary.html</column>

<column name="title">IBM JMS Client</column>
<column name="contents">WebSphere MQ client API is used to communicate with the MQ server from client-side applications.
                        For JBoss EAP 7, this needs to be replaced with standard Java EE 7 JMS API, or with ActiveMQ Artemis client API.
                    </column></rule>

<rule><column name="id">websphere-jms-eap7-01000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>

<column name="title">IBM {prefix}{type}ConnectionFactory reference</column>
<column name="contents">
                        IBM {prefix}{type}ConnectionFactory is a proprietary encapsulation of JMS servers to which Connections can be created for
                        message distribution. This reference should be replaced with the Java EE standard API: `javax.jms.{type}ConnectionFactory`.
                    </column></rule>

<rule><column name="id">websphere-jms-eap7-02000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>

<column name="title">IBM JMS message JmsMsg{type}</column>
<column name="contents">
                        IBM JMS message {type}s are used for sending/reading messages to/from a topic or queue. This reference should be
                        replaced with the Java EE standard API `javax.jms.Message{type}`.
                    </column></rule>

<rule><column name="id">websphere-jms-eap7-02500</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>

<column name="title">WebSphere implementation MQe{type}Queue of JMS Queue</column>
<column name="contents">
                        `MQe{type}Queue` is a WebSphere implementation of a JMS `Queue` and should be migrated to
                        the Java EE 6 JMS standard interface `javax.jms.Queue`.
                    </column></rule>

<rule><column name="id">websphere-jms-eap7-03000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#sthref2271</column>

<column name="title">IBM JMS {type} message</column>
<column name="contents">
                                JMS {type} messages represent the actual data passed through JMS destinations. This reference should be
                                replaced with the Java EE standard API `javax.jms.{type}Message`.
                            </column></rule>

<rule><column name="id">websphere-jms-eap7-04000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>

<column name="title">IBM proprietary interface {prefix}{type}</column>
<column name="contents">
                                {prefix}{type} is an IBM proprietary interface and needs to be migrated to the Java EE standard API `javax.jms.{type}`.
                            </column></rule>


<rule><column name="id">websphere-mqe-eap7-00000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>
<column name="link">http://www-01.ibm.com/support/knowledgecenter/SSVHEW_6.2.0/com.ibm.mqe.javadoc/java/overview-summary.html</column>

<column name="title">IBM MQe client API</column>
<column name="contents">WebSphere MQe client API is used to communicate with the MQ server from client-side applications.
                        For JBoss EAP 7, this needs to be replaced with standard Java EE 6 JMS API, or with ActiveMQ Artemis client API.
                    </column></rule>

<rule><column name="id">websphere-mqe-eap7-01000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/configuring-messaging/#deploy_the_websphere_mq_resource_adapter</column>
<column name="link">http://www-01.ibm.com/support/knowledgecenter/SSVHEW_6.2.0/com.ibm.mqe.javadoc/java/com/ibm/mqe/adapters/package-summary.html</column>

<column name="title">IBM MQe com.ibm.mqe.adapters.MQe{type}Adapter</column>
<column name="contents">
                        IBM MQe {type} adapter provides plug-in communications adapters or data storage adapters for queue managers. These can
                        be deployed to JBoss EAP.
                    </column></rule>

<rule><column name="id">websphere-mqe-eap7-02000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/configuring-messaging/#configure_destinations_artemis</column>
<column name="link">http://www-01.ibm.com/support/knowledgecenter/SSVHEW_6.2.0/com.ibm.mqe.javadoc/java/com/ibm/mqe/administration/package-summary.html</column>

<column name="title">IBM MQe com.ibm.mqe.administration.MQe{type}AdminMsg</column>
<column name="contents">IBM MQe {type} administration API provides classes used to administer and monitor a WebSphere MQ Everyplace queue manager. In
                        JBoss EAP 7, the JMS destinations can be configured with the JBoss Admin CLI.
                    </column></rule>

<rule><column name="id">websphere-mqe-eap7-03000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/configuring-messaging/#configuring_messaging_security</column>

<column name="title">IBM MQe com.ibm.mqe.jms.MQeJMSAuthenticator</column>
<column name="contents">
                        `MQeJMSAuthenticator` is a WebSphere proprietary JMS authentication API.
                        To migrate to JBoss EAP 7, replace with Java EE 6 JAAS for JMS authentication.
                    </column></rule>

<rule><column name="id">websphere-mqe-eap7-04000</column>

<column name="title">IBM MQe com.ibm.mqe.jms.MQeJMSMsgFieldNames</column>
<column name="contents">
                        IBM MQe constants are used to name fields when a JMS message is mapped to an `MQeMsgObject`. These are provided to
                        enable WebSphere MQ Everyplace applications to interpret messages sent by JMS or to construct messages that a JMS application
                        will understand.

                        These settings can be discarded when migrating to JBoss EAP 7 with ActiveMQ Artemis.
                    </column></rule>


<rule><column name="id">websphere-mq-eap7-00000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>
<column name="link">http://www-01.ibm.com/support/knowledgecenter/SSVHEW_6.2.0/com.ibm.mqe.javadoc/java/overview-summary.html</column>

<column name="title">IBM MQ client API</column>
<column name="contents">WebSphere MQ client API is used to communicate with the MQ server from client-side applications.
                        For JBoss EAP 7, this needs to be replaced with standard Java EE 6 JMS API, or with ActiveMQ Artemis client API.
                    </column></rule>

<rule><column name="id">websphere-mq-eap7-01000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/paged/configuring-messaging/chapter-2-the-embedded-activemq-artemis-messaging-broker</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>

<column name="title">IBM JMS implementation of WMQInitialContextFactory</column>
<column name="contents">`WMQInitialContextFactory` is an implementation of `InitialContextFactory`
                        used to get object instances from JNDI. The
                        equivalent functionality needs to be configured on JBoss EAP 7 using ActiveMQ Artemis.
                        `InitialContextFactory` is provided
                        by EAP and you only need to instantiate `InitialContext ctx = new InitialContext();`.
                    </column>
<column name="title">IBM MQ Configuration</column>
<column name="contents">The WebSphere MQ client API is used to communicate with the MQ server from client-side applications.
                        For JBoss EAP 7, this needs to be replaced with standard Java EE 7 JMS API, or with ActiveMQ Artemis client API.
                    </column></rule>

<rule><column name="id">websphere-mq-eap7-02000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/configuring-messaging/#basic_configuration</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>

<column name="title">IBM WebSphere .scp file</column>
<column name="contents">
                        WebSphere `.scp` files contain scripts for the `jmsadmin` program which is used
                        to configure the WebSphere MQ destinations
                        and routing. To configure messaging in JBoss EAP 7 with ActiveMQ Artemis, use either the Management Console or Management CLI with it's
                        scripting feature.
                    </column>
<column name="title">IBM MQ Configuration</column>
<column name="contents"/></rule>


<rule><column name="id">jboss-eap5-7-xml-01000</column>
<column name="link">http://infinispan.org/docs/8.1.x/user_guide/user_guide.html#_tree_api_module</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#sect-Cache_Changes</column>

<column name="title">JBoss Cache</column>
<column name="contents">
                        JBoss Cache was renamed and reimplemented in Infinispan project see its TreeCache API which is a distributed tree-like structure that is replicated across several members.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-02000</column>
<column name="link">http://www.jboss.org/j2ee/dtd/</column>
<column name="link">http://www.oracle.com/webfolder/technetwork/jsc/xml/ns/javaee/application_7.xsd</column>

<column name="title">JBoss 5.x EAR descriptor</column>
<column name="contents">
                        A JBoss specific EAR descriptor (`jboss-app.xml`) allows extensions to Java EE EAR archives configuration.
                        You should use now standard `application.xml` descriptor.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-03000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/development-guide/chapter-3-class-loading-and-modules</column>

<column name="title">JBoss Classloading configuration, typically in jboss-classloading.xml.</column>
<column name="contents">
                        JBoss EAP 7 enhances advanced classloading configuration through jboss-deployment-structure.xml.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-04000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/development-guide/chapter-3-class-loading-and-modules</column>

<column name="title">JBoss EAP 5 Classloading Configuration</column>
<column name="contents">
                        JBoss EAP 7 enhances advanced classloading configuration through jboss-deployment-structure.xml.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-05000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/development-guide/chapter-8-contexts-and-dependency-injection-cdi</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Web_Framework_Kit/2.7/html/Seam_Guide/ch36.html</column>

<column name="title">JBoss Seam Components</column>
<column name="contents">You should migrate from Seam 2 Framework to Context Dependency Injection technology.</column></rule>

<rule><column name="id">jboss-eap5-7-xml-06000</column>
<column name="link">https://docs.jboss.org/seam/latest/reference/html_single/</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jsf-configure003.htm</column>

<column name="title">JBoss Seam Pages</column>
<column name="contents">You should migrate from Seam 2 Framework to Context Dependency Injection technology.
                        The most features from `pages.xml` file where it is specified a page flow and other configuration of the Seam Framework is achievable through JSF Flow.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-07000</column>

<column name="title">JBoss Seam Page</column>
<column name="contents"/></rule>

<rule><column name="id">jboss-eap5-7-xml-09000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/chap-Configuration_References.html#jboss-webxml_Configuration_Reference</column>

<column name="title">JBoss web application descriptor (jboss-web.xml)</column>
<column name="contents">
                        The `jboss-web.xml` file configures a Java EE web application specifically for JBoss EAP.
                        It is an extension to standard `web.xml`.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-10000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/paged/development-guide/chapter-3-class-loading-and-modules</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/5/html/Microcontainer_User_Guide/sect-JBoss_Microcontainer_User_Guide-The_ClassLoading_Layer-ClassLoading.html</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/paged/development-guide/chapter-3-class-loading-and-modules</column>

<column name="title">JBoss 5 classloader configuration (jboss-classloading.xml)</column>
<column name="contents">
                        In JBoss EAP 6, the classloading configuration is not done through `jboss-classloading.xml`.
                        Since EAP 6 it is of modular nature, based on JBoss Modules.
                        Learn how to divide your application's dependencies into modules
                        and what dependencies and APIs are available automatically.
                    </column>
<column name="title">JBoss 5 classloader configuration (jboss-classloading.xml)</column>
<column name="contents">The `jboss-classloading.xml` file allows customization of classloading in JBoss EAP 5.</column></rule>

<rule><column name="id">jboss-eap5-7-xml-12000</column>
<column name="link">https://docs.jboss.org/jbossas/docs/Server_Configuration_Guide/4/html/The_CMP_Engine-The_jbosscmp_jdbc_Structure.html</column>

<column name="title">JBoss EJB 2 CMP Deployment descriptor (jbosscmp-jdbc.xml)</column>
<column name="contents">
                        The `jbosscmp-jdbc.xml` is a deployment decriptor controlling the Container Managed Persistence.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-13000</column>
<column name="link">http://docs.jboss.org/ejb3/app-server/tutorial/jboss_deployment_descriptor/jboss_dd.html</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-Reference2.html#jboss-ejb3xml_Deployment_Descriptor_Reference</column>

<column name="title">JBoss EJB XML deployment descriptor prior to EAP 6</column>
<column name="contents">
                        The `jboss.xml` descriptor in deployments is ignored by JBoss AS 7+ or JBoss EAP 6+.
                        Replace it with `jboss-ejb3.xml`.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-14000</column>
<column name="link">http://docs.oracle.com/javase/7/docs/technotes/guides/security/jaas/JAASRefGuide.html</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/paged/development-guide/chapter-16-java-authorization-contract-for-containers-jacc</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/paged/development-guide/chapter-17-java-authentication-spi-for-containers-jaspi</column>

<column name="title">JBoss EAP security-domain configuration - java:/jaas/</column>
<column name="contents">
                        `java:/jaas/` is a JBoss EAP `security-domain` URI.
                        Remove the `java:/jaas/` prefix for `security-domain` elements in EAP 7/6.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-16000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/how-to-configure-server-security/how-to-configure-server-security</column>
<column name="link">http://docs.jboss.org/jbosssecurity/docs/6.0/security_guide/html/Login_Modules.html</column>

<column name="title">JBoss security configuration descriptor (prior to AS 7 / EAP 6)</column>
<column name="contents">
                        When migrating to JBoss EAP 6+,
                        the `login-config.xml` descriptor is no longer supported.
                        Security is now configured in the `security-domain` element inside the server configuration.
                    </column>
<column name="title">JBoss security configuration descriptor (prior to AS 7 / EAP 6)</column>
<column name="contents"/></rule>

<rule><column name="id">jboss-eap5-7-xml-17000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-Reference2.html#jboss-ejb3xml_Deployment_Descriptor_Reference</column>

<column name="title">JBoss EJB 3 deployment descriptor (jboss-ejb3.xml)</column>
<column name="contents">
                        A JBoss specific EJB 3 configuration allows extensions of Java EE EJB 3.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-18000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/paged/migration-guide/chapter-5-application-migration-changes#migrate_web_service_application_changes</column>

<column name="title">JBoss web-services deployment descriptor (jboss-webservices.xml)</column>
<column name="contents">
                        JBossWS 4.0 introduces a new deployment descriptor to configure web services.
                        The `jboss-webservices.xml` file provides additional information for the given deployment
                        and partially replaces the obsolete `jboss.xml` file.

                        For EJB webservice deployments, the expected location of the `jboss-webservices.xml` descriptor file
                        is in the `META-INF/` directory. For POJO and EJB webservice endpoints bundled in WAR file,
                        the expected location of the `jboss-webservices.xml` file is in the `WEB-INF/` directory.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-31000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_entity_beans_to_jpa</column>

<column name="title">CMP Entity EJB configuration.</column>
<column name="contents">CMP entity beans are no longer supported in JBoss EAP 7. User is requested to use JPA entities that fully replaced the functionality provided by CMP beans.
                    CMP configuration provided in this ejb-jar.xml should be configured using JPA persistence.xml or using JPA annotations.</column></rule>

<rule><column name="id">jboss-eap5-7-xml-31500</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_entity_beans_to_jpa</column>

<column name="title">BMP Entity EJB configuration.</column>
<column name="contents">BMP entity beans are no longer supported in JBoss EAP 7. User is requested to use JPA entities that fully replaced the functionality provided by BMP beans.
                   BMP configuration provided in this ejb-jar.xml should be configured using JPA persistence.xml or using JPA annotations.</column></rule>

<rule><column name="id">jboss-eap5-7-xml-32000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_custom_application_valves</column>

<column name="title">Valve is not supported in JBoss EAP 7.</column>
<column name="contents">JBoss Web was replaced by Undertow, which does not contain support for the Valve functionality. It may be needed to migrate to Undertow handlers.</column></rule>

<rule><column name="id">jboss-eap5-7-xml-33000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_jax_rpc_support_changes</column>

<column name="title">JAX-RPC specific configuration.</column>
<column name="contents">JAX-RPC support was removed in JBoss EAP 7. All the RPC calls will need to be migrated to JAX-WS.</column></rule>

<rule><column name="id">jboss-eap5-7-xml-34000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_deployment_plan_configurations</column>

<column name="title">JSR-88 deployment plans are no more supported by JBoss EAP7.</column>
<column name="contents">This file should be removed and instead rely on proprietary functionality to automate deployments. Please consult EAP 7 admin documentation to learn about such functionality.</column></rule>

<rule><column name="id">jboss-eap5-7-xml-37000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_stateful_session_ejb_clustering_changes</column>

<column name="title">Stateful Session EJB Clustering configuration changes in EAP 7</column>
<column name="contents">
                        The `clustered` element is ignored in EAP 7 and is not useful. In case the application is started using HA profile, the replication will be done automatically.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-38000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config replication-trigger changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates `replication-trigger` element in `jboss-web.xml` file descriptor.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-38001</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config replication-mode changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates element `replication-mode` element without replacement in `jboss-web.xml` file descriptor.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-38002</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config backups changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates `backups` element without replacement in `jboss-web.xml` file descriptor.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-38003</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config use-jk changes in EAP 7</column>
<column name="contents">
                         The EAP 7 Web Session Clustering configuration deprecates `use-jk` element without replacement in `jboss-web.xml` file descriptor.

                         Previously by specifying `use-jk` element, the instance-id of the node handling a given request was appended to the jsessionid (foruse by load balancers such as mod_jk, mod_proxy_balancer, mod_cluster, etc.) depending on the value specified for `use-jk`.

                         In the new implementation, the instance-id, if defined, is always appended to the jsessionid.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-38004</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config max-unreplicated-interval changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates `max-unreplicated-interval` element in `jboss-web.xml` file descriptor.
                       
                       Previously, this configuration option was an optimization that would prevent the replication of a session’s timestamp if no session attribute was changed. While this sounds nice, in practice it doesn't prevent any RPCs, since session access requires cache transaction RPCs regardless of whether any session attributes changed.
                        
                       In the new implementation, the timestamp of a session is replicated on every request.
                       This prevents stale session metadata following failover.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-38005</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config snapshot-mode changes in EAP 7</column>
<column name="contents">
                     The EAP 7 Web Session Clustering configuration deprecates `snapshot-mode` element in `jboss-web.xml` file descriptor.
                     
                     Previously, one could configure `snapshot-mode` as INSTANT or INTERVAL. Infinispan’s replication queue renders this configuration option obsolete.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-38006</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config snapshot-interval changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration removed `snapshot-interval` element from `jboss-web.xml` file descriptor.
                       This option was only relevant for `&lt;snapshot-mode&gt;INTERVAL&lt;/snapshot-mode&gt;`. Since `snapshot-mode` is no longer used, this option is no longer used as well.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-38007</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config session-notification-policy changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates `session-notification-policy` element in `jboss-web.xml` file descriptor.
                       
                       Previously `session-notification-policy` element defined a policy for triggering session events.
                       
                       In the new implementation, this behaviour is specification driven and not configurable.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-39000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config passivation-config changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration deprecates `passivation-config` element and its sub-elements `use-session-passivation`, `passivation-min-idle-time` and `passivation-max-idle-time` completely in `jboss-web.xml` file descriptor.
                       
                       * `use-session-passivation` enabled the passivation, but now passivation is enabled by specifying a non-negative value for `max-active-sessions` element.
                       
                       * `passivation-min-idle-time` is not supported and the new implementation avoids waiting some time before the passivation.
                       
                       * `passivation-max-idle-time` is not supported and the new implementation supports only lazy passivation. Sessions are only passivated when necessary to comply with `max-active-sessions`.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-xml-40000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_web_session_clustering_changes</column>

<column name="title">Web Session Clustering config max-active-sessions changes in EAP 7</column>
<column name="contents">
                       The EAP 7 Web Session Clustering configuration changed `max-active-sessions` element meaning in `jboss-web.xml` file descriptor.
                       
                       Previously, session creation would fail if an additional session would cause the number of active sessions to exceed the value specified by `&lt;max-active-sessions/&gt;`.

                       In the new implementation, `&lt;max-active-sessions/&gt;` is used to enable session passivation. If session creation would cause the number of active sessions to exceed `&lt;max-active-sessions/&gt;`,
 then the oldest session known to the session manager will passivate to make room for the new session.
                    </column></rule>


<rule><column name="id">jboss-eap5-7-java-01000</column>

<column name="title">JBoss EAP 5 JMX ManagementBean</column>
<column name="contents"/></rule>

<rule><column name="id">jboss-eap5-7-java-02000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/paged/configuring-messaging/chapter-3-basic-configuration#connection_factories</column>

<column name="title">javax.jms.QueueConnectionFactory</column>
<column name="contents">
                      
                      `QueueConnectionFactory` was used to obtain connection to JMS queues.

                      Replace the lookup string `QueueConnectionFactory` with `ConnectionFactory`.
                      
                    </column></rule>

<rule><column name="id">jboss-eap5-7-java-03000</column>
<column name="link">https://docs.jboss.org/ejb3/docs/reference/build/reference/en/html/jboss_extensions.html</column>
<column name="link">https://docs.jboss.org/ejb3/embedded/api/org/jboss/annotation/ejb/package-summary.html</column>

<column name="title">org.jboss.annotation.ejb.Service</column>
<column name="contents">
                        The `@Service` annotation is one of JBoss EJB 3.0 extensions which creates a singleton EJB.
                        Use the new `org.jboss.ejb3.annotation.Service` instead.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-java-05000</column>
<column name="link">https://docs.jboss.org/ejb3/docs/reference/build/reference/en/html/jboss_extensions.html</column>
<column name="link">https://docs.jboss.org/ejb3/embedded/api/org/jboss/annotation/ejb/package-summary.html</column>

<column name="title">org.jboss.annotation.ejb.Management</column>
<column name="contents">
                        The `@Management` annotation is one of JBoss EJB 3.0 extensions which wraps the the bean
                        as an MBean and install it in the JBoss MBean Server.
                        Use the new `org.jboss.ejb3.annotation.Management` instead.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-java-06000</column>
<column name="link">https://docs.jboss.org/ejb3/embedded/api/org/jboss/annotation/ejb/package-summary.html</column>
<column name="link">https://docs.oracle.com/javaee/7/api/javax/ejb/EJB.html#lookup--</column>

<column name="title">org.jboss.annotation.ejb.LocalBinding</column>
<column name="contents">
                        The `@LocalBinding` annotation is one of JBoss EJB 3.0 extensions
                        which specifies the local jndi binding for an EJB local interface.
                        Use `@EJB(lookup="your_jndi")` instead.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-java-07000</column>
<column name="link">https://docs.jboss.org/ejb3/docs/reference/build/reference/en/html/jboss_extensions.html</column>
<column name="link">https://docs.jboss.org/ejb3/embedded/api/org/jboss/annotation/ejb/package-summary.html</column>

<column name="title">org.jboss.annotation.ejb.Depends</column>
<column name="contents">
                        The `@Depends` annotation is one of JBoss EJB 3.0 extensions
                        which specifies a deployment dependency for a bean.
                        Validate that a JBoss EAP 6 Dependency exists.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-java-08000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_entity_beans_to_jpa</column>

<column name="title">Entity EJB</column>
<column name="contents">Entity beans are no longer supported in JBoss EAP 7. User is requested to use JPA entities that fully replaced the functionality provided by Entity beans.
                        This entity needs to be migrated using JPA persistence.xml or using JPA annotations.</column></rule>

<rule><column name="id">jboss-eap5-7-java-09000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_apache_cxf_spring_web_services_changes</column>

<column name="title">Apache CFX integration with JBoss </column>
<column name="contents">Migrate all functionality specified in such XML descriptor. It is mostly already supported by the JAX-WS specification, included in Java EE 7. For specific functionality consult the Apache CFX documentation link provided.</column></rule>

<rule><column name="id">jboss-eap5-7-java-10000</column>

<column name="title">Manifest.mf - specifies application dependencies</column>
<column name="contents">Verify in advance that all the modules this application depends on still exist.</column></rule>

<rule><column name="id">jboss-eap5-7-java-10100</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_jboss_web_valves</column>

<column name="title">JBoss Web Valve</column>
<column name="contents">JBoss Web was replaced by Undertow, which does not contain support for the Valve functionality. It may be needed to migrate to Undertow handlers.</column></rule>

<rule><column name="id">jboss-eap5-7-java-10200</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_deployment_plan_configurations</column>

<column name="title">JSR 88 deployment plan not supported</column>
<column name="contents">This class is using JSR 88 specific classes. Rely instead on proprietary functionality to automate deployments. Please consult EAP 7 admin documentation to learn about such functionality</column></rule>

<rule><column name="id">jboss-eap5-7-java-10300</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_clustering_ha_singleton</column>

<column name="title">Outdated HA Singleton</column>
<column name="contents">EAP 7 includes a new API for building Singleton services, which significantly simplifies the process, and solves the issues found in the legacy solution.</column></rule>

<rule><column name="id">jboss-eap5-7-java-10400</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_stateful_session_ejb_clustering_changes</column>

<column name="title">Stateful Session EJB Clustering changes in EAP 7</column>
<column name="contents">
                        The `@Clustered` annotation is ignored in EAP 7 and is not useful. In case the application is started using HA profile, the replication will be done automatically.
                    </column></rule>

<rule><column name="id">jboss-eap5-7-java-10500</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#whats_new_in_eap</column>
<column name="link">https://activemq.apache.org/artemis/migration.html</column>

<column name="title">HornetQ was removed in EAP 7</column>
<column name="contents">HornetQ was replaced by ActiveMQ Artemis in EAP 7. You should replace all references to `org.hornetq.*` with JMS API or ActiveMQ Artemis API.</column></rule>

<rule><column name="id">jboss-eap5-7-java-10600</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/migration-guide/#migrate_jboss_logging_changes</column>

<column name="title">Deprecated JBoss Logging annotations</column>
<column name="contents">JBoss Logging annotations in package `org.jboss.logging` are deprecated. You should replace them by the corresponding annotations from package `org.jboss.logging.annotations`. Note that using the `org.jboss.logging.annotations` package requires adding a new dependency: `org.jboss.logging:jboss-logging-annotations`.</column></rule>


<rule><column name="id">jaxrpc-00000</column>
<column name="link">http://docs.oracle.com/cd/E17802_01/webservices/webservices/docs/1.6/api/javax/xml/rpc/handler/GenericHandler.html</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/developing-web-services-applications/#developing_jax_ws_web_services</column>

<column name="title">JAX-RPC Generic Handler not supported</column>
<column name="contents">JAX-RPC is no longer supported on JBoss EAP 7. JAX-WS is successor and offers a more accurate and complete solution.</column></rule>


<rule><column name="id">weblogic-webservices-eap7-01000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/developing-web-services-applications/#developing_jax_ws_web_services</column>

<column name="title">WebLogic proprietary web service implementation class</column>
<column name="contents">
                      
                      This web service stub uses the WebLogic proprietary web service implementation class ("weblogic.wsee.jaxrpc.ServiceImpl").
                      It might have been generated by a WebLogic proprietary tool.

                      This should be replaced using the standard Java EE JAX-WS framework. It could be regenerated using the JBoss web services tools.
                      Please refer to the [Developing JAX-WS Web Services](https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/developing-web-services-applications/#developing_jax_ws_web_services) guide for more information.
                      
                    </column></rule>

<rule><column name="id">weblogic-webservices-eap7-02000</column>
<column name="link">https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-JAX-WS_Web_Service_Clients.html</column>

<column name="title">WebLogic asynchronous web service client</column>
<column name="contents">
                      
                      The [WebLogic proprietary Asynchronous Web Service Client API](https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm) should be replaced using calls to the JAX-WS asynchronous API.

                      More information is available in the [JAX-WS Web Service Clients](https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-JAX-WS_Web_Service_Clients.html).
                      
                    </column></rule>

<rule><column name="id">weblogic-webservices-eap7-03000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/developing-web-services-applications/#ws_sec_ws</column>

<column name="title">WebLogic proprietary web service authentication</column>
<column name="contents">
                      
                        Replace proprietary web-service authentication with JAX-WS standard calls. To attach authentication with JBoss EAP, simply use the following code:

                        ```java
                        URL wsdlURL = new File("resources/jaxws/samples/context/WEB-INF/wsdl/TestEndpoint.wsdl").toURL();
                        QName qname = new QName("http://org.jboss.ws/jaxws/context", "TestEndpointService");
                        Service service = Service.create(wsdlURL, qname);
                        port = (TestEndpoint)service.getPort(TestEndpoint.class);

                        BindingProvider bp = (BindingProvider)port;
                        bp.getRequestContext().put(BindingProvider.USERNAME_PROPERTY, "jsmith");
                        bp.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, "PaSSw0rd");
                        ```
                      
                    </column></rule>

<rule><column name="id">weblogic-webservices-eap7-04000</column>
<column name="link">http://docs.oracle.com/javaee/7/api/javax/xml/ws/WebServiceContext.html</column>

<column name="title">WebLogic proprietary web services API</column>
<column name="contents">
                      
                      This code uses the WebLogic specific class "weblogic.wsee.context.WebServiceContext". This usage will need to be replaced with the Java Enterprise Edition standard `javax.xml.WebServiceContext` interface.

                      Example code:

                      ```java
                          @Resource
                          private WebServiceContext webServiceContext;
                      ```
                      
                    </column></rule>

<rule><column name="id">weblogic-webservices-eap7-05000</column>

<column name="title">WebLogic proprietary web services API</column>
<column name="contents">
                        This exception (`weblogic.wsee.context.ContextNotFoundException`) is WebLogic specific and can be removed.
                    </column></rule>

<rule><column name="id">weblogic-webservices-eap7-06000</column>
<column name="link">https://docs.oracle.com/cd/E13222_01/wls/docs90/webserv/anttasks.html#1039270</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/developing-web-services-applications/#using_jax_ws_tools</column>
<column name="link">https://jax-ws.java.net/nonav/2.2.6/docs/ch04.html#tools-wsgen</column>
<column name="link">https://cxf.apache.org/docs/tools.html</column>

<column name="title">WebLogic proprietary web services generated client classes</column>
<column name="contents">
                      
                      This class has been generated by a WebLogic web service client generator (ClientGen).

                      It could be replaced by an equivalent standard Java EE technology using for example the EAP 7 wsconsume tool, the wsgen tool or the CXF tools.
                      
                    </column></rule>


<rule><column name="id">weblogic-eap7-01000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/ejb-basicexamples004.htm</column>

<column name="title">WebLogic Scheduled Job</column>
<column name="contents">
                      
                      WebLogic scheduled jobs should be migrated to use the standard EJB `javax.ejb.TimerService`.
                      
                    </column>
<column name="title">WebLogic scheduled job</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-eap7-02000</column>
<column name="link">https://commons.apache.org/proper/commons-lang/</column>

<column name="title">WebLogic StringUtils usage</column>
<column name="contents">Replace with the `StringUtils` class from Apache Commons.</column></rule>

<rule><column name="id">weblogic-eap7-03000</column>

<column name="title">WebLogic specific Apache XML package</column>
<column name="contents">
                        Code using this package should be replaced with code using the org.apache.xml package from [Apache Xerces](http://xerces.apache.org/).
                    </column></rule>

<rule><column name="id">weblogic-eap7-04000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/development-guide/#java_transaction_api_jta</column>
<column name="link">http://docs.oracle.com/javaee/7/api/javax/transaction/TransactionManager.html</column>

<column name="title">WebLogic TransactionManager usage</column>
<column name="contents">Replace with the Java EE standard [javax.transaction.TransactionManager](http://docs.oracle.com/javaee/7/api/javax/transaction/TransactionManager.html)</column></rule>

<rule><column name="id">weblogic-eap7-05000</column>

<column name="title">WebLogic TransactionManager usage of resume method</column>
<column name="contents">Replace with the Java EE standard method `javax.transaction.TransactionManager.resume(Transaction tx)`.</column></rule>

<rule><column name="id">weblogic-eap7-06000</column>

<column name="title">WebLogic TransactionManager usage of suspend method</column>
<column name="contents">Replace with the Java EE standard `javax.transaction.TransactionManager.suspend()`</column></rule>

<rule><column name="id">weblogic-eap7-07000</column>

<column name="title">WebLogic TxHelper usage</column>
<column name="contents">Remove the `weblogic.transaction.TxHelper` import statement.</column></rule>

<rule><column name="id">weblogic-eap7-08000</column>

<column name="title">WebLogic ClientTxHelper</column>
<column name="contents">
                            
                            Look up the Java Enterprise Edition `javax.transaction.TransactionManager` in JBoss EAP using the following code:

                            ```java
                            InitialContext context = new InitialContext();
                            TransactionManager transactionManager =
                            (TransactionManager)context.lookup("java:jboss/TransactionManager");
                            ```
                            
                        </column></rule>

<rule><column name="id">weblogic-eap7-09000</column>
<column name="link">https://docs.oracle.com/database/121/JAJDB/oracle/jdbc/class-use/OracleClob.html</column>
<column name="link">http://docs.oracle.com/javase/7/docs/api/java/sql/Clob.html</column>

<column name="title">WebLogic proprietary Clob JDBC object (OracleThinClob)</column>
<column name="contents">
                        This Oracle and WebLogic proprietary code (`OracleThinClob`) should be replaced with the use of the java.sql.Clob interface.
                    </column></rule>

<rule><column name="id">weblogic-eap7-10000</column>
<column name="link">https://docs.oracle.com/database/121/JAJDB/oracle/jdbc/class-use/OracleClob.html</column>
<column name="link">http://docs.oracle.com/javase/7/docs/api/java/sql/Clob.html</column>

<column name="title">WebLogic JDBC code</column>
<column name="contents">
                        This code is specific to WebLogic and should be replaced with `java.sql.Clob.setCharacterStream(1)`
                    </column></rule>

<rule><column name="id">weblogic-eap7-11000</column>
<column name="link">https://docs.oracle.com/javase/7/docs/technotes/guides/logging/overview.html</column>
<column name="link">http://www.jboss.org/quickstarts/eap/logging/</column>

<column name="title">WebLogic proprietary logger (NonCatalogLogger)</column>
<column name="contents">
                      
                      The WebLogic `NonCatalogLogger` is not supported on JBoss EAP, and should be migrated to a supported logging framework,
                      such as the JDK Logger or JBoss Logging:

                      ```java
                      import java.util.logging.Logger;
                      Logger LOG = Logger.getLogger("MyLogger");
                      ```
                      
                    </column></rule>

<rule><column name="id">weblogic-eap7-12000</column>
<column name="link">https://access.redhat.com/articles/1329233</column>
<column name="link">https://access.redhat.com/solutions/42463</column>

<column name="title">WebLogic Oracle FCF JDBC property</column>
<column name="contents">
                      
                      Oracle Fast Connection Failover is specific property supported only by Oracle JDBC driver which provides support for their vendor's special features transparently to the application server in which they are deployed.

                      For example, one can supply a URL like this to the Oracle JDBC driver and the driver will provide transparent load-balancing and fail-over:
                      ```
                      &lt;xa-datasource-property name="URL"&gt;jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(LOAD_BALANCE=ON)(FAILOVER=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=my.host.org)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=my.host.org)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=servjboss)(failover_mode=(type=select)(method=basic)))&lt;/xa-datasource-property&gt;
                      ```
                      
                    </column></rule>

<rule><column name="id">weblogic-eap7-13000</column>

<column name="title">WebLogic side-by-side redeployment configuration</column>
<column name="contents">
                      
                      Oracle WebLogic Server includes a proprietary side-by-side production redeployment feature. For applications that meet certain requirements and restrictions, the new version of the application is deployed while the older version is still running.
                      The old and new applications must be running on the same server or cluster. The new version of the application accepts new web session requests while the older version finishes processing requests already in process. Upon completion of the existing session requests, the older version of the application is then undeployed.

                      In JBoss EAP, you can either deploy the new application to a secondary server group or cluster, or deploy the new application serially to the same clustered domain.
                      
                  </column></rule>

<rule><column name="id">weblogic-eap7-15000</column>

<column name="title">WebLogic Oracle Wallet</column>
<column name="contents">
                      
                      WebLogic administrators use wallets created by Oracle Wallet Manager to manage public key security credentials on application clients and servers.

                      These wallets must first be converted to standard Java KeyStore (JKS) entries that can then be used to configure the credentials in JBoss EAP 7.
                      
                    </column></rule>

<rule><column name="id">weblogic-eap7-016000</column>

<column name="title">WebLogic InitialContextFactory</column>
<column name="contents">
                    
                    `weblogic.jndi.WLInitialContextFactory` is an implementation of `InitialContextFactory` used to get object instances from JNDI.

                    The equivalent functionality needs to be configured on JBoss EAP 7 using `org.jboss.naming.remote.client.InitialContextFactory`. Then the context could be instanticated as follows: `InitialContext ctx = new InitialContext();`.
                    
                    </column></rule>

<rule><column name="id">weblogic-eap7-017000</column>
<column name="link">https://docs.oracle.com/cd/E24329_01/web.1211/e24389/rmi_t3.htm#WLRMI143</column>
<column name="link">https://access.redhat.com/solutions/1230143</column>

<column name="title">WebLogic proprietary T3 JNDI binding</column>
<column name="contents">
                    
                    Weblogic’s implementation of the RMI specification uses a proprietary protocol known as T3. T3S is the version of the protocol over SSL.
                     `t3://` and `t3s://` URLs are used to configure a JNDI InitialContext within WebLogic.

                    The equivalent functionality needs to be configured in JBoss EAP 7.
                    This could be done either by using standard Java EE JNDI names or by using a WebLogic proprietary library if the connectivity to WebLogic server is still required.
                    
                    </column></rule>


<rule><column name="id">weblogic-webapp-eap7-01000</column>
<column name="link">https://access.redhat.com/articles/1332613</column>

<column name="title">WebLogic Virtual directory mapping</column>
<column name="contents">Virtual directories supported in WebLogic are not supported in JBoss EAP.</column></rule>

<rule><column name="id">weblogic-webapp-eap7-02000</column>
<column name="link">https://access.redhat.com/articles/1249423</column>

<column name="title">WebLogic proprietary servlet annotations</column>
<column name="contents">
                      
                      Replace the proprietary WebLogic `@WLServlet` annotation with the Java EE standard `@WebServlet` annotation.

                      See the [javax.servlet.annotation JavaDoc](http://docs.oracle.com/javaee/7/api/javax/servlet/annotation/package-summary.html) for more information.
                      
                    </column></rule>

<rule><column name="id">weblogic-webapp-eap7-03000</column>
<column name="link">https://access.redhat.com/articles/1249423</column>

<column name="title">WebLogic proprietary servlet annotations</column>
<column name="contents">
                      
                      Replace the proprietary WebLogic `@WLInitParam` annotation with the Java EE standard `@WebInitParam` annotation.

                      See the [javax.servlet.annotation JavaDoc](http://docs.oracle.com/javaee/7/api/javax/servlet/annotation/package-summary.html) for more information.
                      
                    </column></rule>

<rule><column name="id">weblogic-webapp-eap7-04000</column>
<column name="link">https://access.redhat.com/articles/1249423</column>

<column name="title">WebLogic proprietary servlet annotations</column>
<column name="contents">
                      
                      Replace the proprietary WebLogic `@WLFilter` annotation with the Java EE standard `@WebFilter` annotation.

                      See the [javax.servlet.annotation JavaDoc](http://docs.oracle.com/javaee/7/api/javax/servlet/annotation/package-summary.html) for more information.
                      
                    </column></rule>

<rule><column name="id">weblogic-webapp-eap7-05000</column>
<column name="link">https://access.redhat.com/articles/1326703</column>
<column name="link">http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContextEvent.html</column>
<column name="link">http://docs.oracle.com/cd/E13222_01/wls/docs90/programming/lifecycle.html</column>

<column name="title">WebLogic ApplicationLifecycleEvent</column>
<column name="contents">
                      
                      WebLogic `ApplicationLifecycleEvent` must be replaced with standard Java EE `ServletContextEvent`. Otherwise, a custom solution using CDI's `ApplicationScoped` beans or EJB's `@Startup` beans is required in order to propagate a custom event object because `ServletContextEvent` types are not extendible in the standard Java EE programming model.

                      Use a `javax.servlet.ServletContextListener` with `@javax.annotation.servlet.WebListener`, or an EJB 3.1 `@javax.ejb.Startup` `@javax.ejb.Singleton` service bean.
                      
                    </column></rule>

<rule><column name="id">weblogic-webapp-eap7-06000</column>
<column name="link">https://access.redhat.com/articles/1326703</column>
<column name="link">http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContextEvent.html</column>
<column name="link">http://docs.oracle.com/cd/E13222_01/wls/docs90/programming/lifecycle.html</column>

<column name="title">WebLogic ApplicationLifecycleListener</column>
<column name="contents">
                      
                      WebLogic `ApplicationLifecycleListener` must be replaced with standard Java EE `ServletContextListener` types. Otherwise, a solution using CDI's `ApplicationScoped` beans or EJB's `@Startup` beans is required.

                      Use a `javax.servlet.ServletContextListener` with `@javax.annotation.servlet.WebListener`, or an EJB 3.1 `@javax.ejb.Startup` `@javax.ejb.Singleton` service bean.
                      
                    </column></rule>

<rule><column name="id">weblogic-webapp-eap7-07000</column>
<column name="link">http://docs.oracle.com/cd/E12839_01/apirefs.1111/e13941/weblogic/security/Security.html</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform?category=security&amp;version=7.0</column>

<column name="title">WebLogic proprietary security API</column>
<column name="contents">The usage of the WebLogic proprietary security API should be replaced by standard Java EE mechanisms or the ones provided by JBoss EAP.</column></rule>

<rule><column name="id">weblogic-webapp-eap7-08000</column>
<column name="link">https://access.redhat.com/webassets/avalon/d/red-hat-jboss-enterprise-application-platform/7.0.0/javadocs/org/jboss/security/SecurityContextAssociation.html</column>

<column name="title">WebLogic proprietary security reference to weblogic.security.Security</column>
<column name="contents">Migrate to JBoss EAP 7: `org.jboss.security.SecurityContextAssociation`.</column></rule>

<rule><column name="id">weblogic-webapp-eap7-09000</column>
<column name="link">https://access.redhat.com/articles/1329213</column>

<column name="title">WebLogic proprietary ServletAuthentication annotation</column>
<column name="contents">
                      
                      Oracle WebLogic Server provides a proprietary `ServletAuthentication` class to perform programmatic login.

                      In Red Hat JBoss EAP 7, you can use the standard Java EE servlet security 3.1 `HttpServletRequest.login()` method or you can define a `&lt;security-constraint&gt;` element in the web.xml file. You must also replace code that uses the Oracle WebLogic Server proprietary `ServletAuthentication` class.
                      
                    </column></rule>


<rule><column name="id">weblogic-xml-descriptor-eap7-01000</column>
<column name="link">https://access.redhat.com/articles/1326803</column>
<column name="link">https://access.redhat.com/articles/1328043</column>

<column name="title">WebLogic EAR application descriptor (weblogic-application.xml)</column>
<column name="contents">
                      The `weblogic-application.xml` deployment descriptor file is used to describe Oracle WebLogic Server EAR archives. Oracle WebLogic Server EAR configures some application settings through the `application-param` element.
                      These settings could be replaced with `context-param` elements in Java EE Servlet `web.xml` descriptor.
                    </column></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-02000</column>
<column name="link">https://access.redhat.com/articles/1326803</column>

<column name="title">WebLogic Entity EJB configuration</column>
<column name="contents">WebLogic Entity EJB Configuration are used for RDBMS based persistence services.</column></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-03000</column>
<column name="link">https://access.redhat.com/articles/1326823</column>

<column name="title">WebLogic `delay-updates-until-end-of-tx` configuration element</column>
<column name="contents">
                      
                      The WebLogic `&amp;amp;lt;delay-updates-until-end-of-tx&amp;amp;lt;` configuration element, which defaults to `true`, is used for performance reasons to delay updates to the persistent store of all beans until the end of the transaction. When set to `false`, updates are sent to the database after each method invocation, but are not committed until the end of the transaction. This allows other processes to access the persisted data while the transaction is waiting to be completed.

                      In JBoss EAP 6+, you can achieve the same behavior by specifying the `&amp;amp;lt;sync-on-commit-only&amp;amp;gt;` in the jbosscmp-jdbc.xml file.
                      
                    </column></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-04000</column>
<column name="link">https://access.redhat.com/articles/1326823</column>

<column name="title">WebLogic EJB XML (weblogic-ejb-jar.xml)</column>
<column name="contents">The elements of proprietary `weblogic-ejb-jar.xml` descriptor need to be mapped to the `jboss-ejb3.xml` one according to the attached knowledge article.</column>
<column name="title">WebLogic EJB XML</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-06001</column>
<column name="link">http://docs.oracle.com/javaee/6/api/javax/ejb/AccessTimeout.html</column>
<column name="link">http://docs.oracle.com/javaee/7/api/javax/ejb/AccessTimeout.html</column>

<column name="title">WebLogic Stateful Session Bean (SFSB)</column>
<column name="contents">Replace WebLogic proprietary configuration by Java EE annotation `@AccessTimeout`.
                  The equivalent usage is `@AccessTimeout(value= -1)`</column></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-07000</column>

<column name="title">WebLogic SOAP client mapping</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-08000</column>

<column name="title">WebLogic Java to WSDL Mapping</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-09000</column>

<column name="title">WebLogic web service policy</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-10000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/developing-web-services-applications/</column>

<column name="title">Webservice Type</column>
<column name="contents">WebLogic webservices can be migrated to `jboss-webservices.xml` descriptor or to a Java EE standard Annotation based configuration. Reference the JBoss EAP product documentation for more information.
                        </column>
<column name="title">WebLogic web service descriptor</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-11000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/configuring-messaging/#intro_messaging_config</column>

<column name="title">WebLogic JMS descriptor</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-12000</column>
<column name="link">https://access.redhat.com/articles/1326803</column>
<column name="link">https://access.redhat.com/articles/1327803</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/paged/configuration-guide/</column>

<column name="title">WebLogic web application descriptor (weblogic.xml)</column>
<column name="contents">
                      The Oracle WebLogic Server deployment descriptor file (`weblogic.xml`) provides functionality that is not included in the standard Java EE specification. While there is no direct mapping of these descriptor elements, many of these features may be configured in the application deployment or JBoss server configuration files.

                        For more information on how to configure JBoss EAP, please refer to the Configuration Guide for JBoss Enterprise Application Platform 7.
                    </column></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-13000</column>

<column name="title">WebLogic RMI XML version 1.x</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-14000</column>

<column name="title">WebLogic web service type mapping</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-15000</column>

<column name="title">WebLogic services configuration</column>
<column name="contents">WebLogic specific configuration of web services runtime parameters</column></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-16000</column>

<column name="title">WebLogic specific webservice ant tasks</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-17000</column>

<column name="title">WebLogic annotation manifest</column>
<column name="contents">
                        In this file, the value set for a property by a metadata annotation can be overridden. (It does not override the values set by a setter method.)
                    </column></rule>

<rule><column name="id">weblogic-xml-descriptor-eap7-18000</column>
<column name="link">https://access.redhat.com/articles/1329173</column>

<column name="title">WebLogic plan.xml deployment descriptor</column>
<column name="contents">
                        WebLogic `plan.xml` deployment descriptor file provides a way to target the application deployment for a specific environment.
                    </column></rule>


<rule><column name="id">weblogic-services-eap7-01000</column>
<column name="link">http://docs.oracle.com/javaee/7/api/javax/ejb/Singleton.html</column>
<column name="link">http://docs.oracle.com/javaee/7/api/javax/ejb/Startup.html</column>

<column name="title">WebLogic Startup Service</column>
<column name="contents">Replace this class with a class using the EJB 3.2 `@Singleton` and `@Startup` annotations.</column></rule>

<rule><column name="id">weblogic-services-eap7-02000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/ejb-intro002.htm#GIPIM</column>

<column name="title">WebLogic T3ServicesDef usage</column>
<column name="contents">
                      
                      `T3ServicesDef` provides access to core services of the container, such as Timers and Logging facilities.

                      Replace the services provided by this with a Singleton EJB (using the `@Singleton` annotation) that provides access to the equivalent services from JBoss EAP.
                      
                    </column></rule>

<rule><column name="id">weblogic-services-eap7-03000</column>
<column name="link">https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/development-guide/#logging</column>

<column name="title">WebLogic proprietary logging classes</column>
<column name="contents">
                      
                      Oracle WebLogic logging classes should be replaced with SLF4J, Log4J, or Java Logging.

                      Please refer to the [JBoss EAP 7 Development guide](https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/development-guide/#logging) for more information on this.
                      
                    </column></rule>


<rule><column name="id">weblogic-jms-eap7-00000</column>
<column name="link">http://docs.oracle.com/cd/B10501_01/appdev.920/a96609/toc.htm</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEH</column>

<column name="title">Oracle JMS</column>
<column name="contents"/></rule>

<rule><column name="id">weblogic-jms-eap7-01000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEN</column>

<column name="title">Oracle JMS Session</column>
<column name="contents">
                        Oracle JMS sessions are used for producing and consuming messaging API objects such as message producers, message
                        consumers, messages, queue browsers, and temporary queues and topics.

                        This reference should be replaced with the Java EE
                        standard API: `javax.jms.Session`.
                    </column></rule>

<rule><column name="id">weblogic-jms-eap7-02000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEY</column>

<column name="title">Oracle JMS Queue Browser</column>
<column name="contents">
                        Oracle JMS queue browsers are used for browsing messages in a JMS queue.

                        This reference should be replaced with the Java
                        EE standard API: `javax.jms.QueueBrowser`.
                    </column></rule>

<rule><column name="id">weblogic-jms-eap7-03000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEO</column>

<column name="title">Oracle JMS Producer</column>
<column name="contents">
                        Oracle JMS producers are used for sending messages to a destination.

                        This reference should be replaced with the Java
                        EE
                        standard API: `javax.jms.MessageProducer`.
                    </column></rule>

<rule><column name="id">weblogic-jms-eap7-04000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEP</column>

<column name="title">Oracle JMS Consumer</column>
<column name="contents">
                        Oracle JMS consumers are used for receiving messages sent to a destination.

                        This reference should be replaced with the
                        Java EE standard API: `javax.jms.MessageConsumer`.
                    </column></rule>

<rule><column name="id">weblogic-jms-eap7-05000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEM</column>

<column name="title">Oracle JMS Consumer</column>
<column name="contents">
                        Oracle JMS connections represent virtual connections with a JMS provider.

                        This reference should be replaced with the
                        Java
                        EE standard API: `javax.jms.Connection`.
                    </column></rule>

<rule><column name="id">weblogic-jms-eap7-06000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCES</column>

<column name="title">Oracle JMS {type}Message</column>
<column name="contents">
                        Oracle JMS {type} messages represent the actual data passed through JMS destinations.

                        This reference should be replaced
                        with the
                        Java
                        EE standard API: `javax.jms.{type}Message`.
                    </column></rule>

<rule><column name="id">weblogic-jms-eap7-07000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEL</column>

<column name="title">Oracle JMS Destination</column>
<column name="contents">
                        Oracle JMS destinations are the objects a client uses to specify the target of messages it produces and the source of
                        messages it consumes.

                        This reference should be replaced with the
                        Java
                        EE standard API: `javax.jms.Destination`.
                    </column></rule>

<rule><column name="id">weblogic-jms-eap7-08000</column>
<column name="link">https://docs.oracle.com/javaee/7/tutorial/jms-concepts003.htm#BNCEK</column>

<column name="title">Oracle JMS {type} Connection Factory</column>
<column name="contents">
                        Oracle {type}ConnectionFactory is an encapsulation of JMS servers to which Connections can be created for message distribution.

                        This reference should be replaced with the
                        Java
                        EE standard API: `javax.jms.{type}ConnectionFactory`.
                    </column></rule>

<ROOT xmlns="http://windup.jboss.org/v1/xml"/>
<ROOT xmlns="http://windup.jboss.org/v1/xml"/>

<rule><column name="id">soa-p-5-01000</column>
<column name="link">https://github.com/windup/soa-migration/blob/master/advice/action-class-migration.md</column>

<column name="title">JBoss ESB 5 Action Handler</column>
<column name="contents">
                            
                                Custom action classes should be migrated to CDI Beans in Fuse Service Works. These beans can be defined as services or called directly from a Camel route.

                                For more information, see the [Action Class Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/action-class-migration.md).
                            
                        </column>
<column name="title">JBoss ESB 5 Action Handler</column>
<column name="contents">
                            
                                Custom action classes should be migrated to CDI Beans in Fuse Service Works. These beans can be defined as services or called directly from a Camel route.
                            
                        </column></rule>

<rule><column name="id">soa-p-5-02000</column>

<column name="title">JBoss ESB Deployment Descriptor</column>
<column name="contents"/></rule>

<rule><column name="id">soa-p-5-03000</column>
<column name="link">https://github.com/windup/soa-migration/blob/master/advice/action-pipeline-migration.md</column>

<column name="title">JBoss ESB Pipeline Configuration</column>
<column name="contents"/></rule>

<rule><column name="id">soa-p-5-04000</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_2_Smooks/</column>

<column name="title">Smooks Configuration</column>
<column name="contents"/></rule>

<rule><column name="id">soa-p-5-05000</column>

<column name="title">JMS Gateway Listener</column>
<column name="contents">
                            
                                This listener requires a composite service binding in Fuse Service Works. The configuration for a JCA or JMS binding can be found in the jms-bus definition
                                associated with this listener.

                                For additional information, see the
                                [Gateway Listener Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md).
                            
                        </column></rule>

<rule><column name="id">soa-p-5-06000</column>

<column name="title">ESB-Aware Listener (non-gateway)</column>
<column name="contents">An ESB-aware listener is no longer required in Fuse Service Works.</column></rule>

<rule><column name="id">soa-p-5-07000</column>

<column name="title">JBoss SOA-P Service</column>
<column name="contents">
                        
                            Each &lt;service&gt; definition in SOA-P 5 represents a service which can be
                            called from outside the application through an ESB listner.  The
                            equivalent definition in Fuse Service Works is a composite service.

                            For additional information, see the
                            [Service Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/service-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-5-08000</column>

<column name="title">JBoss SOA-P Action Pipeline</column>
<column name="contents">
                        
                            The logic and execution flow of a service in SOA-P 5 is defined in an
                            action processing pipeline. This logic is
                            contained within a service component definition and expressed
                            using any of the available implementation types in Fuse Service Works.

                            For additional information see: the [Action Pipeline Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/action-pipeline-migration.md)
                        
                    </column></rule>

<rule><column name="id">soa-p-5-09000</column>

<column name="title">Service Binding: Hibernate Bus</column>
<column name="contents">
                        
                            Although Camel has both Hibernate and JPA components that are
                            useful in consuming records, there isn't any support for Hibernate events.

                            To migrate this to SwitchYard you may have to
                            build a custom SwitchYard component using Hibernate
                            listeners, or redesign your requirements to leverage the
                            existing Camel components available (Hibernate/JPA/SQL)
                            in this area.
                        
                    </column></rule>

<rule><column name="id">soa-p-5-10000</column>

<column name="title">JMS Bus Definition</column>
<column name="contents">
                        
                            A jms-bus definition can be converted to a JMS or JCA gateway
                            binding on a composite service in SwitchYard. If the jms-bus
                            configuration is used for a non-gateway listener, it does not
                            need to be migrated to Fuse Service Works.

                            For additional information, see the
                            [JMS Bus Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/jms-bus-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-5-11000</column>

<column name="title">FTP Bus Definition</column>
<column name="contents">
                        
                            A ftp-bus definition can be converted to a FTP gateway
                            binding on a composite service in SwitchYard.

                            For additional information, see the
                            [FTP Bus Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/ftp-bus-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-5-12000</column>

<column name="title">Camel Bus Definition</column>
<column name="contents">
                        
                            A camel-bus definition can be converted to a Camel gateway
                            binding on a composite service in SwitchYard.

                            For additional information, see the
                            [Camel Bus Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/camel-bus-migration.md)
                        
                    </column></rule>

<rule><column name="id">soa-p-5-13000</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Gateways.html#sect-TCP_UDP</column>

<column name="title">UDP Listener Configuration</column>
<column name="contents">
                        
                            A UDP Listener definition can be converted to a TCP/UDP
                            gateway binding on a composite service in SwitchYard.
                        
                    </column></rule>

<rule><column name="id">soa-p-5-14000</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Gateways.html#sect-JCA</column>

<column name="title">JMS JCA Provider</column>
<column name="contents">
                        
                            A jms-jca-provider definition can be converted to a JCA
                            gateway binding on a composite service in Fuse Service Works.
                        
                    </column></rule>

<rule><column name="id">soa-p-5-15000</column>

<column name="title">HTTP Provider</column>
<column name="contents">
                        
                            A http-provider definition can be converted to a HTTP gateway
                            binding on a composite service in Fuse Service Works.

                            For additional information, see the
                            [Gateway Listener Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-16000</column>

<column name="title">Cron Schedule</column>
<column name="contents">
                        
                            A cron-schedule definition can be converted to a Quartz
                            gateway binding on a composite service in Fuse Service Works.

                            For additional information, see the
                            [Cron Scheduler Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/cron-schedule-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-17000</column>

<column name="title">FTP Gateway Listener</column>
<column name="contents">
                        
                            This listener requires a composite service binding in Fuse Service Works. The configuration for a FTP binding
                            can be found in the ftp-bus definition associated with this listener.

                            For additional information, see the
                            [Gateway Listener Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-18000</column>

<column name="title">Camel Gateway Listener</column>
<column name="contents">
                        
                            This gateway requires a composite service binding in Fuse Service Works.
                            The configuration for a Camel binding can be found in the camel-bus definition associated
                            with this listener.

                            For additional information, see the
                            [Gateway Listener Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-19000</column>

<column name="title">HTTP Gateway Listener</column>
<column name="contents">
                        
                            A &lt;http-gateway&gt; can be replaced in Fuse Service Works by a http binding added to your composite service.

                            For additional information, see the
                            [HTTP Gateway Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/http-gateway-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-20000</column>

<column name="title">Smooks Transformation Action</column>
<column name="contents">
                        
                            Fuse Service Works uses a &lt;transform&gt; to replace the invocation
                            of as SmooksAction to transform message content. You most likely will want to use a Smooks transform
                            to specify your Smooks configuration and from/to types.

                            For additional information, see the
                            [Transformation Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-21000</column>

<column name="title">Smooks Config</column>
<column name="contents">
                        
                            In a Fuse Service Works Smooks transform, you can specify your Smooks configuration with the &amp;quot;config&amp;quot; attribute.

                            For additional information, see the
                            [Transformation Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-22000</column>

<column name="title">Smooks Result Type</column>
<column name="contents">
                        
                            Fuse Service Works uses a &lt;transform&gt; to replace the invocation of as SmooksAction
                            to transform message content. You most likely will want to use a Smooks transform
                            to specify your Smooks configuration and from/to types.

                            For additional information, see the
                            [Transformation Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-23000</column>

<column name="title">ESB SOAP Proxy</column>
<column name="contents">
                        
                            Instead of the JBoss ESB SOAPProxy action which transforms a specified WSDL and rewrites the address to the JBoss ESB server,
                            Fuse Service Works relies on Camel's routing capability to forward requests from a proxying service to the source.
                            Create a proxy service and a reference to the original service, and then use Camel to route them.

                            For additional information, see the
                            [SOAPProxy Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/soap-proxy.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-24000</column>

<column name="title">ESB SystemPrintln Action</column>
<column name="contents">
                        
                            In order to log your message (or a static logging message), you may want to create a Bean service which logs the message in the manner you wish, or you can use Camel routing to log static
                            logging messages.

                            For additional information, see the
                            [Action Class Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/action-class-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-25000</column>

<column name="title">ESB Static Router</column>
<column name="contents">
                        
                            In order to configure static routes for your message in
                            Fuse Service Works, you should use Camel's routing (either through Java DSL routes or route.xml).

                            For additional information, see the
                            [Action Class Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/action-class-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-26000</column>

<column name="title">ESB JMS Router</column>
<column name="contents">
                        
                            In order to replace the use of the JMSRouter in Fuse Service Works, you should use a JMS binding. You may need to review the options for JMS bindings in
                            Fuse Service Works if you are using the unwrap property.

                            For additional information, see the
                            [Action Class Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/action-class-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-27000</column>

<column name="title">ESB Test Message Store</column>
<column name="contents">
                        
                            TestMessageStore is an out-of-the-box ESB action that is used in JBoss Application Server
                            container tests to store a message with some form of logging - to a file, JMX, etc. TestMessageStore is used throughout
                            the JBoss ESB sample projects to help test the results of processed messages.

                            Fuse Service Works is able to leverage Arquillian to do container testing, so TestMessageStore is not
                            necessary for testing. This action should simply be removed during the migration.
                        
                    </column></rule>

<rule><column name="id">soa-p-28000</column>

<column name="title">ESB GroovyActionProcessor</column>
<column name="contents">
                        
                            The GroovyActionProcessor action executes a Groovy script. You can duplicate this functionality in
                            Fuse Service Works through Camel routing (both Java and XML.)

                            For additional information, see the
                            [Camel Scripting Guide](https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Service_Implementations.html#Using_Scripting_Languages).
                        
                    </column></rule>

<rule><column name="id">soa-p-29000</column>

<column name="title">ESB BpmProcessor</column>
<column name="contents">
                        
                            The BpmProcessor makes calls to jBPM 3 through the jBPM command API. Fuse Service Works supports jBPM 5, so you will need
                            to migrate your existing workflow from jBPM 3 to jBPM 5 and use a Fuse Service Works BPM implementation.

                            For additional information, see the
                            [BPM Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/bpm_migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-30000</column>

<column name="title">ESB Filesystem Bus</column>
<column name="contents">
                        
                            A fs-bus definition can be converted to a Camel binding on a composite service in Fuse Service Works.

                            For additional information, see the
                            [Gateway Listener Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-31000</column>

<column name="title">ESB Notifier Action</column>
<column name="contents">
                        
                            JBoss ESB uses notifiers to transform ESB aware messages to a format that ESB-unaware services can handle. Fuse Service Works uses bi-directional gateways to transfer messages
                            via its service bindings.

                            A JBoss ESB Notifier should be converted to a Fuse Service Works Service Binding.

                            For example:

                            ```xml
                            &lt;service category="routerToFile" name="FileRouterListener" description="Static route file destination"&gt;
                                &lt;actions mep="OneWay"&gt;
                                    &lt;action name="notificationAction" class="org.jboss.soa.esb.actions.Notifier"&gt;
                                        &lt;property name="okMethod" value="notifyOK"/&gt;
                                        &lt;property name="notification-details"&gt;
                                            &lt;NotificationList type="ok"&gt;
                                                &lt;target class="NotifyFiles"&gt;
                                                    &lt;file append="false" URI="/tmp/HelloWorldFileNotifierTest.log"/&gt;
                                                &lt;/target&gt;
                                            &lt;/NotificationList&gt;
                                        &lt;/property&gt;
                                    &lt;/action&gt;
                                &lt;/actions&gt;
                            &lt;/service&gt;
                            ```


                            Could be translated to:

                            ```xml
                            &lt;sca:reference name="HelloWorld" multiplicity="0..1" promote="MyComponent/HelloWorld"&gt;
                                &lt;camel:binding.file&gt;
                                    &lt;camel:directory&gt;/tmp&lt;/camel:directory&gt;
                                    &lt;camel:fileName&gt;HelloWorldFileNotifierTest.log&lt;/camel:fileName&gt;
                                &lt;/camel:binding.file&gt;
                            &lt;/sca:reference&gt;
                            &lt;sca:component name="MyComponent"&gt;
                                &lt;sca:reference name="HelloWorld"&gt;
                                    &lt;sca:interface.wsdl interface="HelloWorld.wsdl#wsdl.porttype(HelloWorld)"/&gt;
                                &lt;/sca:reference&gt;
                            &lt;/sca:component&gt;
                            ```
                        
                    </column></rule>

<rule><column name="id">soa-p-32000</column>
<column name="link">http://camel.apache.org/convertbodyto.html</column>
<column name="link">http://camel.apache.org/type-converter.html</column>

<column name="title">ESB ByteArrayToString</column>
<column name="contents">
                        
                            JBoss ESB uses a ByteArrayToString action to do conversion on a message body. In Fuse Service Works
                            you would use Camel to do type conversion.
                        
                    </column></rule>

<rule><column name="id">soa-p-33000</column>
<column name="link">http://camel.apache.org/type-converter.html</column>

<column name="title">ESB LongToDateConverter</column>
<column name="contents">
                        
                            JBoss ESB uses the LongToDateConverter action to do conversion on a message body.

                            In Fuse Service Works you would use Camel to do type conversion.
                        
                    </column></rule>

<rule><column name="id">soa-p-34000</column>

<column name="title">ESB ObjectToCSVString</column>
<column name="contents">
                        
                            JBoss ESB uses the ObjectToCSVString action to do conversion on a message body. Fuse Service Works
                            would use a Smooks transform or a Camel route to perform this type of conversion.

                            For additional information, see the
                            [Transformation Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-35000</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Service_Implementations.html#sect-Bean</column>

<column name="title">ESB ObjectInvoke</column>
<column name="contents">
                        
                            JBoss ESB uses a ObjectInvoke action to invoke a processor on a message.
                            Fuse Service Works would use a bean component to do this.
                        
                    </column></rule>

<rule><column name="id">soa-p-36000</column>

<column name="title">ESB ObjectToXStream</column>
<column name="contents">
                            
                                JBoss ESB uses an ObjectToXStream action to do convert an Object payload to XML using the XStream
                                processor. Fuse Service Works would use a Smooks transform or a Camel route to do this type of conversion.

                                For additional information, see the
                                [Transformation Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md).
                            
                        </column></rule>

<rule><column name="id">soa-p-37000</column>

<column name="title">ESB XStreamToObject</column>
<column name="contents">
                        
                            JBoss ESB uses an XStreamToObject action to convert XML in a payload to an object using the XStream processor.
                            Fuse Service Works would use Smooks transform or a Camel route transform to do this type of conversion.

                            For additional information, see the
                            [Transformation Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-38000</column>

<column name="title">ESB XsltAction</column>
<column name="contents">
                        
                            JBoss ESB uses the XsltAction action to transform documents in a payload. Fuse Service Works would use Camel to do this type of
                            conversion.

                            For additional information, see the
                            [Transformation Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-39000</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_2_Smooks/</column>

<column name="title">ESB SmooksTransformer</column>
<column name="contents">
                        
                            Fuse Service Works uses a &amp;lt;transform&amp;gt; to replace the invocation of a SmooksTransformer to transform message content.
                            You will need to use a Smooks transform to specify your Smooks configuration and from/to types.

                            For additional information, see the
                            [Transformation Migration Guide](https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md).
                        
                    </column></rule>

<rule><column name="id">soa-p-40000</column>

<column name="title">ESB MessagePersister</column>
<column name="contents">
                        
                            JBoss ESB uses the MessagePersister action to persist a message. Fuse Service Works would use
                            a [SQL reference binding](https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Gateways.html#sect-SQL) to accomplish something similar.
                        
                    </column></rule>

<rule><column name="id">soa-p-41000</column>
<column name="link">https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Service_Implementations.html#sect-Bean</column>

<column name="title">ESB EJBProcessor</column>
<column name="contents">
                        
                            JBoss ESB uses the EJBProcessor action to invoke a stateless session bean with the contents of a message.
                            Similar things can be achieved in Fuse Service Works through the use ofa bean service.
                        
                    </column></rule>

<rule><column name="id">soa-p-42000</column>

<column name="title">ESB ScriptingAction</column>
<column name="contents">
                        
                            The ScriptingAction executes a script using the BeanScriptingFramework. You can duplicate this functionality in Fuse Service Works
                            through Camel routing (both Java and XML.)

                            For additional information, see the
                            [Camel Scripting Guide](https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Service_Implementations.html#Using_Scripting_Languages).
                        
                    </column></rule>

<rule><column name="id">soa-p-43000</column>

<column name="title">ESB {javaclassname}</column>
<column name="contents">
                        
                            JBoss ESB uses the {javaclassname} action to aggregate a message sequence into a single aggregated message.
                            Fuse Service Works would make use of Camel routing and Camel's aggregator to accomplish this.

                            For more information, see the
                            [Camel Aggregator Documentation](http://camel.apache.org/aggregator.html).
                        
                    </column></rule>

<rule><column name="id">soa-p-44000</column>

<column name="title">ESB HTTP Router</column>
<column name="contents">
                        
                            In order to replace the use of the HttpRouter in JBoss ESB, you should use a HTTP reference binding.

                            Further documentation is available in the
                            [Fuse Service Works Developer Guide](https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Gateways.html#sect-HTTP).
                        
                    </column></rule>

<rule><column name="id">soa-p-45000</column>

<column name="title">ESB Email Router</column>
<column name="contents">
                        
                            In order to replace the use of the EmailRouter in Fuse Service Works, you should use a mail reference binding.

                            Further documentation is available in the
                            [Fuse Service Works Developer Guide](https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Gateways.html#sect-Mail).
                        
                    </column></rule>

<rule><column name="id">soa-p-46000</column>

<column name="title">ESB ContentBasedRouter</column>
<column name="contents">
                        
                            In order to replace the use of the ContentBasedRouter in Fuse Service Works, you should use Camel to route messages.

                            A good example of this functionality can be found in the quickstarts project in the [rules-camel-jbr
                            quickstart](https://github.com/jboss-switchyard/quickstarts/tree/master/rules-camel-cbr).
                        
                    </column></rule>

<rule><column name="id">soa-p-47000</column>

<column name="title">ESB StaticWiretap</column>
<column name="contents">
                        
                            In order to replace the use of the StaticWiretap in Fuse Service Works, you should use a
                            [Camel Wiretap](http://camel.apache.org/wire-tap.html) to perform this action.
                        
                    </column></rule>

<rule><column name="id">soa-p-48000</column>

<column name="title">ESB Static Router</column>
<column name="contents">
                        
                            In order to replace the use of the StaticRouter in Fuse Service Works, you should use Camel to route messages.

                            Further information is available in the [Camel Integration Patterns Documentation](http://camel.apache.org/enterprise-integration-patterns.html).
                        
                    </column></rule>

<rule><column name="id">soa-p-49000</column>

<column name="title">ESB SOAPProcessor</column>
<column name="contents">
                        
                            In order to replace the use of the SOAPProcessor you should use a SOAP reference binding in Fuse Service Works.

                            For more information, see the
                            [Fuse Service Works Development Guide](https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Gateways.html#sect-SOAP).
                        
                    </column></rule>

<rule><column name="id">soa-p-50000</column>

<column name="title">ESB SOAPClient</column>
<column name="contents">
                        
                            In order to replace the use of the SOAPClient in Fuse Service Works, you should use a SOAP reference binding.

                            For more information, see the
                            [Fuse Service Works Development Guide](https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse_Service_Works/6.0/html/Development_Guide_Volume_1_SwitchYard/chap-Gateways.html#sect-SOAP).
                        
                    </column></rule>


<rule><column name="id">java-rmi-00000</column>

<column name="title">Java Remote Method Invocation API usage</column>
<column name="contents">Java RMI should be avoided in OpenShift environments, as it tends to lead to tightly-coupled stateful applications with scalability problems. Consider replacing it with a solution using RESTful APIs or message queues.
                    </column></rule>

<rule><column name="id">java-rmi-00001</column>

<column name="title">Java RMI class</column>
<column name="contents">Java RMI should be avoided in OpenShift environments, as it tends to lead to tightly-coupled stateful applications with scalability problems. Consider replacing it with a solution using RESTful APIs or message queues.
                    </column></rule>


<rule><column name="id">local-storage-00001</column>

<column name="title">Java APIs for local file system</column>
<column name="contents">Java APIs for local file system identified in the file.
                    
                    Local files in containers are not permanent storage and can disappear when an instance of the application terminates. Avoid accessing local filesystems from applications running in OpenShift environments, and consider using a database or cloud-based storage system instead.
                    </column></rule>

<rule><column name="id">local-storage-00002</column>

<column name="title">Used class java.net.URL/URI with local path</column>
<column name="contents">Java API for java.net.URL/URI with local path identified in the file.
                    
                    Local files in containers are not permanent storage and can disappear when an instance of the application terminates. Avoid accessing local filesystems from applications running in OpenShift environments, and consider using a database or cloud-based storage system instead.
                    </column></rule>

<rule><column name="id">local-storage-00003</column>

<column name="title">Detected local file system paths</column>
<column name="contents">Detected local file system path in the file.
                    
                    Local files in containers are not permanent storage and can disappear when an instance of the application terminates. Avoid accessing local filesystems from applications running in OpenShift environments, and consider using a database or cloud-based storage system instead.
                    </column></rule>

<rule><column name="id">local-storage-00004</column>

<column name="title">Detected URL with local file system path</column>
<column name="contents">Detected URL with local file system path.
                    
                    Local files in containers are not permanent storage and can disappear when an instance of the application terminates. Avoid accessing local filesystems from applications running in OpenShift environments, and consider using a database or cloud-based storage system instead.
                    </column></rule>


<rule><column name="id">hibernate-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#Migrate_Your_Hibernate_33x_Application_to_Hibernate_4x</column>

<column name="title">@Type(type=text) is deprecated in Hibernate 4</column>
<column name="contents">
                         In versions of Hibernate prior to 3.5, text type was mapped to JDBC CLOB. A new Hibernate type, materialized_clob, was added in Hibernate 4 to map Java String properties to JDBC CLOB. Therefore, Hibernate 4 text LOB type definitions should be defined using `@Lob`, instead.
                     </column></rule>

<rule><column name="id">hibernate-02000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#Migrate_Your_Hibernate_33x_Application_to_Hibernate_4x</column>

<column name="title">Hibernate 4 projection return types</column>
<column name="contents">
                         The return types of the numeric aggregate criteria projections has changed to Long in hibernate 4. This change may introduce conflicts in the code.
                     </column></rule>

<rule><column name="id">hibernate-03000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#Migrate_Your_Hibernate_3.5.x_Application_to_Hibernate_4.x</column>

<column name="title">The initial naming strategy was changed from DefaultNamingStrategy to EJB3NamingStrategy in Hibernate 4</column>
<column name="contents">
                         The initial/default naming strategy in Hibernate 4 was changed from DefaultNamingStrategy to EJB3NamingStrategy. This can result in naming mismatches. If you rely on the naming strategy, call Configuration#setNamingStrategy.
                     </column></rule>

<rule><column name="id">hibernate-04000</column>
<column name="link">https://developer.jboss.org/wiki/HibernateCoreMigrationGuide40</column>

<column name="title">The removed classes in org.hibernate.classic package</column>
<column name="contents">The deprecated classes in org.hibernate.classic package was removed in Hibernate 4.</column></rule>

<rule><column name="id">hibernate-05000</column>

<column name="title">Replace class org.hibernate.dialect.resolver.DialectResolver</column>
<column name="contents">Replace org.hibernate.dialect.resolver.DialectResolver with org.hibernate.service.jdbc.dialect.spi.DialectResolver.</column></rule>

<rule><column name="id">hibernate-06000</column>

<column name="title">Replace class org.hibernate.jdbc.BatcherFactory and its implementations</column>
<column name="contents">Replace org.hibernate.jdbc.BatcherFactory by org.hibernate.engine.jdbc.batch.spi.BatchBuilder.
                  Their default implementations are in org.hibernate.engine.jdbc.batch.internal. 
                  You can override the default BatchBuilder by defining the  "hibernate.jdbc.batch.builder" property as the name of a BatchBuilder implementation
                   or by providing a BatchBuilder in a custom ServiceRegistry.
                  </column></rule>

<rule><column name="id">hibernate-07000</column>

<column name="title">Replace class org.hibernate.jdbc.Batcher and its implementations</column>
<column name="contents">Replace org.hibernate.jdbc.Batcher by org.hibernate.engine.jdbc.batch.spi.Batch.
                  Their default implementations are in org.hibernate.engine.jdbc.batch.internal. 
                  </column></rule>

<rule><column name="id">hibernate-08000</column>

<column name="title">Replace class org.hibernate.engine.SessionImplementor</column>
<column name="contents">Replace org.hibernate.engine.SessionImplementor with org.hibernate.engine.spi.SessionImplementor
               </column></rule>

<rule><column name="id">hibernate-09000</column>

<column name="title">Replace class org.hibernate.connection.{classname}</column>
<column name="contents">The classes in org.hibernate.connection package was moved to org.hibernate.service.jdbc.connections.internal in Hibernate 4</column></rule>

<rule><column name="id">hibernate-10000</column>

<column name="title">Replace class org.hibernate.collection.PersistentBag</column>
<column name="contents">The class org.hibernate.collection.PersistentBag was moved to org.hibernate.collection.internal.PersistentBag in Hibernate 4</column></rule>

<rule><column name="id">hibernate-10100</column>
<column name="link">https://developer.jboss.org/wiki/Hibernate3MigrationGuides</column>

<column name="title">Hibernate type reference net.sf.hibernate.{classname}</column>
<column name="contents">
                  This is an old Hibernate package name from version 2.x and needs to be migrated to a compatible API to Hibernate 4.x/5.x,
                  where package name is org.hibernate.
               </column>
<column name="title">Hibernate 2.x</column>
<column name="contents"/></rule>


<rule><column name="id">hibernate-xml-01000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#Migrate_Your_Hibernate_3.5.x_Application_to_Hibernate_4.x</column>

<column name="title">Hibernate: Deprecated 'string' CLOB data type</column>
<column name="contents">In versions of Hibernate prior to 3.5, text type was mapped to JDBC CLOB. A new Hibernate type, `materialized_clob`, was added in Hibernate 4 to map Java `String` properties to JDBC CLOB</column></rule>

<rule><column name="id">hibernate-xml-02000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#Migrate_Your_Hibernate_3.5.x_Application_to_Hibernate_4.x</column>

<column name="title">hibernate.jdbc.use_streams_for_binary must be set according to the provider</column>
<column name="contents">
                        If you are using Oracle and using the ```materialized_clob``` or ```materialized_blob``` properties, this global environment variable must be set to true. 
			If you are using PostgreSQL and using the CLOB or BLOB properties, this global environment variable  must be set to false. 
                    </column></rule>

<rule><column name="id">hibernate-xml-03000</column>

<column name="title">Hibernate: Removed package org.hibernate.connection</column>
<column name="contents">From Hibernate 4.0 there were moved classes from package `org.hibernate.connection` to package `org.hibernate.service.jdbc.connections.internal`.
                     You should change your Hibernate setup to replace references to the old package names.
                     </column></rule>

<rule><column name="id">hibernate-xml-04000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#Migrate_Your_Hibernate_3.5.x_Application_to_Hibernate_4.x</column>

<column name="title">Hibernate: Deprecated dtd configuration namespace</column>
<column name="contents"> Hibernate 4.0 uses http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd instead.
                     </column></rule>

<rule><column name="id">hibernate-xml-05000</column>
<column name="link">https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html-single/Migration_Guide/index.html#Migrate_Your_Hibernate_3.5.x_Application_to_Hibernate_4.x</column>

<column name="title">Hibernate: Deprecated dtd mapping namespace</column>
<column name="contents"> Hibernate 4.0 uses http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd instead.
                     </column></rule>


<rule><column name="id">kie-api-01000</column>

<column name="title">org.drools.KnowledgeBase is deprecated</column>
<column name="contents">Replace with : org.kie.api.KieBase</column></rule>

<rule><column name="id">kie-api-01001</column>

<column name="title">org.drools.event.AgendaEventListener is deprecated</column>
<column name="contents">Replace with : org.kie.api.event.rule.AgendaEventListener</column></rule>

<rule><column name="id">kie-api-01002</column>

<column name="title">AgendaEventListener is deprecated</column>
<column name="contents">Replace with : org.kie.api.event.rule.AgendaEventListener</column></rule>

<rule><column name="id">kie-api-01003</column>

<column name="title">org.drools.event.DefaultAgendaEventListener is deprecated</column>
<column name="contents">Replace with : org.kie.drools.core.event.DefaultAgendaEventListener</column></rule>

<rule><column name="id">kie-api-01004</column>

<column name="title">org.drools.event.rule.DefaultAgendaEventListener is deprecated</column>
<column name="contents">Replace with : org.kie.api.event.rule.DefaultAgendaEventListener</column></rule>

<rule><column name="id">kie-api-01005</column>

<column name="title">org.drools.event.process.ProcessEventListener is deprecated</column>
<column name="contents">Replace with : org.kie.api.event.process.ProcessEventListener</column></rule>

<rule><column name="id">kie-api-01006</column>

<column name="title">org.drools.event.process.DefaultProcessEventListener is deprecated</column>
<column name="contents">Replace with : org.kie.api.event.process.DefaultProcessEventListener</column></rule>

<rule><column name="id">kie-api-01007</column>

<column name="title">org.drools.logger.KnowledgeRuntimeLogger is deprecated</column>
<column name="contents">Replace with : org.kie.api.logger.KieRuntimeLogger</column></rule>

<rule><column name="id">kie-api-01008</column>

<column name="title">org.drools.logger.KnowledgeRuntimeLoggerFactory is deprecated</column>
<column name="contents">Replace with : org.kie.api.logger.KieLoggers</column></rule>

<rule><column name="id">kie-api-01009</column>

<column name="title">org.drools.runtime.StatefulKnowledgeSession is deprecated</column>
<column name="contents">Replace with : org.kie.api.runtime.KieSession</column></rule>

<rule><column name="id">kie-api-01010</column>

<column name="title">org.drools.runtime.StatelessKnowledgeSession is deprecated</column>
<column name="contents">Replace with : org.kie.api.runtime.KieSession</column></rule>

<rule><column name="id">kie-api-01011</column>

<column name="title">org.drools.builder.KnowledgeBuilderFactory is deprecated</column>
<column name="contents">Replace with : org.kie.internal.builder.KnowledgeBuilderFactory</column></rule>

<rule><column name="id">kie-api-01012</column>

<column name="title">org.drools.io.ResourceFactory is deprecated</column>
<column name="contents">Replace with : org.kie.internal.io.ResourceFactory</column></rule>

<rule><column name="id">kie-api-01013</column>

<column name="title">org.drools.io.ResourceType is deprecated</column>
<column name="contents">Replace with : org.kie.internal.io.ResourceType</column></rule>

<rule><column name="id">kie-api-01014</column>

<column name="title">org.drools.runtime.Environment is deprecated</column>
<column name="contents">Replace with : org.kie.api.runtime.Environment</column></rule>

<rule><column name="id">kie-api-01015</column>

<column name="title">org.drools.runtime.EnvironmentName is deprecated</column>
<column name="contents">Replace with : org.kie.api.runtime.EnvironmentName</column></rule>

<rule><column name="id">kie-api-01016</column>

<column name="title">org.drools.runtime.KnowledgeSessionConfiguration is deprecated</column>
<column name="contents">Replace with : org.kie.api.runtime.KieSessionConfiguration</column></rule>


<rule><column name="id">os-specific-00001</column>

<column name="title">Windows file system path</column>
<column name="contents">This file system path is Windows platform dependent. It needs to be replaced with a Linux-style path.</column></rule>

</root>
