<?xml version="1.0"?>
<ruleset xmlns="http://windup.jboss.org/schema/jboss-ruleset" id="java-generic-information"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            This ruleset provides analysis with respect to generic changes to be applied to Java code to run on Apache Camel 3
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-java,3.0.0.Final" />
        </dependencies>
        <sourceTechnology id="camel" versionRange="[2,3)"/>
        <targetTechnology id="camel" versionRange="[3,)"/>
    </metadata>
    <rules>
        <rule id="java-generic-information-00000">
            <when>
                <javaclass references="org.apache.camel.processor.aggregate.AggregationStrategy">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="`org.apache.camel.processor.aggregate.AggregationStrategy` has been moved" effort="1" category-id="mandatory">
                    <message>
                        The class `org.apache.camel.processor.aggregate.AggregationStrategy` has been moved to `org.apache.camel.AggregationStrategy`.
                    </message>
                    <link title="Camel 3 - Migration Guide: Generic Information" href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information" />
                    <quickfix type="REPLACE" name="AggregationStrategy-replace">
                        <replacement>org.apache.camel.AggregationStrategy</replacement>
                        <search>org.apache.camel.processor.aggregate.AggregationStrategy</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00001">
            <when>
                <javaclass references="org.apache.camel.impl.{SupportClass}">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="`org.apache.camel.impl.{SupportClass}` has been moved" effort="3" category-id="mandatory">
                    <message>
                        The class `org.apache.camel.impl.{SupportClass}` has been moved to `org.apache.camel.support.{SupportClass}`. It has been moved out of `org.apache.camel:camel-core` and into `org.apache.camel:camel-support`.
                    </message>
                    <link title="Camel 3 - Migration Guide: Migrating custom Components" href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_migrating_custom_components" />
                    <quickfix type="REPLACE" name="Support-replace">
                        <replacement>org.apache.camel.support.</replacement>
                        <search>org.apache.camel.impl.</search>
                    </quickfix>
                </hint>
            </perform>
            <where param="SupportClass" >
                <matches pattern="(BaseSelectorProducer|AsyncCallbackToCompletableFutureAdapter|BridgeExceptionHandlerToErrorHandler|DefaultAsyncProducer|DefaultComponent|DefaultConsumer|DefaultEndpoint|DefaultExchange|DefaultExchangeHolder|DefaultHeaderFilterStrategy|DefaultMessage|DefaultMessageHistory|DefaultPollingConsumerPollStrategy|DefaultPollingEndpoint|DefaultProducer|DefaultScheduledPollConsumer|DefaultScheduledPollConsumerScheduler|DefaultThreadPoolFactory|EventDrivenPollingConsumer|ExpressionAdapter|ExpressionComparator|ExpressionListComparator|ExpressionSupport|HeaderFilterStrategyComponent|HeaderSelectorProducer|LoggingExceptionHandler|MessageSupport|PollingConsumerSupport|ProcessorEndpoint|ProcessorPollingConsumer|ScheduledBatchPollingConsumer|ScheduledPollConsumer|ScheduledPollEndpoint|SimpleRegistry|SimpleUuidGeneratorSynchronizationAdapter|SynchronousDelegateProducer)" />
            </where>
        </rule>
        <rule id="java-generic-information-00002">
            <when>
                <javaclass references="org.apache.camel.builder.RouteBuilder" as="routeBuilders">
                    <location>INHERITANCE</location>
                </javaclass>
                <or>
                    <filecontent pattern=".zip({*})" from="routeBuilders"/>
                    <filecontent pattern=".gzip({*})" from="routeBuilders"/>
                </or>
            </when>
            <perform>
                <iteration over="default">
                    <hint title="`zip` and `gzip` dataformat was renamed" effort="1" category-id="mandatory">
                        <message>`zip` and `gzip` dataformats were renamed to `zipdeflater and `gzipdeflater`
                        </message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_zip_and_gzip_dataformat"
                                title="Camel 3 - Migration Guide"/>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="java-generic-information-00004">
            <when>
                <javaclass references="org.apache.camel.impl.{registry}" as="javaClass">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform over="javaClass">
                <iteration>
                    <hint title="`org.apache.camel.impl.{registry}` has been removed." effort="1" category-id="mandatory">
                        <message>
                            The class `org.apache.camel.impl.{registry}` has been removed. Use `org.apache.camel.support.DefaultRegistry` instead.
                        </message>
                        <link title="Camel 3 - Migration Guide: Generic Information"
                                href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"/>
                        <quickfix type="REPLACE" name="PropertyPlaceholderDelegateRegistry-replace">
                            <replacement>org.apache.camel.support.DefaultRegistry</replacement>
                            <search>org.apache.camel.impl.PropertyPlaceholderDelegateRegistry</search>
                        </quickfix>
                        <quickfix type="REPLACE" name="CompositeRegistry-replace">
                            <replacement>org.apache.camel.support.DefaultRegistry</replacement>
                            <search>org.apache.camel.impl.CompositeRegistry</search>
                        </quickfix>
                    </hint>
                </iteration>
            </perform>
            <where param="registry">
                <matches pattern="(PropertyPlaceholderDelegateRegistry|CompositeRegistry)"/>
            </where>
        </rule>
        <rule id="java-generic-information-00005">
            <when>
                <javaclass references="org.apache.camel.processor.loadbalancer.SimpleLoadBalancerSupport" as="javaClass">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform over="javaClass">
                <hint title="`org.apache.camel.processor.loadbalancer.SimpleLoadBalancerSupport` has been removed." effort="1"
                        category-id="mandatory">
                    <message>
                        The class `org.apache.camel.processor.loadbalancer.SimpleLoadBalancerSupport` has been removed. Use
                        `org.apache.camel.processor.loadbalancer.LoadBalancerSupport` instead.
                    </message>
                    <link title="Camel 3 - Migration Guide: Generic Information"
                            href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"/>
                    <quickfix type="REPLACE" name="LoadBalancer-replace">
                        <replacement>org.apache.camel.processor.loadbalancer.LoadBalancerSupport</replacement>
                        <search>org.apache.camel.processor.loadbalancer.SimpleLoadBalancerSupport</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00006">
            <when>
                <javaclass references="org.apache.camel.{removed}" as="javaClass">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform over="javaClass">
                <hint title="`org.apache.camel.{removed}` has been removed." effort="1"
                        category-id="mandatory">
                    <message>
                        The class `org.apache.camel.{removed}` has been removed.
                    </message>
                    <link title="Camel 3 - Migration Guide: Generic Information"
                            href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"/>
                </hint>
            </perform>
            <where param="removed">
                <matches pattern="(impl.FileWatcherReloadStrategy|support.ReloadStrategySupport)"/>
            </where>
        </rule>
        <rule id="java-generic-information-00008">
            <when>
                <javaclass references="org.apache.camel.util.toolbox.AggregationStrategies">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="`org.apache.camel.util.toolbox.AggregationStrategies` has been moved" effort="1" category-id="mandatory">
                    <message>
                        The class `org.apache.camel.util.toolbox.AggregationStrategies` has been moved to `org.apache.camel.builder.AggregationStrategies`.
                    </message>
                    <link title="Camel 3 - Migration Guide: Generic Information"
                            href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"/>
                    <quickfix type="REPLACE" name="AggregationStrategies-replace">
                        <replacement>org.apache.camel.builder.AggregationStrategies</replacement>
                        <search>org.apache.camel.util.toolbox.AggregationStrategies</search>
                    </quickfix>
                </hint>
            </perform>
        </rule><rule id="java-generic-information-00009">
            <when>
                <javaclass references="org.apache.camel.management.JmxSystemPropertyKeys">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="`org.apache.camel.management.JmxSystemPropertyKeys` has been moved" effort="1" category-id="mandatory">
                    <message>
                        The class `org.apache.camel.management.JmxSystemPropertyKeys` has been moved to ` org.apache.camel.api.management.JmxSystemPropertyKeys`.
                    </message>
                    <link title="Camel 3 - Migration Guide: Generic Information"
                            href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"/>
                    <quickfix type="REPLACE" name="AggregationStrategy-replace">
                        <replacement> org.apache.camel.api.management.JmxSystemPropertyKeys</replacement>
                        <search>org.apache.camel.management.JmxSystemPropertyKeys</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00010">
            <when>
           <filecontent pattern=".includeRoutes({*})" filename="{*}.java" />
            </when>
            <perform>
                    <hint title="`includeRoutes` method has been removed" effort="1" category-id="mandatory">
                        <message>`includeRoutes` method has been removed
                        </message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                                title="Camel 3 - Migration Guide"/>
                    </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00011">
           <when>
            <javaclass references="org.apache.camel.language.Bean" as="annotations">
                <location>IMPORT</location>
           </javaclass>
           </when>
            <perform>
                    <hint title="Annotation `org.apache.camel.language.Bean` method has been moved" effort="1" category-id="mandatory">
                        <message>Annotation `org.apache.camel.language.Bean` has been moved to `org.apache.camel.language.bean.Bean`</message>
                        <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                                title="Camel 3 - Migration Guide"/>
                        <quickfix type="REPLACE" name="AggregationStrategy-replace">
                            <replacement> org.apache.camel.language.bean.Bean</replacement>
                            <search>org.apache.camel.language.Bean</search>
                        </quickfix>
                    </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00012">
            <when>
                <javaclass references="org.apache.camel.language.Simple" as="annotations">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Annotation `org.apache.camel.language.Simple` method has been moved" effort="1" category-id="mandatory">
                    <message>Annotation `org.apache.camel.language.Simple` has been moved to `org.apache.camel.language.simple.Simple`</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                            title="Camel 3 - Migration Guide"/>
                    <quickfix type="REPLACE" name="Annotation-replace">
                        <replacement>org.apache.camel.language.simple.Simple</replacement>
                        <search>org.apache.camel.language.Simple</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00013">
            <when>
                <javaclass references="org.apache.camel.language.SpEL" as="annotations">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Annotation `org.apache.camel.language.SpEL` method has been moved" effort="1" category-id="mandatory">
                    <message>Annotation `org.apache.camel.language.SpEL` has been moved to `org.apache.camel.language.spel.SpEL`</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                            title="Camel 3 - Migration Guide"/>
                    <quickfix type="REPLACE" name="Annotation-replace">
                        <replacement>org.apache.camel.language.spel.SpEL</replacement>
                        <search>org.apache.camel.language.SpEL</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00014">
            <when>
                <javaclass references="org.apache.camel.{annotation}" as="annotations">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Annotation `org.apache.camel.{annotation}` has been moved" effort="1" category-id="mandatory">
                    <message>Annotation `org.apache.camel.{annotation}` has been moved to `org.apache.camel.spi.{annotation}`</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                            title="Camel 3 - Migration Guide"/>
                    <quickfix type="REPLACE" name="AAnnotation-replace">
                        <replacement>org.apache.camel.spi.</replacement>
                        <search>org.apache.camel.</search>
                    </quickfix>
                </hint>
            </perform>
            <where param="annotation">
                <matches pattern="(InvokeOnHeaders|InvokeOnHeader)"/>
            </where>
        </rule>
        <rule id="java-generic-information-00015">
            <when>
                <javaclass references="org.apache.camel.Constant" as="annotation">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Annotation `org.apache.camel.Constant`has been removed" effort="1" category-id="mandatory">
                    <message>Annotation `org.apache.camel.Constant` has been removed. Use `@Simple` instead.`</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                            title="Camel 3 - Migration Guide"/>
                    <quickfix type="REPLACE" name="Annotation-replace">
                        <replacement>org.apache.camel.language.simple.Simple</replacement>
                        <search>org.apache.camel.Constant</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00016">
            <when>
                <javaclass references="org.apache.camel.builder.xml.XPathBuilder" as="class">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Annotation `org.apache.camel.builder.xml.XPathBuilder`has been moved" effort="1" category-id="mandatory">
                    <message>Class `org.apache.camel.builder.xml.XPathBuilder` has been moved to `org.apache.camel.language.xpath.XPathBuilder`.</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                            title="Camel 3 - Migration Guide"/>
                    <quickfix type="REPLACE" name="XPathBuilder-replace">
                        <replacement> org.apache.camel.language.xpath.XPathBuilder</replacement>
                        <search>org.apache.camel.builder.xml.XPathBuilder</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00017">
            <when>
                <javaclass references="org.apache.camel.language.XPath" as="annotations">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Annotation `org.apache.camel.language.XPath` has been moved" effort="1" category-id="mandatory">
                    <message>Annotation `org.apache.camel.language.XPath` has been moved to `org.apache.camel.language.xpath.XPath`</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                            title="Camel 3 - Migration Guide"/>
                    <quickfix type="REPLACE" name="Xpath-Annotation-replace">
                        <replacement>org.apache.camel.language.xpath.XPath</replacement>
                        <search>org.apache.camel.language.XPath</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00018">
            <when>
                <javaclass references="org.apache.camel.builder.xml.InvalidXPathExpression" as="annotations">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Exception `org.apache.camel.builder.xml.InvalidXPathExpression` has been moved" effort="1" category-id="mandatory">
                    <message>Exception `org.apache.camel.builder.xml.InvalidXPathExpression` has been moved to `org.apache.camel.language.xpath.InvalidXPathException `</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                            title="Camel 3 - Migration Guide"/>
                    <quickfix type="REPLACE" name="InvalidXpatchExpression-Annotation-replace">
                        <replacement>org.apache.camel.language.xpath.InvalidXPathException</replacement>
                        <search> org.apache.camel.builder.xml.InvalidXPathExpression</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00019">
            <when>
                <javaclass references="org.apache.camel.processor.validation.PredicateValidationException" as="annotations">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Exception `org.apache.camel.processor.validation.PredicateValidationException` has been moved" effort="1" category-id="mandatory">
                    <message>Exception `org.apache.camel.processor.validation.PredicateValidationException` has been moved to `org.apache.camel.support.processor.validation.PredicateValidationException`</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                            title="Camel 3 - Migration Guide"/>
                    <quickfix type="REPLACE" name="PredicateValidationException-Annotation-replace">
                        <replacement>org.apache.camel.support.processor.validation.PredicateValidationException</replacement>
                        <search> org.apache.camel.processor.validation.PredicateValidationException</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
    <rule id="java-generic-information-00021">
            <when>
                <javaclass references="org.apache.camel.util.toolbox.AggregationStrategies.xslt({*})" >
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="xslt method was removed from `org.apache.camel.util.toolbox.AggregationStrategies`" effort="1" category-id="mandatory">
                    <message>xslt method was removed from `org.apache.camel.util.toolbox.AggregationStrategies`. Instead use the `XsltAggregationStrategy` from `camel-xslt` JAR directly</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information"
                            title="Camel 3 - Migration Guide"/>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00022">
            <when>
                <javaclass references="org.apache.camel.language.LanguageAnnotation">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="`org.apache.camel.language.LanguageAnnotation` has been moved" effort="1" category-id="mandatory">
                    <message>The class `org.apache.camel.language.LanguageAnnotation` has been moved to `org.apache.camel.support.language.LanguageAnnotation`. It has been moved out of `org.apache.camel:camel-core` and into `org.apache.camel:camel-support`.</message>
                    <link title="Camel 3 - Migration Guide: Migrating custom languages" href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_migrating_custom_languages" />
                    <quickfix type="REPLACE" name="LanguageAnnotation-replace">
                        <replacement>org.apache.camel.support.language.LanguageAnnotation</replacement>
                        <search>org.apache.camel.language.LanguageAnnotation</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00023">
            <when>
                <javaclass references="org.apache.camel.util.{moved}" as="javaClass">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <iteration over="javaClass">
                    <hint title="`org.apache.camel.util.{moved}` has been moved." effort="1"
                          category-id="mandatory">
                        <message>The class `org.apache.camel.util.{moved}` has been moved to `org.apache.camel.support.{moved}`. It has been moved out of `org.apache.camel:camel-core` and into `org.apache.camel:camel-support`</message>
                        <link title="Camel 3 - Migration Guide: Helpers and Support"
                              href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_helpers_and_support"/>
                        <quickfix type="REPLACE" name="camel.helpers-replace">
                            <replacement>org.apache.camel.support</replacement>
                            <search>org.apache.camel.util</search>
                        </quickfix>
                    </hint>
                </iteration>
            </perform>
            <where param="moved">
                <matches
                        pattern="(AsyncProcessorHelper|AsyncProcessorConverterHelper|EndpointHelper|EventHelper|ExchangeHelper|GZIPHelper|JsonSchemaHelper|MessageHelper|PlatformHelper|PredicateAssertHelper|ResolverHelper|ResourceHelper|UnitOfWorkHelper)"/>
            </where>
        </rule>
        <rule id="java-generic-information-00024">
            <when>
                <javaclass references="org.apache.camel.util.ServiceHelper" as="javaClass">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <iteration over="javaClass">
                    <hint title="`org.apache.camel.util.ServiceHelper` has been moved." effort="1"
                          category-id="mandatory">
                        <message>The class `org.apache.camel.util.ServiceHelper` has been moved to `org.apache.camel.support.service.ServiceHelper`. It has been moved out of `org.apache.camel:camel-core` and into `org.apache.camel:camel-api`</message>
                        <link title="Camel 3 - Migration Guide: Helpers and Support"
                              href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_helpers_and_support"/>
                        <quickfix type="REPLACE" name="camel.ServiceHelper-replace">
                            <replacement>org.apache.camel.support.service.ServiceHelper</replacement>
                            <search>org.apache.camel.util.ServiceHelper</search>
                        </quickfix>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="java-generic-information-00025">
            <when>
                <javaclass references="org.apache.camel.spi.RestProducerFactoryHelper" as="javaClass">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <iteration over="javaClass">
                    <hint title="`org.apache.camel.spi.RestProducerFactoryHelper` has been moved." effort="1"
                          category-id="mandatory">
                        <message>The class `org.apache.camel.spi.RestProducerFactoryHelper` has been moved to `org.apache.camel.support.RestProducerFactoryHelper`. It has been moved out of `org.apache.camel:camel-core` and into `org.apache.camel:camel-support`</message>
                        <link title="Camel 3 - Migration Guide: Helpers and Support"
                              href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_helpers_and_support"/>
                        <quickfix type="REPLACE" name="camel.RestProducerFactoryHelper-replace">
                            <replacement>org.apache.camel.support.RestProducerFactoryHelper</replacement>
                            <search>org.apache.camel.spi.RestProducerFactoryHelper</search>
                        </quickfix>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="java-generic-information-00026">
            <when>
                <javaclass references="org.apache.camel.util.ObjectHelper" as="javaClass">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <iteration over="javaClass">
                    <hint title="`org.apache.camel.util.ObjectHelper` has been moved." effort="1"
                          category-id="mandatory">
                        <message>The class `org.apache.camel.util.ObjectHelper` has been moved out of the `org.apache.camel:camel-core` and has been split into two classes: `org.apache.camel.support.ObjectHelper` (`org.apache.camel:camel-support`) and `org.apache.camel.util.ObjectHelper` (`org.apache.camel:camel-util`). This has been done to isolate the methods using `org.apache.camel:camel-api`.</message>
                        <link title="Camel 3 - Migration Guide: Helpers and Support"
                              href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_helpers_and_support"/>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="java-generic-information-00027">
            <when>
                <javaclass references="org.apache.camel.support.RoutePolicySupport" as="javaClass">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <iteration over="javaClass">
                    <hint title="`org.apache.camel.support.RoutePolicySupport` has been moved." effort="1"
                          category-id="mandatory">
                        <message>The class `org.apache.camel.support.RoutePolicySupport` has been moved out of `org.apache.camel:camel-core` and into `org.apache.camel:camel-support`. The return type from `startConsumer` and `stopConsumer` has been changed from boolean to void as they always returned true before.</message>
                        <link title="Camel 3 - Migration Guide: Route Policies"
                              href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_route_policies"/>
                    </hint>
                </iteration>
            </perform>
        </rule>
        <rule id="java-generic-information-00028">
            <when>
                <javaclass references="org.apache.camel.impl.ThrottlingInflightRoutePolicy" as="javaClass">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <iteration over="javaClass">
                    <hint title="`org.apache.camel.impl.ThrottlingInflightRoutePolicy` has been moved." effort="1"
                          category-id="mandatory">
                        <message>The class `org.apache.camel.impl.ThrottlingInflightRoutePolicy` has been moved to `org.apache.camel.throttling.ThrottlingInflightRoutePolicy`. It has been moved out of `org.apache.camel:camel-core` and into `org.apache.camel:camel-base`.</message>
                        <link title="Camel 3 - Migration Guide: Route Policies"
                              href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_route_policies"/>
                        <quickfix type="REPLACE" name="camel.ThrottlingInflightRoutePolicy-replace">
                            <replacement>org.apache.camel.throttling.ThrottlingInflightRoutePolicy</replacement>
                            <search>org.apache.camel.impl.ThrottlingInflightRoutePolicy</search>
                        </quickfix>
                    </hint>
                </iteration>
            </perform>
        </rule>

        <rule id="java-generic-information-00029">
            <when>
                <or>
                    <javaclass references="org.apache.camel.processor.idempotent.{moved}">
                        <location>IMPORT</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <hint title="`org.apache.camel.processor.idempotent.{moved}` has been moved" effort="1" category-id="mandatory">
                    <message>
                        The class `org.apache.camel.processor.idempotent.{moved}` has been moved to `org.apache.camel.support.processor.idempotent.{moved}`. It has been moved out of `org.apache.camel:camel-core` and into `org.apache.camel:camel-support`.
                    </message>
                    <link title="Camel 3 - Migration Guide: Idempotent repositories" href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_idempotent_repositories" />
                </hint>
            </perform>
            <where param="moved" >
                <matches pattern="(FileIdempotentRepository|MemoryIdempotentRepository)" />
            </where>
        </rule>
        <rule id="java-generic-information-00030">
            <when>
                <javaclass references="org.apache.camel.FallbackConverter">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Annotation `org.apache.camel.FallbackConverter` has been removed" effort="1" category-id="mandatory">
                    <message>Annotation `org.apache.camel.FallbackConverter` has been removed. You should use `@org.apache.camel.Converter(fallback = true)` from `org.apache.camel:camel-api` instead. You can also set `@org.apache.camel.Converter(generateLoader = true)` on the converter class to allow Camel to generate source code for loading type converters in a faster way.</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_fallback_type_converters"
                          title="Camel 3 - Migration Guide: Fallback Type Converters"/>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00031">
            <when>
                <or>
                    <!-- Spring XML -->
                    <xmlfile matches="//*/c:bean/@class[windup:matches(self::node(), 'org.apache.camel.util.toolbox.XsltAggregationStrategy')]">
                        <namespace prefix="c" uri="http://www.springframework.org/schema/beans"/>
                    </xmlfile>
                    <!-- Blueprint XML -->
                    <xmlfile matches="//*/c:bean/@class[windup:matches(self::node(), 'org.apache.camel.util.toolbox.XsltAggregationStrategy')]">
                        <namespace prefix="c" uri="http://www.osgi.org/xmlns/blueprint/v1.0.0"/>
                    </xmlfile>
                    <!-- Java-->
                    <javaclass references="org.apache.camel.util.toolbox.XsltAggregationStrategy">
                        <location>IMPORT</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <hint title="`org.apache.camel.util.toolbox.XsltAggregationStrategy` has been moved." effort="1"
                      category-id="mandatory">
                    <message>The class `org.apache.camel.util.toolbox.XsltAggregationStrategy` has been moved to `org.apache.camel.component.xslt.XsltAggregationStrategy`. It has been moved out of `org.apache.camel:camel-core` and into `org.apache.camel:camel-xslt`. When using the option `groupedExchange` on the `aggregator` EIP, the output of the aggregation is no longer stored in the exchange property `Exchange.GROUPED_EXCHANGE`. This behaviour was already deprecated from Camel 2.13 onwards.</message>
                    <link title="Camel 3 - Migration Guide: Aggregation"
                          href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_aggregation"/>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00032">
            <when>
                <or>
                    <!-- Spring XML -->
                    <xmlfile matches="//c:camelContext/c:properties">
                        <namespace prefix="c" uri="http://camel.apache.org/schema/spring"/>
                    </xmlfile>
                    <!-- Blueprint XML -->
                    <xmlfile matches="//c:camelContext/c:properties">
                        <namespace prefix="c" uri="http://camel.apache.org/schema/blueprint"/>
                    </xmlfile>
                    <!-- Java-->
                    <javaclass references="org.apache.camel.CamelContext.{get|set}Propert{y|ies}({*})" >
                        <location>METHOD_CALL</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <hint title="`org.apache.camel.CamelContext` property methods have been removed." effort="1"
                      category-id="mandatory">
                    <message>The `getProperties` and `setProperty` methods have been removed from `org.apache.camel.CamelContext`. Please use `getGlobalOptions` and `setGlobalOptions` instead</message>
                    <link title="Camel 3 - Migration Guide: CONFIGURING GLOBAL OPTIONS ON CAMELCONTEXT"
                          href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_configuring_global_options_on_camelcontext"/>
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00033">
            <when>
                <project>
                    <artifact groupId="org.apache.camel" artifactId="camel-fhir" toVersion="2"/>
                </project>
            </when>
            <perform>
                <hint title="`org.apache.camel:camel-fhir` default FHIR specification has changed from DSTU3 to R4" effort="0" category-id="information" >
                    <message>The default FHIR specification in the `org.apache.camel:camel-fhir` artifact has changed from DSTU3 to R4. Therefore if DSTU3 is desired it has to be explicitly set.</message>
                    <link title="Camel 3 - Migration Guide: FHIR" href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_fhir" />
                </hint>
            </perform>
        </rule>
        <rule id="java-generic-information-00045">
            <when>
                <javaclass references="org.apache.camel.CamelContext.{method}({*})" >
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="The methods on `CamelContext` that are related to JMX has been moved into a new `ManagedCamelContext` interface present in the `org.apache.camel:camel-management-api` artifact" effort="1" category-id="mandatory" >
                    <message>The method `org.apache.camel.CamelContext.{method}` has been moved to `org.apache.camel.api.management.ManagedCamelContext.{method}`. You can access it by adapting your CamelContext like so:

                        `ManagedCamelContext managed = context.adapt(ManagedCamelContext.class);`
                        `managed.{method}(...);`

                     If you want JMX to be enabled out of the box, `org.apache.camel:camel-management` needs to be on the classpath.
                    </message>
                    <link title="Camel 3 - Managed Camel Context" href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_jmx" />
                </hint>
            </perform>
            <where param="method" >
                <matches pattern="(getManagedCamelContext|getManagedProcessor|getManagedRoute)" />
            </where>
        </rule>
        <rule id="java-generic-information-00046">
            <when>
                <or>
                    <!-- Spring XML -->
                    <xmlfile matches="//c:bean[@class='org.apache.camel.language.simple.SimpleLanguage']/c:property[@name='functionStartToken' or @name='functionEndToken']">
                        <namespace prefix="c" uri="http://www.springframework.org/schema/beans"/>
                    </xmlfile>
                    <!-- Blueprint XML -->
                    <xmlfile matches="//c:bean[@class='org.apache.camel.language.simple.SimpleLanguage']/c:property[@name='functionStartToken' or @name='functionEndToken']">
                        <namespace prefix="c" uri="http://www.osgi.org/xmlns/blueprint/v1.0.0"/>
                    </xmlfile>
                    <!-- Java-->
                    <javaclass references="org.apache.camel.language.simple.SimpleLanguage.{languageMethods}({*})" >
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="org.apache.camel.language.simple.SimpleTokenizer.{tokenizerMethods})({*})" >
                        <location>METHOD_CALL</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <hint title="The functionality to change the simple language tokens for start/end functions has been removed." effort="1"
                      category-id="mandatory">
                    <message>The functionality to change the simple language tokens for start/end functions has been removed. The default tokens with `${xxx}` and `$simple{xxx}` is now hardcoded (optimized). The functionality to change these tokens was never really in use and would only confuse Camel users if a new syntax was used.</message>
                    <link title="Camel 3 - Migration Guide: Simple Language"
                          href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_simple_language"/>
                </hint>
            </perform>
            <where param="tokenizerMethods" >
                <matches pattern="(changeFunctionStartToken|changeFunctionEndToken)" />
            </where>
            <where param="languageMethods" >
                <matches pattern="(changeFunctionStartToken|changeFunctionEndToken|setFunctionStartToken|setFunctionEndToken)" />
            </where>
        </rule>
        <rule id="java-generic-information-00047">
            <when>
                <javaclass references="org.apache.camel.{class}" >
                    <location>ANNOTATION</location>
                    <annotation-literal name="uri" pattern="{*}"/>
                </javaclass>
            </when>
            <perform>
                <hint title="@{class}: `uri` attribute has been deprecated" effort="0" category-id="optional">
                    <message>The `uri` attribute in the @{class} annotation has been deprecated. Instead use `value`, which allows a shorthand style, from using `@{class}(uri = "jms:cheese")` to `@{class}("jms:cheese")`.</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_pojo_annotations"
                          title="Camel 3 - Pojo Annotations"/>
                </hint>
            </perform>
            <where param="class">
                <matches pattern="(Consume|EndpointInject|Produce)" />
            </where>
        </rule>
        <rule id="java-generic-information-00048">
            <when>
                <javaclass references="org.apache.camel.{class}" >
                    <location>ANNOTATION</location>
                    <annotation-literal name="ref" pattern="{*}"/>
                </javaclass>
            </when>
            <perform>
                <hint title="@{class}: `ref` attribute has been removed" effort="1" category-id="mandatory">
                    <message>The `ref` attribute in the @{class} annotation has been removed. Instead use the `ref` component in the `value` attribute, e.g @{class}("ref:myName").</message>
                    <link href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_pojo_annotations"
                          title="Camel 3 - Pojo Annotations"/>
                </hint>
            </perform>
            <where param="class">
                <matches pattern="(Consume|EndpointInject|Produce)" />
            </where>
        </rule>
        <rule id="java-generic-information-00049">
            <when>
                <javaclass references="org.apache.camel.CamelContext.{method}({*})" >
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="The methods on `CamelContext` that are related to the catalog have been moved into a new `CatalogCamelContext` interface" effort="1" category-id="mandatory" >
                    <message>The method `org.apache.camel.CamelContext.{method}` has moved to `org.apache.camel.CatalogCamelContext.{method}`. You can access it by adapting your `CamelContext` like so:

                        `CatalogCamelContext ccc = context.adapt(CatalogCamelContext.class);`
                        `ccc.{method}(...);`
                    </message>
                    <link title="Camel 3 - Catalog Camel Context" href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_camelcontext" />
                </hint>
            </perform>
            <where param="method" >
                <matches pattern="(getComponentParameterJsonSchema|getDataFormatParameterJsonSchema|getLanguageParameterJsonSchema|getEipParameterJsonSchema)" />
            </where>
        </rule>
        <rule id="java-generic-information-00050">
            <when>
                <javaclass references="org.apache.camel.CamelContext.{method}({*})" >
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="The duplicate method `org.apache.camel.CamelContext.{method}` has been removed" effort="1" category-id="mandatory" >
                    <message>The duplicate method `org.apache.camel.CamelContext.{method}` has been removed. You should use the `static` method `org.apache.camel.model.ModelHelper{method}` instead.
                    </message>
                    <link title="Camel 3 - Catalog Camel Context" href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_camelcontext" />
                </hint>
            </perform>
            <where param="method" >
                <matches pattern="(loadRoutesDefinition|loadRestsDefinition)" />
            </where>
        </rule>
        <rule id="java-generic-information-00051">
            <when>
                <javaclass references="org.apache.camel.CamelContext.{method}({*})" >
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="The methods on `CamelContext` that are related to the routes model have been moved into a new `Model` interface" effort="1" category-id="mandatory" >
                    <message>The method `org.apache.camel.CamelContext.{method}` has been moved to `org.apache.camel.model.Model.{method}`. You can access it by adapting your `CamelContext` like so:

                        `ModelCamelContext ccc = context.adapt(ModelCamelContext.class);`
                        `mcc.{method}(...);`
                    </message>
                    <link title="Camel 3 - Model Camel Context" href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_modelcamelcontext" />
                </hint>
            </perform>
            <where param="method" >
                <matches pattern="(getRouteDefinitions|getRouteDefinition|addRouteDefinitions|addRouteDefinition|removeRouteDefinitions|removeRouteDefinition|getRestDefinitions|addRestDefinitions|setDataFormats|getDataFormats|resolveDataFormatDefinition|getProcessorDefinition|setValidators|getHystrixConfiguration|setHystrixConfiguration|setHystrixConfigurations|addHystrixConfiguration|getValidators|setTransformers|getTransformers|addServiceCallConfiguration|setServiceCallConfigurations|setServiceCallConfiguration|getServiceCallConfiguration)" />
            </where>
        </rule>
        <rule id="java-generic-information-00052">
            <when>
                <javaclass references="org.apache.camel.CamelContext.{method}({*})" >
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="The methods on `CamelContext` that are intended for advanced use cases have been moved into a new `ExtendedCamelContext` interface" effort="1" category-id="mandatory" >
                    <message>The method `org.apache.camel.CamelContext.{method}` has been moved to `org.apache.camel.ExtendedCamelContext.{method}`. You can access it by adapting your `CamelContext` like so:

                        `ExtendedCamelContext ecc = context.adapt(ExtendedCamelContext.class);`
                        `ecc.{method}(...);`
                    </message>
                    <link title="Camel 3 - Extended Camel Context" href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_extended_camelcontext" />
                </hint>
            </perform>
            <where param="method" >
                <matches pattern="(setupRoutes|isSetupRoutes|getRouteStartupOrder|getManagementMBeanAssembler|addInterceptStrategy|getInterceptStrategies|getErrorHandlerExecutorService|getDataFormatResolver|setDataFormatResolver|getDefaultFactoryFinder|setFactoryFinderResolver|getFactoryFinder|getPackageScanClassResolver|setPackageScanClassResolver|setNodeIdFactory|getNodeIdFactory|getAsyncProcessorAwaitManager|setAsyncProcessorAwaitManager|getProcessorFactory|setProcessorFactory|getUnitOfWorkFactory|setUnitOfWorkFactory|getModelJAXBContextFactory|setModelJAXBContextFactory|getLogListeners|addLogListener)" />
            </where>
        </rule>
    </rules>
</ruleset>
