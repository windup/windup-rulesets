<?xml version="1.0"?>
<ruleset id="spring-boot-to-azure-system-config"
         xmlns="http://windup.jboss.org/schema/jboss-ruleset"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            Find usages of System.getenv, System.getProperty, System.setProperty, System.setProperties
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-xml,3.0.0.Final"/>
        </dependencies>
        <sourceTechnology id="springboot"/>
        <targetTechnology id="azure-spring-apps"/>
        <targetTechnology id="azure-appservice"/>
        <targetTechnology id="azure-aks"/>
        <targetTechnology id="azure-container-apps"/>
        <tag>config</tag>
    </metadata>
    <rules>
        <rule id="spring-boot-to-azure-system-config-01000">
            <when>
                <or>
                    <javaclass references="java.lang.System.getenv({*})">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="java.lang.System.getProperty({*})">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="java.lang.System.setProperty({*})">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="java.lang.System.setProperties({*})">
                        <location>METHOD_CALL</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <hint title="The application uses environment variables/system properties" category-id="optional" effort="1">
                    <message>
                        <![CDATA[
                        Review the usage of environment variables and system properties and externalize them.

                        You can inject any per-service configuration settings into each service as environment variables.

                        Any system properties that the code depends on will need to be defined in JVM options.
                        ]]>
                    </message>

                    <link title="Configure per-service secrets and externalized settings" href="https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#configure-per-service-secrets-and-externalized-settings"/>
                </hint>
            </perform>
        </rule>
    </rules>
</ruleset>
